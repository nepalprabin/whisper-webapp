{"text": " For today, I'm really delighted to introduce our third guest speaker, who's Mark Raleo-Ranzato. So he's originally from Italy and then worked at NYU with Jan Lecun and then has a post-doc with Jeffrey Hinton. So he's a very died-of-the-wall deep learning researcher. A lot of his ritual work was in areas like feature learning and Bijun, but over the last few years, he's really turned his interest to natural language processing. And in particular, in the last few years, he's worked a huge amount in looking at machine translation in general and particular machine translation for languages for which less resources are available. So I saw a talk of his about six months ago on this topic and through him and his team at Facebook, they've really got a lot of exciting new work in ways to bring neural machine translation up to the next level. And so I hope that this would be a really great opportunity for everyone to see some of the latest and most exciting techniques in neural machine translation. There's sort of the next level beyond what we talked about and you guys all did an assignment four and five for the class. So take it away with Mark Raleo. OK, thank you so much, Chris, for inviting me. Let me just put my face. I'm here. Hi, everybody. I'm going to disable it now so you can focus on the presentation. So share. I hope you should be able to see my presentation now. OK, so I'm very excited to tell you a little bit about a lot of resource machine translation. And let's start by revisiting the machine translation problem. So let's say that we want to translate between English and French. And we start with a big training set where we have a collection of sentences in English with their corresponding translation in French. And this is what we call a parallel data set. And in particular, the sentences in English, we call them source sentences, right? And the corresponding sentences in French are what we call the target sentences. And now the learning problem is about for a given sentence in English, you want to predict the corresponding sentence in French. And the way that we do that is by minimizing the cross-central p loss, which maximizes the probability of the reference human translation given the input source sentence. And we do this by stochastic learning descent using as a architecture, a sequence to sequence with attention that as far as you know, you studied and you had a long work on a few weeks ago. And then after you train this, at this time, you are given a novel English sentence and you want to produce the corresponding translation. In order to do that, we usually employ a heuristic search method like beam that tries to find approximately the target sentence that maximizes the probability given the given source sentence. So this is at the high level how machine translation works. And let's think about the assumptions that we have been making through this discussion. So the first assumption is that we are working with two fairly related languages like English and French. And the second assumption is that we have a tower disposal, a large data set of parallel sentences. Because here we are essentially doing supervised learning. And it is a beautiful example of end-to-end supervised learning that relies on the availability of a large parallel data set. And so in the world, there are more than 6,000 languages. And needless to say, most of these languages don't belong to the European family for which most of the recent research on machine translation has been focusing on. And even if you look at English, English is spoken by less than 5% of, as native languages, is spoken by less than 5% of the world population. And so if you were to count how many people speak a certain language, and you look at that histogram, it's a very heavy distribution. So even if you take the top 10 spoken languages, you find that these accounts for less than 50% of the people in the world. And now, if you look at the very far right of the tail, those are languages for which there are very few speakers. And essentially, there is not digitized data, material for you to train anything. So for those, I think it's almost hopeless, I would say. But in the middle of this tail, we have a lot of languages for which there is some digital data. And for which we don't have good ways to translate nowadays. If you think about major providers, like Google, a Yandex, Baidu, Facebook, and so on and so forth, they provide translation for the top 100 languages. So we are still very much at the far right of this non-distribution. And so if we are able to improve machine translation in the middle, I think we could do, it would be very impactful, right? But so what happens is we walk down this tail. So what happens is that the amount of data, or parallel data decreases and that correlates very much with the quality of the automatic machine translation systems that we have. And particularly, as you can see here, at some point there is actually a trusted drop in accuracy of your machine translation system. So perhaps the initial picture that we had in mind is a little different. So now if we take a fairly low resource language, like Nepali, which is the language spoken in Nepal, a lovely country, an artist of India, with more than 25 million people. So it's not as a handful of people. So first of all, the amount of training data is not as much as English friends is much, much less than that. And here, let's use a different visual representation. So let's use field rectangles with a color that corresponds to the language. So the blue rectangle is English data and the red rectangle is Nepali data. Now, in practice, the parallel data set is not just such a monolithic thing. Because some part originates in English and some parts originates in Nepali. And now let's represent the Nepali translations of English data with a nemti rectangle, where the color corresponds to the language. And whether you feel it or not depends whether this is translation is. So whether this is a human translation, or whether it is data originating in the language. So in this case, we take data that originates in English and we translate it into Nepali. And so this is the empty rectangle and the same for when you go from Nepali to English. Now, in general, the data that originates in English and the data that originates in Nepali may come from different domains. So here on the Y axis, you have the domain. And so in this example that I taught in the meta, but it's pretty indicative of what happens in practice. You may have that English sentences may come from, let's say, Bible. And so the Nepali here are translations from the Bible. And the Nepali sentences may come from parliamentary data. So you may agree with me that translating novel sentence from the Bible is not a super interesting task because the Bible is a pretty static data set, right? And so maybe we want to translate news data. And but so in practice, we don't have any parallel data in the news domain. Perhaps what we have, so what we really want to do at the end, is translate sentences from this test set that is English news into Nepali. But all we have in the news domain is at most monolingual data both in English and in Nepali. So these are English sentences that are not aligned at all with the Nepali sentences over here. You just happen to be just data that you got from news sources. And so this is a pretty complicated learning setting because you have a little bit of parallel sentences and that are in a different domain from the test set. And all you have in the domain of interest is monolingual data. And in fact, you may have also some other parallel data but in another language, let's say Hindi that is in the same family as Nepali. But maybe this parallel data is in a different domain, let's say books. And perhaps you have also monolingual data in Hindi that is also in the book domain. So in fact, what you really, in practice, what you find is that you may have a lot of languages here from which you could learn and a lot of domains. And all you want to do at the end is to be able to translate news data in English into Nepali. But you don't have any supervision for that. You don't have any label data and a parallel data for that. What you have is a bunch of data in different domains and in different languages. And so the question is, how can you leverage all these data in order to perform your original translation task? And so this is a Mondrian-like learning setting, which is pretty tricky. And this is going to be the topic of this lecture. And so there is not a very peer definition of what Lores or Smoshin translation is. Lusely speaking, a language park can be considered lower resource when the number of parallel sentences in domain is less than 10,000. And as order of magnitude. And this is very little. Particularly, if you think the modern neural machine translation systems have easily hundreds of millions of parameters. And so there are several challenges. There are challenges that pertain the data and challenges that pertain to the model design. So in terms of the data, it is very hard to get data to train. It is very hard to figure out where to get the data to train. Data that is in a domain similar to the domain that you are interested in eventually translating. If that doesn't exist, how to get data in similar languages, on other domains, and even how to get data to evaluate your system on. And on the modeling side, there is the question of course, how to learn with solito supervision, solito direct supervision at the very least, and how to operate in this framework for which you have so many languages and so many domains. So as Chris mentioned at the very beginning, my background is not really NLP. My have always been trusted in learning with less supervision. And I think working in a lot of those machine translation is at least personally a very unique opportunity. It's a very rare case in which my research agenda is aligned with an application. Because in Lorshows machine translation, you don't have much level data. And you need to make the best use of auxiliary tasks and auxiliary data in order to perform well. And this is a general problem. And at the same time, machine translation is a real application, is something that if we improve, we can really have a chance to improve a lot of applications and the life of a lot of people. So this concludes my introduction about Lorshows machine translation and the issues that we face when working on these languages be for and let me just pause for a second saying the outline of this talk was around three pillars that in a way define the cycle of research. So the first pillar is data. So I'm going to review how we can get data in particular for evaluation. So data is the prerequisite to do anything in our life as machine learner practitioners. And then afterwards, I'm going to move to the modeling. So describing some algorithms to learn on Lorshows languages. And finally, we conclude with some work on analyzing what the model does when we train on Lorshows languages. And in practice, like throughout my work here, I keep going around the circle because as I figure out the issues that we have with the data with the model, then I make a map with a data set that better fits the kind of problems that I'm interested in. And then I may go back to the modeling side to improve the models and so and so forth. And here I'm giving some references of the works that I'm presenting, not all of them. And just to be clear, this is not meant to be a chronological survey. So these are not necessarily the works that introduce a certain idea. But it's just, I would say, the most accessible entry points on the topic. And then you can go on the really the work sections to figure out if there was some semi-known paper that led to that line of research. And of course, there is quite a bit of presenter bias because most of these works have been caught or by me. So be mindful of that. That said, do you have any questions so far? I have a quick question about, I see it in the first week when the model is about free space and new long-soup on M.T. I was wondering if you could talk about the different approaches about unsupervised learning and also algorithms like cloud and work to work are possible in low resource languages. Yeah, yeah. So in this lecture, I'm going to focus on neuro. Actually, I'm not even going in the details of the architecture. I'm more talking about algorithms actually. And so these algorithms are applicable both to a neural machine translation system, as well as to statistical machine translation systems. When I go over this part, I can address a little bit your question and tell you a little bit about the differences between these two. And then in terms of methods to learn more than settings and sentence and settings, I'm going to touch very briefly on that. So at the end of the lecture, I'm going to refer to some recent work on filtering where people use sentence embedding methods. It's not a globe, but it's something similar in a way. In practice, for word embeddings, it's kind of, I would say, a prerequisite for machine translation, because if you can align word embeddings, you learn a dictionary, and that's a primitive way to do machine translation. So oftentimes, we look at those things as a good sanity check or as a simplified machine translation task. Whenever you have a reference dictionary for which you can then check the accuracy of your alignment. So if you, let me get back to you when we talk about this paper. So let's talk about data then. So let's go back to our English Nepali translation task. So there is a resource called Opus, which is a very nice, which shows the very nice collection of datasets, all publicly available in lots of languages. And when you go to this website, the Opus website, you find that for English Nepali, actually, there are 1 million parallel sentences. So maybe I like to you, telling you that this is a lot of those language. But actually, if you look at what these corpus are, you realize that pretty much half a million these sentences come from JW300, which is a religious magazine. And then you have 60,000 sentences from the Bible. And the rest come from Genome, Kedi, Ubuntu. So these are computer related materials. And so again, unless you're interested in translating novel sentences from the Bible, this is now super useful, I would say. And so one thing to note is that all these data originates from English. You have nothing that originates from the poly, first of all. And second of all, if you're interested in, let's say, translating Wikipedia, all you have is Wikipedia monolingual data, both in English and in the poly. And in the poly is not even very much. And then of course, you can add some monolingual data in another domain, like CommonCrow, which is just a dump of the internet. But again, translating between English and Nepali using publicly available data is going to be a challenge, because you don't have any in domain parallel data side. All you have is at most some in domain monolingual data. But there is an even bigger problem, which is that there is no test data. So here, we don't have reference translations in the poly to measure the quality of our machine translation system. And this is a big problem, because if you don't have a high quality or you don't have at all, that's sad. It's very hard to compare models, and it's very hard to do model selection to compare algorithms and our field is creeper. We need strong evaluation benchmarks. And so this motivated a project that's called Flores, the stands for Facebook, Law Resource, Law Resource, Evolution, Benzmer for Machine Translation, where we took Wikipedia sentences in English and translated them into Nepali and Sinala. And then we took Wikipedia sentences from Nepali, Wikipedia, and translated them into English, as well as from Sinala, Wikipedia and translated them into English. So you may say, this is a little bit boring, because what's hard about it? And tell me about tricks to do pattern modeling. But actually, you'll be surprised that this data collection process was harder and more interesting also than we thought. So it is hard because there are very few fluent professional translators in these languages, and this is not even super low resource. And so we dealt with translator agency. And typically, there are not enough people for which you can do kind of AB test into test the translation of one person with another one. That's number one. Number two, in general, it's very hard to assess automatically the quality of a translation, because we don't have enough parallel data to train machine translation system, right? And so we need to rely on other methods than a well-trained machine translation system to assess the quality. And so we built a pipeline where we would have, we would send the sentences to the translators once the translators are back. We would do several checks like fluency checks using a language model. We would check for transliteration to make sure that a sentence is not translated by simply transliterating. We would check that the language is the desired one, right? And so we would have a lot of checks like that. And then if, and of course, here there are trashes that you need to set somehow. And then for those sentences that would fail this step, we would send them back to retranslation. And so after a few iterations, so this then eventually we do also a human evaluation. And then the sentences in this evaluation bench, Markard, those that have passed all the automatic and human assessment checks. Now, it turns out that there is not even a very good literature that tells you how to collect data. And in particular, for laws or slang, which is there are a lot of issues related to the quality of the translations. And so this was a project that we thought would take us a couple of months. But instead it took us more than six months. And that's an eventually we call a validation set, a test set, and also a hidden test set, because we use this data for a WMT competition. And for that, they needed to have a test set that was not available to people to make sure that people were not cross-validating on the test set. And here's some examples of sentences. So this is from a sentence from the Sinala Wikipedia translated into English, a couple of sentences here. And it's from English Wikipedia translated into Sinala. I don't know how many people in the audience come from Sri Lanka. That could appreciate this effort. But one interesting thing that you can already see is that although this is totally anecdotal, because it's just a couple of sentences from a for Sinala in English, you can see that the topic, kind of topic distribution is different. And here you have things that would be a little unlikely in English Wikipedia. And the same is for Nepal English and English Nepali. So we have a GitHub repository where we host the data and also baseline models that we train on public available data and then tested on this floor of the benchmark. And last week we released another couple of languages, English, Pashto, English, Camar. And we are adding more and more languages in the coming months. So the point of this section is just to say that data is often time more important than design a model. Because without data, in particular, without a good evaluation benchmark, is essentially impossible to do research in this area. And collecting data is not review. It's not review the process that you use is now well established and in practice, it is hard to do. And another thing to consider, sorry, is to look at the data, look at the data when you collected and also before you start training your model. Because you may realize some issues with the quality of the translations, if you speak the language, oftentimes English is on one side. And or you may discover biases or you may discover interesting things. So always look at the data as opposed to just apply your method in a black box way. That concludes my little discussion of the data part. Are there any questions on this? If you could talk about building a language model for low resource language. Yeah, yeah, yeah. So in this case, what we did, actually, we took the common crawl data. And I think I actually don't remember exactly. So for Nepali, I think we had to concatenate the Wikipedia data and the common crawl data because the Wikipedia data was just too small. And we simply train a count-based angram. And then the count-based angram gives you, I don't know if you studied this, but it gives you the probability of more work given some fixed window of context. And then for a given sentence, we would, like, let's say, what is it? For a given sentence, you would compute the score for every work. And then the score of a sentence is simply the average probability score across all the words in the sentence. And that would give you a score. And then we would simply have a threshold on that. And so all the sentences that would score too low, that would be deemed not fluent enough, would be sent for reward. But of course, whenever you have an entity, whenever you have, you know, it's not super reliable. And if you go on languages that are even lower resource than Sinala, then you don't even have really in domain data. Like Wikipedia is not in all the languages. And then it becomes even harder. And so oftentimes, so now that we are scaling this up, we are looking at neural language models that are trained in a multilingual way and that are fine tuned on a small in domain modeling with data set, if available. But also this step is not particularly obvious how to do it. Yeah, sure. So thank you for this amazing result. But I just want to comment, because I've noticed that Wikipedia actually will have different content with different language you choose. So for example, they'll have very detailed description of some basic topic. And then in other languages, even with really commonly used language like Chinese, they'll actually just have completely different content or basically simplified content. So I'm pretty sure this is also going to happen with rarely used languages. So yeah, I just generally think that Wikipedia might not be, basically they might not be very direct reference to the translation. Yeah. Yeah. So it's an excellent point. And this is something that I'm going to discuss more in the third part of the lecture. And in a way, this is the translation problem. So we need to accept the fact that content that is originated in a certain language may have a different topic distribution than content that originates in another language. And what you want to translate is really content that originates in the source language. And so you need to live with it. That's what it is. So oftentimes in the public benchmarks, in the literature, you find that people assume that corpora are comparable. So everything that originates in English and let's say Nepali essentially comes from the same kind of sources. So it's news and it's all news talking about the senior things. But in practice, this is not true. It's not true for Wikipedia, as you correctly said. But it's also true for news, right? Because if I look at local news in Nepal and local news over here, it's quite different. So this is a general problem. And this has implications in terms of the methods that we are going to use as we will discuss later. Other questions? Or I'm not sure if I was clear. It's really hard to speak without seeing, without feedback. Please, please let me know if anything is not clear. OK, let's talk about modeling. And this is going to be most of our, where we are going to spend most of our time. So remember that we have this funky chart, where we have domain and languages. And it's a pretty complicated learning setting. And here for simplicity, we are going to focus just on English and Nepali languages. And we start with a simplest setting ever, which is supervised learning, assuming that all data is in the same domain. So perhaps you have a small training set. And the test set is in the same domain as the training set, as the parallel training set. So we denote as x the source sentence, as y, the target sentence, d. So d is the parallel data set that collects all these sentence pairs. And so this is the typical empirical risk minimization framework, whereby you do supervised learning. In this case, you minimize the percent of the loss, and you want to maximize the probability of the target sentence given the source sentence. And so a way to visualize this is to say that x is my English sentence. It goes to my encoder, decoder, and antisystem that produces a prediction. And then we have a loss that measure the discrepancy between the human reference, that you took the sentence x. You asked your translator that gave you the human reference. And so the percent of the loss measure the discrepancy between the model prediction and the human reference. Now, notice that here I'm denoting with boxes. Now model components, in this case, the blue boxes, the encoder, the processes English sentences, and the red boxes, the decoder that operates in the poly. And I just wanted to add one more thing, which is that if you don't have a lot of parallel data, you need to regularize. And so you can do a wad decay, which is pretty standard. So you kind of minimize the abnormal parameters, but there are also other methods that I think in the machine learning class, you may have seen like dropout, where you set to 0 at random hidden units in your encoder, decoder, or you can do levels smoothing, whereby you, in your cross-entropy loss, instead of, actually, should be more over here. Instead of setting as a target for the correct word, so this is the probability over the whole sequence, which you can factorize over each individual word, by the product rule. So for every word, you have the correct word that you want, sorry, at every time step, you want to predict the next word. And now instead of assigning 100% of probability on the next word, you, let's say, you assign 90% of the probability, and the remaining 10% you evenly distribute across all the remaining words, so that the model is not too overly confident. So the combinations of these two things are usually good ways to regularize the system. So that's the simplest setting. Now, let's see what happens when we have also some source side monolingual data. So here now we have an additional data set that has only sentences in the source language English. So in addition to T, now we have also MS, which is the monolingual data on the source side. So we have a bunch of axes. So typically, M is much greater than M, right? And now a typical way to use this data is to model the margin distribution of the data of X, right? And so there are many ways to do that. One way that has proved that, one way that has proven to be pretty effective in machine translation is to do denoising auto encoding. And so here the idea is that you have something similar to what we had before, except that now the input is taken from this monolingual data set, okay? And you add noise to it, and I'm going to describe the noise in a second. And then the job of the encoder decoder is simply to denoise the noisy input. And the cross-central P loss measured this discrepancy between the prediction and the actual clean input. But now notice that the decoder is not this radicoder because the decoder now is a decoder that operates in English. But the encoder does not. Now the encoder is the same that you have seen here. So again, the loss function here is very similar to before, except that the target is the clean input X. And the input is a notified version of X. So in this case, we are not predicting something in a poly by something in English. So this is a, if you want, a limitation of this work. But this is useful because you are anyway doing some good modeling of the input sentences. And you're going to train the encoder parameters that are going to be shared with your supervised system. So the encoder is shared between the translation task on parallel data, right? And the denosional code in task. So essentially you have an encoder and two decoders. One that operates in a poly, one that operates in English. And so in terms of noise, there are essentially two types of noise that we have been using our work. Others are possible. In the simplest case, you can drop words or swap words. So assume that the input sentences is the cassette on the mat. Then if you swap words, you may provide the input on set mat. And so here the encoder, the code needs to understand a little bit of the syntax, the grammatical rules in order to reorder. If you drop, let's say you drop the last word, the cassette on the, then the model needs to understand a little bit of the semantics because it needs to assign higher probability to mat now, right? And so you can see that there is a little bit of, so there are two hyper parameters here. So one, actually, there are several ways to use denosional encoding. So you can use denosional encoding as a way to pre-training encoder. Or you can use it as auxiliary loss when you do supervised learning. So you can have this term plus lambda this term. Okay, so both ways are fine. And so there is a very critical hyper parameter here, which is the level noise. If you don't have any noise or if the noise level is too low, then this task is trivial because of the attention, you can simply copy the input. And so the encoder and the code don't need to learn anything. If the noise level is too high, then you destroy the input here. So the encoder is not useful. You just do language modeling using the decoder. But remember that this decoder is then not used for translation because what you use in the machine translation system is the encoder box, right? The encoder module. Okay, so there are other ways to use source. Side monolingual data. In addition to the noisy of encoding, you could also do a set training, which is a method that comes from the 90s, if not earlier. And the idea is very simple. So again, you take a sentence from your source side monolingual data set. And you add noise to it and then you have an encoder decoder that. Tries to this time translate from this noisy input. Okay, and now what's the reference? The reference is given by a stale version of your machine translation system. Okay, where the reference is produced by let's say beam. And so the central p loss is then going to measure the discrepancy between your prediction and what. The prediction from from a stale version of your system gave. The reason why this works is that when you do beam, you actually typically. Produce better quality. Uh, outputs. And so when you train now this encoder decoder by cross entropy loss, you're going to learn the decoding process. Okay, and so this is something. Good for you. In addition, when you train you inject noise and the noise is regularizing. So you're going to be able to see the difference. So you're going to see the difference. So you're going to see the difference. And so if you're predicting correctly one sentence now also nearby sentences, but nearby I mean sentences that are sooner phrases or have a good overlap. With the current sentence are going to be more likely predicted correctly. And so we have this paper where we analyze a little bit of this aspects. And so the algorithm is very simple. So you can train your machine translation system on the parallel data. And then you repeat the following process. So first you decode your monolingual data set using your current machine translation system. And you make a new parallel data set of sentences from your monolingual data set with, sorry, with the translations from your current system. And then you retrain the model this pure white pure white given X on the union of your original parallel data plus this auxiliary data set. And so here you have two hyper parameters. One is the noise level and the other is the hyper parameters that weight this auxiliary data set. So this is a training loss. Now let's so that's that concludes how we can use source Simon in will data. Let me say a word about how we can use target Simon on in will data. So you could use the target Simon in will data to train a language model and then train the machine translation system in the residual space of this language model. By turns out that there is a much more effective way to leverage this data. And that's called back translation. At the high level it works as follows so you take a sentence from your target Simon in will data set white here. And on the part of the data set you train also back or machine translation system that goes from the party to English. Okay, so that's so now you have a red and colder at the x Nepali and the blue decoder that works in the English space. So you map the sentencing into English. It's the policy sentencing to English and now this may not be a correct translation path. It's a noisy input that you feed to your encoder decoder that you want to train. And so now the input is noisy but the target here is clean because it comes from the original target Simon in will data set. So this is a very powerful algorithm. Because. Unlike saltraining here the target circling but the input is a little noisy and that's usually much better than having clean inputs but noisy targets right because the targets affect essentially all the other signals that you propagate through the NMT systems. And you can see that translation is a way to do that augmentation because you produce noise a version of inputs for a given target a little bit like envision where they do. I guess this is not the right audience to do this analogy but it should work on vision you will do scaling rotation different cropping and that's a little bit similar to what we're doing here. The algorithm again is you train a backward and forward machine translation system on the parallel data and then you use your backward model to decode the target side modeling with the set to produce an auxiliary parallel data set. And then you concatenate the two data sets the original parallel data set and the auxiliary one to train the new forward model. So you can combine. Set training and bad translation so if you have both source modeling with the set and target modeling with the set. You can do the following so you can use the parallel data to train the forward and the backward machine translation system and then at the step to you can use the forward model to decode to translate the source at modeling with the set into this data. And then you use the backward machine translation system to translate the target same on the ingot data set into these translations. And then you treat this parallel sentences as real data and you concatenate them to the parallel data set. And now you retrain both the forward and the backward machine translation systems. And as long as this to improve then you can go and do another iteration whereby you again you really code you translate the source and the target side modeling with the sets and then you go and you retrain them. And this is as far as no, the most effective way to leverage modeling with data in law resource languages nowadays. And let me talk a little bit about how we can do multilingual training. So in this case, we have parallel data sets on different language pairs. And so you have a parallel data set for English Nepali one for English Hindi one for Hindi English or Nepali Hindi or any subset of this. This is super simple. So the way that it works is that you have a single encoder and the single decoder. And you train by supervised learning. The only change that needs to be made is that at the input of the encoder you concatenate also a token that specifies the language in which you want to translate. And so the encoder will learn to process multiple languages. The decoder will learn to do to produce multiple languages as well. And we pick the language based on the token specified by Indian code input. And so training is just minimizing the cross entropy loss for all the parallel data sets that you have where you simply add an extra token in the source sentence that specifies the target language that you want to translate. And the only thing that I wanted to add on this is that oftentimes it types if you preprocess the data by I'm not sure if you learn about by parent coding sentence pieces essentially waste to segment words into syllables or frequent. And so if you concatenate this data in order to learn these ways to segment the data, then it's also possible that for many languages, there is a good fraction addiction that is shared. And so this also helps making sure that you can do a good job translating multiple languages at once at once. And so my conclusion so far is that even without domain effect, there are a lot of training paradigms depending on the available data that you have. And so for the diary, it's very hard to tell which method works best nowadays because it really depends on how much data you have, how different are the domains and what is the language part that you're working with. For instance, the domains may be very different, but if you have a lot of data, maybe it doesn't matter much. And one of these we have key ingredients, the noise in auto encoding, bad translation, multilingual training that work pretty well. And nowadays the field is at the stage in which we are trying to figure out the best way to combine them. And right now there is a lot of what I would say craftsmanship to figure out how to best combine them. But hopefully we can find out. And I think there is a lot of effort in trying to automate this process because right now. There is a lot of cross validation would say to figure out all these hyper parameters. So the open challenges here are dealing with the diversity of domains, a dealing with data sets that have very wildly different translation quality, some are very noisy, some are very clean dealing with different with data sets of different size and very different language pairs. And yeah, and so I would say that in general it may be counterintuitive, but working in low resource machine translation doesn't mean training small models on small data, but actually means training even bigger models on even more data because you need to compensate for the lack of supervision that you have of direct supervision that you have. Very good. Before I go on, are there any questions? Yeah, I just had a quick question regarding in the in a few of the previous algorithms that you described. Is it necessary to retrain entirely like retrain the model entirely or is there some way to augment the model or fine tune it on the on the generated. So actually, what usually happens is that as you iterate, you can make the model bigger. So when you train on the parallel data set, usually this is not much data and so you need to train in something smaller, why is your overfed too much. Once you add the monolingual data that you this 80 data set, then this model can be much bigger than your original model. Now, it's not super obvious how to, you know, initialize a bigger model from a smaller model. So that's why people usually initialize from random at the next iterations, you can initialize from the model at the previous interaction. What we usually find is that initializing at random usually works as well. Thank you. Thank you. Okay, any other question. When you say, usually the model learns, I was wondering, do you mean that you add more layers of the more parameters as the model keeps training. So usually you just make it bigger. Yeah. Yeah, the more layers more parameter. So whether it is wider or deeper. I think usually, yeah, I'm not entirely sure there is a definite answer on that. Usually making the encoder deeper is a good thing. Making the decoder deeper doesn't buy you much. So usually we play with encoder, I would say. But yeah, there is not so much difference in practice, I would say. So you can imagine just double the size of your hidden state that would work. Okay, so let's see how this. So I didn't speak about models, but I spoke about algorithms. You can turn this algorithms into models a little bit and talk about joint distribution, March on distribution. But in my view, it's just simpler to think in terms of algorithms, because also the way that we implement them. And so let's see how these algorithms can be put together in some interesting case studies. So actually, I realized that I'm really going slow. So let's see the case where you only have monolingual data and no parallel data. So this is what we call unsupervised machine translation. So let's say that you have an English and a French data set. This is not a typical use case of a supervised machine translation, but this is where it works really well. So let's focus for this for now. And so you take a sentence from the target seminal in all data set, you go through your encoder decoder and you produce an English translation. Obviously, you don't have the reference here. So what you could do is to feed this to a machine translation system that goes from English to French so that you kind of reconstruct your original French sentence. And now you have you can have another signal to back propagate through your machine translation system. You can do the same going from English to French to English. This is very much what people have done in vision, the code, a psycho consistency. You can see this as a note encoder where the intermediate representation is, you know, is a language in English. The problem is that as it is, the model is not constrained to produce something that is fluent English sentence. So in the vision of main people use adversarial training, but in an LTE, it's kind of tricky because this is a discrete sequence. And so in order to make sure that this decoder produces English fluent English sentences, you could imagine to do the noisy auto encoding. So you could take a, you could take an English sentence, notified what through your denoysed auto encoding now this decoder is the same block that you appear is going to be forced to learn the statistics and the regularities of the English language. The problem is that if you look at this decoder, this decoder is in the denoysed auto encoding game, it is operating on the output of this encoder that takes English as input while here encoder takes French as input. It could be very well be the case that the representation produced by these two encoders is different. So this decoder may work very well in this setting, but not in this setting. And so in other ways, how can we make sure that this red and blue blocks are interchangeable? How can we make sure that there is good modularity. So one way to do this is to use the trick that we use for multilingual training, whereby we have a single encoder and a single decoder. So the decoder is shared across France and English and the encoder is shared across English and France. And we specify the target language by an extra token at the input. And so in particular, if you learn common BPS and if you share parameters, then this process, sorry, this process really works well and you have an encoder that operates well with whenever it is fed with the hidden state that comes from an encoder operating on English or French. And so again, the key ingredients are iterative by translation, the noise encoding and multilingual training. And for supervised machine translation, we do. And so when you do this on English friends, you find that as you you can get pretty good performance, a blue of 30, usually key is you pretty fluent translations that are also adequate. And if you compare that to what you got with the supervised baseline that is trained on the parallel data set, you find that training on 10 million monolingual sentences in English and 10 million French gives you the same translation accuracy, then training a supervised baseline that is this red curve. Actually, this red curve, this blue curve and this red curve, this is the new version, this is the place base version with 100,000 parallel sentences. So in other words, each parallel sentence, bar is equivalent to 100 monolingual sentences. So in the sense that they give you a machine translation system of similar accuracy. And so now the more the domains are different and the more the languages are different from each other, the words it gets. That's why when you do loads of machine translation, this is the extreme case of unsupervised machine translation, you need to learn from lots of data in order to compensate for the lack of direct supervision. And maybe give you an example on Flores where for the Flores, as we have seen, there was no in domain parallel data. There was some monolingual data that was in domain, but not very much. And there was quite a bit of auto domain parallel data. Do you remember the one million sentences from Bible and Ubuntu. And then we have quite a bit of monolingual data that is auto domain. And so this is the supervised baseline unsupervised machine translation here didn't work at all because very much like was mentioned that the Wikipedia domains are not quite aligned. So this doesn't have unsupervised machine translation. If you do back translation, if you do iterative, but transition, you do quite a bit better than the supervised baseline, which is quite good. And you add also English Hindi parallel data, you do quite a bit better. And now also the unsupervised machine translation works. It's unsupervised for English Nepali, but you do have supervision for English Hindi. And so the combination of back translation and multilingual training is here, the winning combination. And this is something that we see through in general. So I'm going to skip the results on English bar means actually, I had a nice demo, but I'm going to show it to you later if there is time. And so, as I said, we have quite a few good components, which we can combine pretty easily. And now the research is about how to best combine them, how to best weight data sets, how to best weight examples in order to automate the current cross validation based process, I would say. And the other message here is that it's, Lorenzo's machine translation is a big data problem. It requires big compute. It's a pretty big engineering feat in order to compensate for the lack of parallel data. Are there any questions on this? I was just wondering when you mentioned that the parallel to vision in cycle consistency, you mentioned that we can't do adversarial training. And I was just wondering if you could flush that out and why we couldn't just use say like an LSTM and performs adversarial training. Yeah, yes, yes, so there are actually a bunch of papers trying to do adversarial training or guns, dial training for text generation. I must say that it's a pretty active research area. I haven't seen a very compelling demonstration that this methods work very well with tried. It's a little difficult to propagate. So when this produces a sentence, you need to produce, you know, a sentence and that's discrete. And so you could propagate using reinforced kind of methods. You could do a lot of these things, but essentially it's just a little hard to make it work. And it's very finicky. So it may work on simple data sets, but at scale, it's very hard to. So another thing, another consideration is that anything that you do has to work a scale, because again, the value, the amount of information that you get from a monolingual sentence is not very much. Now, if you do a lot of compute, if you or if your gradients have a lot of noise, like when you're doing with reinforced, then it's not going to work. It's possible that people make a map with ways to make it work. I don't think this is true. A present, but it could be in the future. Let me spend five minutes on the analysis. And then you will have this slide so you can go over the remaining details. So here, we, so the starting point is to say, well, if I were to simulate Lord resource machine translation with a high resource language, like French to English, let's say you take Europe, let's say 20,000 parades sentences and 100,000 mongol target sentences, and you play by translation, you got a very nice improvement. Now, if you come here, Facebook, and you try this on Facebook data, you find that the improvement is actually very, very minimal. And that relates to the discussion that we had at the very beginning that what people talk about in different parts of the world is very different. And so now you need, it's like you need to align to point clouds, but the distribution is to point clouds is very, very different from each other. And so here I was making example that even for English speaking countries, if you look at topics on sports, you have that in America people may talk more about food, but Facebook, in the UK, more about cricket and soccer, right. For the same topic, you have a different distribution words, but you also have a different distribution of topics. And so this is what we call the source target domain mismatch. So you may have several kinds of domain mismatch. Typically, you have a mismatch between the training distribution and the test distribution. And so talking also about the mismatch between the source domain, the source language, the source domain and the target domain. Okay. And so there is a hypothesis that this may make better translation less effective because even if you were to perfectly translate target side monitoring will data once you translate is going to be auto domain. And so with respect to the data that you really want to translate, which originates in the source domain. And so we had a very nice control setting to study this problem. And so we were we create a synthetic data set where the source domain comes from your parliament data and the target domain comes from open subtitles, which are movie captions. And now by creating the target domain as a mixture of the two, you can precisely control the amount of the domain is between the source and the target domain. And by very alpha, you can vary that. And so the major result is this figure where alpha measures how much is the target domain similar to the source domain. So if I face equal to one, they are all very different. One is Europe and the other is open subtitles. And so it turns out that in this extreme regime actually said training, which is this deadline works better than back translation. But as you make the domains more and more similar, back translation is much better than said training and both of them are much better than just if you were to use the parallel data. So I'm going to skip all of this. You can look at the paper and the slides. I want to conclude that there are other things that I didn't talk about like filtering. This is one of the most exciting things nowadays. And the idea is to essentially learn a joint embedding space for sentences by simply training a multilingual system on lots of public available data. And then you use this in order to do nearest the level of three of a sentence for what the corresponding translation would be in other languages. And they found that they collected a large data set and they were able to beat the performance of state of the art machine translation system on high resource languages like English German English Russian. And the idea is that by using much more data, although noisy, you can do better than using a curated high quality data set. And this is something that we see over and over. And again, the idea here is that we need to figure out how to best combine by translation this filtering material in pre training in order to get the past combination ever for solving or for improving law resource machine translation. And so I just want to maybe I should conclude here by thanking my collaborators and by telling you that if you have any questions about this lecture, you can always email me drop me a line. I'd be happy to follow up. And also in my lab, we have a lot of opportunities from internships to full time positions as a research scientist research engineers. So if you're interested or curious, just also drop me an email. Okay, thank you. So maybe there's still a few people that might have questions and you're happy to stay a few more minutes for questions. Happy to ask your questions. Yes. I'd love to learn more about the models that you used. Actually, if you go back to the model that you first spoke about, spoke about right before back translation. I wanted to understand. You have a pipeline from English English, right? In this one, you want something like you the data augmentation techniques like in region, such as dropping the word or switching switching words to be able to make an augmented data set. That's right. So the analogy that I made is for back translation were, yes, all these methods essentially, you don't have X and what golden X and Y pairs. And so for self training, what you do, you fantasize the target for back translation, you fantasize the input. And so you can see all these methods as a way in particular, but translation is very similar to the data augmentation that people do in vision in the sense that here, the transformation is not rule based is produced by a platform machine translation system. It has the same objective of regularizing by adding a lot of noisy level data. So if you go back to the previous slide, when you say you fantasize the target. So in this case, you have one where you predict the gold target and one way you change the input and then predict the target. Yeah, so in for set training, the way that it works is that you take the clean input. And you pass it through your machine translation system at the previous iteration and you decode with beam or with other methods and you got a prediction for what the label should be. And that's now your reference. The way that you train your machine translation system is by noisy finding input. So you add noise to your input and the noise is you drop words, you swap words, and then you try to predict the target that you fantasize. And the two targets should be the same. Yeah, so the prediction and these targets when you train with cross entropy loss, you try to tie them together as much as possible. Yeah, this is a very, this is one of the first semi supervised learning methods that you find in the machine learning community. There are a lot of variants of this where they have perhaps a community of experts that produces the label. There are a lot of variants of this and it's something that makes a lot of sense, particularly for asymmetric tasks, like if you do image specific, if you do text classification, if you do summarization, then by translation is not really applicable because you know, if you go from a label category from a categorical input to a whole sentence, that's a very difficult task, right. So by translation works really well for symmetry tasks like machine translation, but for things that are for many to one mapping, it is definitely, definitely works better. I said training works well also in machine translation, when there is a lot of domain is matched between the source and the target as person. Yeah, so unfortunately, these algorithms, so it's hard to say in general what works best because it really depends on the application really depends on the kind of data that you have. Does anyone else have a question they'd like to ask? Well, it seems like we may be not doing another immediate question and I guess we have gone to the end of the time that we're meant to do it, so maybe we should call it bring it to a close, but thank you so much, Mark, or alieo. I hope everyone really enjoyed that and I, you know, speaking as someone who did work in machine translation for a decade, I haven't so much for the last few years, I mean, you know, it actually still seems to me just amazing how successfully you can build things with these building with modeling or data and using ideas like the back translation. I mean, it's just actually incredible that that's provided such competitive machine translation systems now and, you know, obviously this is something that isn't just. It's just a bit of an impact of academic interests as you might have realized if you've thought about it right if you've got a company like Facebook right being able to translate well data on domains that are very far from news data or the Bible and. And the community of speakers is just actually super duper important to people being happy users of and members of communities yeah and I just want to add the kind of these methods are pretty general so we apply them to some organization, and they start to transfer so you know it's really beautiful that it's a set of tools that you can use them in many places and it's all about in a way aligned in domains with little. Super vision of correspondences right so. Okay, thank you very much thank you thank you bye bye bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.16, "text": " For today, I'm really delighted to introduce our third guest speaker,", "tokens": [1171, 965, 11, 286, 478, 534, 18783, 281, 5366, 527, 2636, 8341, 8145, 11], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 1, "seek": 0, "start": 10.32, "end": 12.32, "text": " who's Mark Raleo-Ranzato.", "tokens": [567, 311, 3934, 497, 1220, 78, 12, 49, 3910, 2513, 13], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 2, "seek": 0, "start": 12.32, "end": 18.84, "text": " So he's originally from Italy and then worked at NYU with Jan Lecun", "tokens": [407, 415, 311, 7993, 490, 10705, 293, 550, 2732, 412, 42682, 365, 4956, 1456, 66, 409], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 3, "seek": 0, "start": 19.04, "end": 21.52, "text": " and then has a post-doc with Jeffrey Hinton.", "tokens": [293, 550, 575, 257, 2183, 12, 39966, 365, 28721, 389, 12442, 13], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 4, "seek": 0, "start": 21.52, "end": 24.96, "text": " So he's a very died-of-the-wall deep learning researcher.", "tokens": [407, 415, 311, 257, 588, 4539, 12, 2670, 12, 3322, 12, 16256, 2452, 2539, 21751, 13], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 5, "seek": 0, "start": 25.16, "end": 29.76, "text": " A lot of his ritual work was in areas like feature learning", "tokens": [316, 688, 295, 702, 13792, 589, 390, 294, 3179, 411, 4111, 2539], "temperature": 0.0, "avg_logprob": -0.38456922832288243, "compression_ratio": 1.4618834080717489, "no_speech_prob": 0.12403203547000885}, {"id": 6, "seek": 2976, "start": 29.76, "end": 34.72, "text": " and Bijun, but over the last few years, he's really turned his interest", "tokens": [293, 363, 1718, 409, 11, 457, 670, 264, 1036, 1326, 924, 11, 415, 311, 534, 3574, 702, 1179], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 7, "seek": 2976, "start": 34.72, "end": 36.88, "text": " to natural language processing.", "tokens": [281, 3303, 2856, 9007, 13], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 8, "seek": 2976, "start": 37.04, "end": 41.44, "text": " And in particular, in the last few years, he's worked a huge amount", "tokens": [400, 294, 1729, 11, 294, 264, 1036, 1326, 924, 11, 415, 311, 2732, 257, 2603, 2372], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 9, "seek": 2976, "start": 41.64, "end": 44.96, "text": " in looking at machine translation in general", "tokens": [294, 1237, 412, 3479, 12853, 294, 2674], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 10, "seek": 2976, "start": 44.96, "end": 48.0, "text": " and particular machine translation for languages", "tokens": [293, 1729, 3479, 12853, 337, 8650], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 11, "seek": 2976, "start": 48.0, "end": 50.84, "text": " for which less resources are available.", "tokens": [337, 597, 1570, 3593, 366, 2435, 13], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 12, "seek": 2976, "start": 50.84, "end": 54.8, "text": " So I saw a talk of his about six months ago on this topic", "tokens": [407, 286, 1866, 257, 751, 295, 702, 466, 2309, 2493, 2057, 322, 341, 4829], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 13, "seek": 2976, "start": 55.040000000000006, "end": 58.64, "text": " and through him and his team at Facebook,", "tokens": [293, 807, 796, 293, 702, 1469, 412, 4384, 11], "temperature": 0.0, "avg_logprob": -0.20406923294067383, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0003086095966864377}, {"id": 14, "seek": 5864, "start": 58.64, "end": 61.76, "text": " they've really got a lot of exciting new work in ways", "tokens": [436, 600, 534, 658, 257, 688, 295, 4670, 777, 589, 294, 2098], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 15, "seek": 5864, "start": 61.76, "end": 65.36, "text": " to bring neural machine translation up to the next level.", "tokens": [281, 1565, 18161, 3479, 12853, 493, 281, 264, 958, 1496, 13], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 16, "seek": 5864, "start": 65.36, "end": 68.88, "text": " And so I hope that this would be a really great opportunity", "tokens": [400, 370, 286, 1454, 300, 341, 576, 312, 257, 534, 869, 2650], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 17, "seek": 5864, "start": 68.88, "end": 72.24, "text": " for everyone to see some of the latest and most exciting techniques", "tokens": [337, 1518, 281, 536, 512, 295, 264, 6792, 293, 881, 4670, 7512], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 18, "seek": 5864, "start": 72.24, "end": 74.16, "text": " in neural machine translation.", "tokens": [294, 18161, 3479, 12853, 13], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 19, "seek": 5864, "start": 74.16, "end": 78.16, "text": " There's sort of the next level beyond what we talked about", "tokens": [821, 311, 1333, 295, 264, 958, 1496, 4399, 437, 321, 2825, 466], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 20, "seek": 5864, "start": 78.16, "end": 81.6, "text": " and you guys all did an assignment four and five for the class.", "tokens": [293, 291, 1074, 439, 630, 364, 15187, 1451, 293, 1732, 337, 264, 1508, 13], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 21, "seek": 5864, "start": 81.6, "end": 84.0, "text": " So take it away with Mark Raleo.", "tokens": [407, 747, 309, 1314, 365, 3934, 497, 1220, 78, 13], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 22, "seek": 5864, "start": 84.0, "end": 86.48, "text": " OK, thank you so much, Chris, for inviting me.", "tokens": [2264, 11, 1309, 291, 370, 709, 11, 6688, 11, 337, 18202, 385, 13], "temperature": 0.0, "avg_logprob": -0.19625339035160286, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.002127705840393901}, {"id": 23, "seek": 8648, "start": 86.48, "end": 89.12, "text": " Let me just put my face.", "tokens": [961, 385, 445, 829, 452, 1851, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 24, "seek": 8648, "start": 89.12, "end": 90.24000000000001, "text": " I'm here.", "tokens": [286, 478, 510, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 25, "seek": 8648, "start": 90.24000000000001, "end": 91.12, "text": " Hi, everybody.", "tokens": [2421, 11, 2201, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 26, "seek": 8648, "start": 91.12, "end": 94.08, "text": " I'm going to disable it now so you can focus on the presentation.", "tokens": [286, 478, 516, 281, 28362, 309, 586, 370, 291, 393, 1879, 322, 264, 5860, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 27, "seek": 8648, "start": 96.4, "end": 98.88000000000001, "text": " So share.", "tokens": [407, 2073, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 28, "seek": 8648, "start": 100.08, "end": 103.2, "text": " I hope you should be able to see my presentation now.", "tokens": [286, 1454, 291, 820, 312, 1075, 281, 536, 452, 5860, 586, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 29, "seek": 8648, "start": 103.92, "end": 107.60000000000001, "text": " OK, so I'm very excited to tell you a little bit", "tokens": [2264, 11, 370, 286, 478, 588, 2919, 281, 980, 291, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 30, "seek": 8648, "start": 107.60000000000001, "end": 109.92, "text": " about a lot of resource machine translation.", "tokens": [466, 257, 688, 295, 7684, 3479, 12853, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 31, "seek": 8648, "start": 110.80000000000001, "end": 116.16, "text": " And let's start by revisiting the machine translation problem.", "tokens": [400, 718, 311, 722, 538, 20767, 1748, 264, 3479, 12853, 1154, 13], "temperature": 0.0, "avg_logprob": -0.26961980547223774, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0006906291819177568}, {"id": 32, "seek": 11616, "start": 116.16, "end": 118.88, "text": " So let's say that we want to translate", "tokens": [407, 718, 311, 584, 300, 321, 528, 281, 13799], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 33, "seek": 11616, "start": 118.88, "end": 121.11999999999999, "text": " between English and French.", "tokens": [1296, 3669, 293, 5522, 13], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 34, "seek": 11616, "start": 121.11999999999999, "end": 126.39999999999999, "text": " And we start with a big training set", "tokens": [400, 321, 722, 365, 257, 955, 3097, 992], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 35, "seek": 11616, "start": 126.39999999999999, "end": 129.6, "text": " where we have a collection of sentences in English", "tokens": [689, 321, 362, 257, 5765, 295, 16579, 294, 3669], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 36, "seek": 11616, "start": 129.6, "end": 132.4, "text": " with their corresponding translation in French.", "tokens": [365, 641, 11760, 12853, 294, 5522, 13], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 37, "seek": 11616, "start": 132.4, "end": 135.76, "text": " And this is what we call a parallel data set.", "tokens": [400, 341, 307, 437, 321, 818, 257, 8952, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 38, "seek": 11616, "start": 135.76, "end": 138.2, "text": " And in particular, the sentences in English,", "tokens": [400, 294, 1729, 11, 264, 16579, 294, 3669, 11], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 39, "seek": 11616, "start": 138.2, "end": 141.2, "text": " we call them source sentences, right?", "tokens": [321, 818, 552, 4009, 16579, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 40, "seek": 11616, "start": 141.2, "end": 143.04, "text": " And the corresponding sentences in French", "tokens": [400, 264, 11760, 16579, 294, 5522], "temperature": 0.0, "avg_logprob": -0.11318562341772992, "compression_ratio": 1.8465346534653466, "no_speech_prob": 0.00028150234720669687}, {"id": 41, "seek": 14304, "start": 143.04, "end": 146.79999999999998, "text": " are what we call the target sentences.", "tokens": [366, 437, 321, 818, 264, 3779, 16579, 13], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 42, "seek": 14304, "start": 146.79999999999998, "end": 153.84, "text": " And now the learning problem is about for a given sentence", "tokens": [400, 586, 264, 2539, 1154, 307, 466, 337, 257, 2212, 8174], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 43, "seek": 14304, "start": 153.84, "end": 157.2, "text": " in English, you want to predict the corresponding sentence", "tokens": [294, 3669, 11, 291, 528, 281, 6069, 264, 11760, 8174], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 44, "seek": 14304, "start": 157.2, "end": 158.39999999999998, "text": " in French.", "tokens": [294, 5522, 13], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 45, "seek": 14304, "start": 158.39999999999998, "end": 162.64, "text": " And the way that we do that is by minimizing the cross-central", "tokens": [400, 264, 636, 300, 321, 360, 300, 307, 538, 46608, 264, 3278, 12, 2207, 2155], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 46, "seek": 14304, "start": 162.64, "end": 166.32, "text": " p loss, which maximizes the probability", "tokens": [280, 4470, 11, 597, 5138, 5660, 264, 8482], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 47, "seek": 14304, "start": 166.32, "end": 170.64, "text": " of the reference human translation given the input source", "tokens": [295, 264, 6408, 1952, 12853, 2212, 264, 4846, 4009], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 48, "seek": 14304, "start": 170.64, "end": 171.92, "text": " sentence.", "tokens": [8174, 13], "temperature": 0.0, "avg_logprob": -0.24126195907592773, "compression_ratio": 1.6328502415458936, "no_speech_prob": 0.000259897846262902}, {"id": 49, "seek": 17192, "start": 171.92, "end": 175.35999999999999, "text": " And we do this by stochastic learning descent", "tokens": [400, 321, 360, 341, 538, 342, 8997, 2750, 2539, 23475], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 50, "seek": 17192, "start": 175.35999999999999, "end": 178.64, "text": " using as a architecture, a sequence to sequence", "tokens": [1228, 382, 257, 9482, 11, 257, 8310, 281, 8310], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 51, "seek": 17192, "start": 178.64, "end": 182.48, "text": " with attention that as far as you know, you", "tokens": [365, 3202, 300, 382, 1400, 382, 291, 458, 11, 291], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 52, "seek": 17192, "start": 182.48, "end": 187.6, "text": " studied and you had a long work on a few weeks ago.", "tokens": [9454, 293, 291, 632, 257, 938, 589, 322, 257, 1326, 3259, 2057, 13], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 53, "seek": 17192, "start": 187.6, "end": 191.44, "text": " And then after you train this, at this time,", "tokens": [400, 550, 934, 291, 3847, 341, 11, 412, 341, 565, 11], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 54, "seek": 17192, "start": 191.44, "end": 194.23999999999998, "text": " you are given a novel English sentence", "tokens": [291, 366, 2212, 257, 7613, 3669, 8174], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 55, "seek": 17192, "start": 194.23999999999998, "end": 197.2, "text": " and you want to produce the corresponding translation.", "tokens": [293, 291, 528, 281, 5258, 264, 11760, 12853, 13], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 56, "seek": 17192, "start": 197.2, "end": 201.6, "text": " In order to do that, we usually employ", "tokens": [682, 1668, 281, 360, 300, 11, 321, 2673, 3188], "temperature": 0.0, "avg_logprob": -0.23094836870829263, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.0003887767961714417}, {"id": 57, "seek": 20160, "start": 201.6, "end": 207.44, "text": " a heuristic search method like beam that tries to find", "tokens": [257, 415, 374, 3142, 3164, 3170, 411, 14269, 300, 9898, 281, 915], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 58, "seek": 20160, "start": 207.44, "end": 211.84, "text": " approximately the target sentence that maximizes the probability", "tokens": [10447, 264, 3779, 8174, 300, 5138, 5660, 264, 8482], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 59, "seek": 20160, "start": 211.84, "end": 217.4, "text": " given the given source sentence.", "tokens": [2212, 264, 2212, 4009, 8174, 13], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 60, "seek": 20160, "start": 217.4, "end": 221.4, "text": " So this is at the high level how machine translation works.", "tokens": [407, 341, 307, 412, 264, 1090, 1496, 577, 3479, 12853, 1985, 13], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 61, "seek": 20160, "start": 221.4, "end": 223.6, "text": " And let's think about the assumptions", "tokens": [400, 718, 311, 519, 466, 264, 17695], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 62, "seek": 20160, "start": 223.6, "end": 226.88, "text": " that we have been making through this discussion.", "tokens": [300, 321, 362, 668, 1455, 807, 341, 5017, 13], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 63, "seek": 20160, "start": 226.88, "end": 230.56, "text": " So the first assumption is that we are working with two", "tokens": [407, 264, 700, 15302, 307, 300, 321, 366, 1364, 365, 732], "temperature": 0.0, "avg_logprob": -0.199635180031381, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.00019351074297446758}, {"id": 64, "seek": 23056, "start": 230.56, "end": 233.36, "text": " fairly related languages like English and French.", "tokens": [6457, 4077, 8650, 411, 3669, 293, 5522, 13], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 65, "seek": 23056, "start": 233.36, "end": 236.96, "text": " And the second assumption is that we have a tower", "tokens": [400, 264, 1150, 15302, 307, 300, 321, 362, 257, 10567], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 66, "seek": 23056, "start": 236.96, "end": 240.0, "text": " disposal, a large data set of parallel sentences.", "tokens": [26400, 11, 257, 2416, 1412, 992, 295, 8952, 16579, 13], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 67, "seek": 23056, "start": 240.0, "end": 244.64000000000001, "text": " Because here we are essentially doing supervised learning.", "tokens": [1436, 510, 321, 366, 4476, 884, 46533, 2539, 13], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 68, "seek": 23056, "start": 244.64000000000001, "end": 248.4, "text": " And it is a beautiful example of end-to-end supervised learning", "tokens": [400, 309, 307, 257, 2238, 1365, 295, 917, 12, 1353, 12, 521, 46533, 2539], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 69, "seek": 23056, "start": 248.4, "end": 253.64000000000001, "text": " that relies on the availability of a large parallel data set.", "tokens": [300, 30910, 322, 264, 17945, 295, 257, 2416, 8952, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 70, "seek": 23056, "start": 253.64000000000001, "end": 260.52, "text": " And so in the world, there are more than 6,000 languages.", "tokens": [400, 370, 294, 264, 1002, 11, 456, 366, 544, 813, 1386, 11, 1360, 8650, 13], "temperature": 0.0, "avg_logprob": -0.2096072460742707, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.00026279164012521505}, {"id": 71, "seek": 26052, "start": 260.52, "end": 265.91999999999996, "text": " And needless to say, most of these languages", "tokens": [400, 643, 1832, 281, 584, 11, 881, 295, 613, 8650], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 72, "seek": 26052, "start": 265.91999999999996, "end": 269.0, "text": " don't belong to the European family", "tokens": [500, 380, 5784, 281, 264, 6473, 1605], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 73, "seek": 26052, "start": 269.0, "end": 272.56, "text": " for which most of the recent research on machine translation", "tokens": [337, 597, 881, 295, 264, 5162, 2132, 322, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 74, "seek": 26052, "start": 272.56, "end": 274.32, "text": " has been focusing on.", "tokens": [575, 668, 8416, 322, 13], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 75, "seek": 26052, "start": 274.32, "end": 276.91999999999996, "text": " And even if you look at English, English", "tokens": [400, 754, 498, 291, 574, 412, 3669, 11, 3669], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 76, "seek": 26052, "start": 276.91999999999996, "end": 281.28, "text": " is spoken by less than 5% of, as native languages,", "tokens": [307, 10759, 538, 1570, 813, 1025, 4, 295, 11, 382, 8470, 8650, 11], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 77, "seek": 26052, "start": 281.28, "end": 285.24, "text": " is spoken by less than 5% of the world population.", "tokens": [307, 10759, 538, 1570, 813, 1025, 4, 295, 264, 1002, 4415, 13], "temperature": 0.0, "avg_logprob": -0.17087904999895795, "compression_ratio": 1.627659574468085, "no_speech_prob": 0.0005286090890876949}, {"id": 78, "seek": 28524, "start": 285.24, "end": 291.04, "text": " And so if you were to count how many people speak", "tokens": [400, 370, 498, 291, 645, 281, 1207, 577, 867, 561, 1710], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 79, "seek": 28524, "start": 291.04, "end": 293.96000000000004, "text": " a certain language, and you look at that histogram,", "tokens": [257, 1629, 2856, 11, 293, 291, 574, 412, 300, 49816, 11], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 80, "seek": 28524, "start": 293.96000000000004, "end": 296.12, "text": " it's a very heavy distribution.", "tokens": [309, 311, 257, 588, 4676, 7316, 13], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 81, "seek": 28524, "start": 296.12, "end": 302.0, "text": " So even if you take the top 10 spoken languages,", "tokens": [407, 754, 498, 291, 747, 264, 1192, 1266, 10759, 8650, 11], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 82, "seek": 28524, "start": 302.0, "end": 304.44, "text": " you find that these accounts for less than 50%", "tokens": [291, 915, 300, 613, 9402, 337, 1570, 813, 2625, 4], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 83, "seek": 28524, "start": 304.44, "end": 305.96000000000004, "text": " of the people in the world.", "tokens": [295, 264, 561, 294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 84, "seek": 28524, "start": 305.96000000000004, "end": 313.56, "text": " And now, if you look at the very far right of the tail,", "tokens": [400, 586, 11, 498, 291, 574, 412, 264, 588, 1400, 558, 295, 264, 6838, 11], "temperature": 0.0, "avg_logprob": -0.13152117078954523, "compression_ratio": 1.565, "no_speech_prob": 0.00018562035984359682}, {"id": 85, "seek": 31356, "start": 313.56, "end": 316.24, "text": " those are languages for which there are very few speakers.", "tokens": [729, 366, 8650, 337, 597, 456, 366, 588, 1326, 9518, 13], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 86, "seek": 31356, "start": 316.24, "end": 318.92, "text": " And essentially, there is not digitized data,", "tokens": [400, 4476, 11, 456, 307, 406, 14293, 1602, 1412, 11], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 87, "seek": 31356, "start": 318.92, "end": 320.8, "text": " material for you to train anything.", "tokens": [2527, 337, 291, 281, 3847, 1340, 13], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 88, "seek": 31356, "start": 320.8, "end": 325.36, "text": " So for those, I think it's almost hopeless, I would say.", "tokens": [407, 337, 729, 11, 286, 519, 309, 311, 1920, 27317, 11, 286, 576, 584, 13], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 89, "seek": 31356, "start": 325.36, "end": 330.12, "text": " But in the middle of this tail, we have a lot of languages", "tokens": [583, 294, 264, 2808, 295, 341, 6838, 11, 321, 362, 257, 688, 295, 8650], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 90, "seek": 31356, "start": 330.12, "end": 333.44, "text": " for which there is some digital data.", "tokens": [337, 597, 456, 307, 512, 4562, 1412, 13], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 91, "seek": 31356, "start": 333.44, "end": 338.0, "text": " And for which we don't have good ways to translate nowadays.", "tokens": [400, 337, 597, 321, 500, 380, 362, 665, 2098, 281, 13799, 13434, 13], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 92, "seek": 31356, "start": 338.0, "end": 341.72, "text": " If you think about major providers, like Google,", "tokens": [759, 291, 519, 466, 2563, 11330, 11, 411, 3329, 11], "temperature": 0.0, "avg_logprob": -0.14254391868159455, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.00040952497511170805}, {"id": 93, "seek": 34172, "start": 341.72, "end": 344.76000000000005, "text": " a Yandex, Baidu, Facebook, and so on and so forth,", "tokens": [257, 398, 474, 3121, 11, 6777, 327, 84, 11, 4384, 11, 293, 370, 322, 293, 370, 5220, 11], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 94, "seek": 34172, "start": 344.76000000000005, "end": 348.20000000000005, "text": " they provide translation for the top 100 languages.", "tokens": [436, 2893, 12853, 337, 264, 1192, 2319, 8650, 13], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 95, "seek": 34172, "start": 348.20000000000005, "end": 351.72, "text": " So we are still very much at the far right", "tokens": [407, 321, 366, 920, 588, 709, 412, 264, 1400, 558], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 96, "seek": 34172, "start": 351.72, "end": 354.28000000000003, "text": " of this non-distribution.", "tokens": [295, 341, 2107, 12, 42649, 30783, 13], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 97, "seek": 34172, "start": 354.28000000000003, "end": 361.28000000000003, "text": " And so if we are able to improve machine translation", "tokens": [400, 370, 498, 321, 366, 1075, 281, 3470, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 98, "seek": 34172, "start": 361.40000000000003, "end": 363.92, "text": " in the middle, I think we could do,", "tokens": [294, 264, 2808, 11, 286, 519, 321, 727, 360, 11], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 99, "seek": 34172, "start": 363.92, "end": 366.72, "text": " it would be very impactful, right?", "tokens": [309, 576, 312, 588, 30842, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 100, "seek": 34172, "start": 366.72, "end": 369.92, "text": " But so what happens is we walk down this tail.", "tokens": [583, 370, 437, 2314, 307, 321, 1792, 760, 341, 6838, 13], "temperature": 0.0, "avg_logprob": -0.19646805111724552, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.0002716332674026489}, {"id": 101, "seek": 36992, "start": 369.92, "end": 373.84000000000003, "text": " So what happens is that the amount of data,", "tokens": [407, 437, 2314, 307, 300, 264, 2372, 295, 1412, 11], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 102, "seek": 36992, "start": 373.84000000000003, "end": 378.84000000000003, "text": " or parallel data decreases and that correlates very much", "tokens": [420, 8952, 1412, 24108, 293, 300, 13983, 1024, 588, 709], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 103, "seek": 36992, "start": 379.12, "end": 382.72, "text": " with the quality of the automatic machine translation", "tokens": [365, 264, 3125, 295, 264, 12509, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 104, "seek": 36992, "start": 382.72, "end": 384.24, "text": " systems that we have.", "tokens": [3652, 300, 321, 362, 13], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 105, "seek": 36992, "start": 384.24, "end": 386.28000000000003, "text": " And particularly, as you can see here,", "tokens": [400, 4098, 11, 382, 291, 393, 536, 510, 11], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 106, "seek": 36992, "start": 387.28000000000003, "end": 389.72, "text": " at some point there is actually a trusted drop", "tokens": [412, 512, 935, 456, 307, 767, 257, 16034, 3270], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 107, "seek": 36992, "start": 389.72, "end": 393.48, "text": " in accuracy of your machine translation system.", "tokens": [294, 14170, 295, 428, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.24206401683666087, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.0001475387834943831}, {"id": 108, "seek": 39348, "start": 393.48, "end": 404.48, "text": " So perhaps the initial picture that we had in mind is a little different.", "tokens": [407, 4317, 264, 5883, 3036, 300, 321, 632, 294, 1575, 307, 257, 707, 819, 13], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 109, "seek": 39348, "start": 404.48, "end": 408.36, "text": " So now if we take a fairly low resource language,", "tokens": [407, 586, 498, 321, 747, 257, 6457, 2295, 7684, 2856, 11], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 110, "seek": 39348, "start": 408.36, "end": 411.28000000000003, "text": " like Nepali, which is the language spoken in Nepal,", "tokens": [411, 24875, 5103, 11, 597, 307, 264, 2856, 10759, 294, 36283, 11], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 111, "seek": 39348, "start": 411.28000000000003, "end": 414.48, "text": " a lovely country, an artist of India,", "tokens": [257, 7496, 1941, 11, 364, 5748, 295, 5282, 11], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 112, "seek": 39348, "start": 414.48, "end": 417.44, "text": " with more than 25 million people.", "tokens": [365, 544, 813, 3552, 2459, 561, 13], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 113, "seek": 39348, "start": 417.44, "end": 420.48, "text": " So it's not as a handful of people.", "tokens": [407, 309, 311, 406, 382, 257, 16458, 295, 561, 13], "temperature": 0.0, "avg_logprob": -0.2652593270326272, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.00036588331568054855}, {"id": 114, "seek": 42048, "start": 420.48, "end": 425.36, "text": " So first of all, the amount of training data is not as much", "tokens": [407, 700, 295, 439, 11, 264, 2372, 295, 3097, 1412, 307, 406, 382, 709], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 115, "seek": 42048, "start": 425.36, "end": 429.0, "text": " as English friends is much, much less than that.", "tokens": [382, 3669, 1855, 307, 709, 11, 709, 1570, 813, 300, 13], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 116, "seek": 42048, "start": 429.0, "end": 432.40000000000003, "text": " And here, let's use a different visual representation.", "tokens": [400, 510, 11, 718, 311, 764, 257, 819, 5056, 10290, 13], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 117, "seek": 42048, "start": 432.40000000000003, "end": 436.84000000000003, "text": " So let's use field rectangles with a color", "tokens": [407, 718, 311, 764, 2519, 24077, 904, 365, 257, 2017], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 118, "seek": 42048, "start": 436.84000000000003, "end": 438.8, "text": " that corresponds to the language.", "tokens": [300, 23249, 281, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 119, "seek": 42048, "start": 438.8, "end": 441.64000000000004, "text": " So the blue rectangle is English data", "tokens": [407, 264, 3344, 21930, 307, 3669, 1412], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 120, "seek": 42048, "start": 441.64000000000004, "end": 445.64000000000004, "text": " and the red rectangle is Nepali data.", "tokens": [293, 264, 2182, 21930, 307, 24875, 5103, 1412, 13], "temperature": 0.0, "avg_logprob": -0.16070705368405297, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.000736152520403266}, {"id": 121, "seek": 44564, "start": 445.64, "end": 455.15999999999997, "text": " Now, in practice, the parallel data set is not just such a monolithic thing.", "tokens": [823, 11, 294, 3124, 11, 264, 8952, 1412, 992, 307, 406, 445, 1270, 257, 1108, 42878, 551, 13], "temperature": 0.0, "avg_logprob": -0.23881535232067108, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.0006266027339734137}, {"id": 122, "seek": 44564, "start": 455.15999999999997, "end": 458.68, "text": " Because some part originates in English", "tokens": [1436, 512, 644, 4957, 1024, 294, 3669], "temperature": 0.0, "avg_logprob": -0.23881535232067108, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.0006266027339734137}, {"id": 123, "seek": 44564, "start": 458.68, "end": 462.03999999999996, "text": " and some parts originates in Nepali.", "tokens": [293, 512, 3166, 4957, 1024, 294, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.23881535232067108, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.0006266027339734137}, {"id": 124, "seek": 44564, "start": 462.03999999999996, "end": 470.24, "text": " And now let's represent the Nepali translations of English data", "tokens": [400, 586, 718, 311, 2906, 264, 24875, 5103, 37578, 295, 3669, 1412], "temperature": 0.0, "avg_logprob": -0.23881535232067108, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.0006266027339734137}, {"id": 125, "seek": 44564, "start": 470.24, "end": 473.59999999999997, "text": " with a nemti rectangle,", "tokens": [365, 257, 9939, 7317, 21930, 11], "temperature": 0.0, "avg_logprob": -0.23881535232067108, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.0006266027339734137}, {"id": 126, "seek": 47360, "start": 473.6, "end": 475.88, "text": " where the color corresponds to the language.", "tokens": [689, 264, 2017, 23249, 281, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 127, "seek": 47360, "start": 475.88, "end": 477.68, "text": " And whether you feel it or not depends", "tokens": [400, 1968, 291, 841, 309, 420, 406, 5946], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 128, "seek": 47360, "start": 477.68, "end": 479.16, "text": " whether this is translation is.", "tokens": [1968, 341, 307, 12853, 307, 13], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 129, "seek": 47360, "start": 479.16, "end": 481.24, "text": " So whether this is a human translation,", "tokens": [407, 1968, 341, 307, 257, 1952, 12853, 11], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 130, "seek": 47360, "start": 481.24, "end": 486.6, "text": " or whether it is data originating in the language.", "tokens": [420, 1968, 309, 307, 1412, 4957, 990, 294, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 131, "seek": 47360, "start": 486.6, "end": 491.0, "text": " So in this case, we take data that originates in English", "tokens": [407, 294, 341, 1389, 11, 321, 747, 1412, 300, 4957, 1024, 294, 3669], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 132, "seek": 47360, "start": 491.0, "end": 492.40000000000003, "text": " and we translate it into Nepali.", "tokens": [293, 321, 13799, 309, 666, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 133, "seek": 47360, "start": 492.40000000000003, "end": 498.56, "text": " And so this is the empty rectangle and the same", "tokens": [400, 370, 341, 307, 264, 6707, 21930, 293, 264, 912], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 134, "seek": 47360, "start": 498.56, "end": 501.6, "text": " for when you go from Nepali to English.", "tokens": [337, 562, 291, 352, 490, 24875, 5103, 281, 3669, 13], "temperature": 0.0, "avg_logprob": -0.12401873457665537, "compression_ratio": 1.8285714285714285, "no_speech_prob": 0.0002766612742561847}, {"id": 135, "seek": 50160, "start": 501.6, "end": 505.92, "text": " Now, in general, the data that originates in English", "tokens": [823, 11, 294, 2674, 11, 264, 1412, 300, 4957, 1024, 294, 3669], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 136, "seek": 50160, "start": 505.92, "end": 510.52000000000004, "text": " and the data that originates in Nepali may come from different domains.", "tokens": [293, 264, 1412, 300, 4957, 1024, 294, 24875, 5103, 815, 808, 490, 819, 25514, 13], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 137, "seek": 50160, "start": 510.52000000000004, "end": 513.88, "text": " So here on the Y axis, you have the domain.", "tokens": [407, 510, 322, 264, 398, 10298, 11, 291, 362, 264, 9274, 13], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 138, "seek": 50160, "start": 513.88, "end": 517.16, "text": " And so in this example that I taught in the meta,", "tokens": [400, 370, 294, 341, 1365, 300, 286, 5928, 294, 264, 19616, 11], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 139, "seek": 50160, "start": 517.16, "end": 521.96, "text": " but it's pretty indicative of what happens in practice.", "tokens": [457, 309, 311, 1238, 47513, 295, 437, 2314, 294, 3124, 13], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 140, "seek": 50160, "start": 521.96, "end": 526.72, "text": " You may have that English sentences may come from, let's say, Bible.", "tokens": [509, 815, 362, 300, 3669, 16579, 815, 808, 490, 11, 718, 311, 584, 11, 6544, 13], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 141, "seek": 50160, "start": 526.72, "end": 530.88, "text": " And so the Nepali here are translations from the Bible.", "tokens": [400, 370, 264, 24875, 5103, 510, 366, 37578, 490, 264, 6544, 13], "temperature": 0.0, "avg_logprob": -0.17406845092773438, "compression_ratio": 1.705128205128205, "no_speech_prob": 0.0006103833438828588}, {"id": 142, "seek": 53088, "start": 530.88, "end": 535.4, "text": " And the Nepali sentences may come from parliamentary data.", "tokens": [400, 264, 24875, 5103, 16579, 815, 808, 490, 43067, 1412, 13], "temperature": 0.0, "avg_logprob": -0.23374487459659576, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.00013827718794345856}, {"id": 143, "seek": 53088, "start": 538.36, "end": 542.52, "text": " So you may agree with me that translating", "tokens": [407, 291, 815, 3986, 365, 385, 300, 35030], "temperature": 0.0, "avg_logprob": -0.23374487459659576, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.00013827718794345856}, {"id": 144, "seek": 53088, "start": 542.52, "end": 547.16, "text": " novel sentence from the Bible is not a super interesting task", "tokens": [7613, 8174, 490, 264, 6544, 307, 406, 257, 1687, 1880, 5633], "temperature": 0.0, "avg_logprob": -0.23374487459659576, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.00013827718794345856}, {"id": 145, "seek": 53088, "start": 547.16, "end": 550.28, "text": " because the Bible is a pretty static data set, right?", "tokens": [570, 264, 6544, 307, 257, 1238, 13437, 1412, 992, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.23374487459659576, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.00013827718794345856}, {"id": 146, "seek": 53088, "start": 550.28, "end": 554.64, "text": " And so maybe we want to translate news data.", "tokens": [400, 370, 1310, 321, 528, 281, 13799, 2583, 1412, 13], "temperature": 0.0, "avg_logprob": -0.23374487459659576, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.00013827718794345856}, {"id": 147, "seek": 55464, "start": 554.64, "end": 561.76, "text": " And but so in practice, we don't have any parallel data", "tokens": [400, 457, 370, 294, 3124, 11, 321, 500, 380, 362, 604, 8952, 1412], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 148, "seek": 55464, "start": 561.76, "end": 562.96, "text": " in the news domain.", "tokens": [294, 264, 2583, 9274, 13], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 149, "seek": 55464, "start": 562.96, "end": 566.12, "text": " Perhaps what we have, so what we really want to do at the end,", "tokens": [10517, 437, 321, 362, 11, 370, 437, 321, 534, 528, 281, 360, 412, 264, 917, 11], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 150, "seek": 55464, "start": 566.12, "end": 570.68, "text": " is translate sentences from this test set", "tokens": [307, 13799, 16579, 490, 341, 1500, 992], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 151, "seek": 55464, "start": 570.68, "end": 573.36, "text": " that is English news into Nepali.", "tokens": [300, 307, 3669, 2583, 666, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 152, "seek": 55464, "start": 573.36, "end": 575.88, "text": " But all we have in the news domain", "tokens": [583, 439, 321, 362, 294, 264, 2583, 9274], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 153, "seek": 55464, "start": 575.88, "end": 580.04, "text": " is at most monolingual data both in English and in Nepali.", "tokens": [307, 412, 881, 1108, 401, 278, 901, 1412, 1293, 294, 3669, 293, 294, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.16707885399293365, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0003843200975097716}, {"id": 154, "seek": 58004, "start": 580.04, "end": 585.04, "text": " So these are English sentences that are not aligned at all", "tokens": [407, 613, 366, 3669, 16579, 300, 366, 406, 17962, 412, 439], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 155, "seek": 58004, "start": 585.04, "end": 588.04, "text": " with the Nepali sentences over here.", "tokens": [365, 264, 24875, 5103, 16579, 670, 510, 13], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 156, "seek": 58004, "start": 588.04, "end": 593.92, "text": " You just happen to be just data that you got from news sources.", "tokens": [509, 445, 1051, 281, 312, 445, 1412, 300, 291, 658, 490, 2583, 7139, 13], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 157, "seek": 58004, "start": 593.92, "end": 596.52, "text": " And so this is a pretty complicated learning setting", "tokens": [400, 370, 341, 307, 257, 1238, 6179, 2539, 3287], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 158, "seek": 58004, "start": 596.52, "end": 602.12, "text": " because you have a little bit of parallel sentences", "tokens": [570, 291, 362, 257, 707, 857, 295, 8952, 16579], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 159, "seek": 58004, "start": 602.12, "end": 606.9599999999999, "text": " and that are in a different domain from the test set.", "tokens": [293, 300, 366, 294, 257, 819, 9274, 490, 264, 1500, 992, 13], "temperature": 0.0, "avg_logprob": -0.1499548206081638, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.000291554257273674}, {"id": 160, "seek": 60696, "start": 606.96, "end": 610.6800000000001, "text": " And all you have in the domain of interest", "tokens": [400, 439, 291, 362, 294, 264, 9274, 295, 1179], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 161, "seek": 60696, "start": 610.6800000000001, "end": 613.6, "text": " is monolingual data.", "tokens": [307, 1108, 401, 278, 901, 1412, 13], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 162, "seek": 60696, "start": 613.6, "end": 620.44, "text": " And in fact, you may have also some other parallel data", "tokens": [400, 294, 1186, 11, 291, 815, 362, 611, 512, 661, 8952, 1412], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 163, "seek": 60696, "start": 620.44, "end": 623.12, "text": " but in another language, let's say Hindi", "tokens": [457, 294, 1071, 2856, 11, 718, 311, 584, 36225], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 164, "seek": 60696, "start": 623.12, "end": 626.2800000000001, "text": " that is in the same family as Nepali.", "tokens": [300, 307, 294, 264, 912, 1605, 382, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 165, "seek": 60696, "start": 626.2800000000001, "end": 629.4000000000001, "text": " But maybe this parallel data is in a different domain,", "tokens": [583, 1310, 341, 8952, 1412, 307, 294, 257, 819, 9274, 11], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 166, "seek": 60696, "start": 629.4000000000001, "end": 630.4000000000001, "text": " let's say books.", "tokens": [718, 311, 584, 3642, 13], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 167, "seek": 60696, "start": 630.4000000000001, "end": 633.12, "text": " And perhaps you have also monolingual data in Hindi", "tokens": [400, 4317, 291, 362, 611, 1108, 401, 278, 901, 1412, 294, 36225], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 168, "seek": 60696, "start": 633.12, "end": 636.2800000000001, "text": " that is also in the book domain.", "tokens": [300, 307, 611, 294, 264, 1446, 9274, 13], "temperature": 0.0, "avg_logprob": -0.14729806288932135, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00024818835663609207}, {"id": 169, "seek": 63628, "start": 636.28, "end": 642.16, "text": " So in fact, what you really, in practice,", "tokens": [407, 294, 1186, 11, 437, 291, 534, 11, 294, 3124, 11], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 170, "seek": 63628, "start": 642.16, "end": 646.6, "text": " what you find is that you may have a lot of languages here", "tokens": [437, 291, 915, 307, 300, 291, 815, 362, 257, 688, 295, 8650, 510], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 171, "seek": 63628, "start": 646.6, "end": 651.64, "text": " from which you could learn and a lot of domains.", "tokens": [490, 597, 291, 727, 1466, 293, 257, 688, 295, 25514, 13], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 172, "seek": 63628, "start": 651.64, "end": 654.4399999999999, "text": " And all you want to do at the end", "tokens": [400, 439, 291, 528, 281, 360, 412, 264, 917], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 173, "seek": 63628, "start": 654.4399999999999, "end": 658.88, "text": " is to be able to translate news data in English into Nepali.", "tokens": [307, 281, 312, 1075, 281, 13799, 2583, 1412, 294, 3669, 666, 24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 174, "seek": 63628, "start": 658.88, "end": 661.16, "text": " But you don't have any supervision for that.", "tokens": [583, 291, 500, 380, 362, 604, 32675, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 175, "seek": 63628, "start": 661.16, "end": 663.9599999999999, "text": " You don't have any label data and a parallel data for that.", "tokens": [509, 500, 380, 362, 604, 7645, 1412, 293, 257, 8952, 1412, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.15771678029274455, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.00040902706678025424}, {"id": 176, "seek": 66396, "start": 663.96, "end": 667.44, "text": " What you have is a bunch of data in different domains", "tokens": [708, 291, 362, 307, 257, 3840, 295, 1412, 294, 819, 25514], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 177, "seek": 66396, "start": 667.44, "end": 668.72, "text": " and in different languages.", "tokens": [293, 294, 819, 8650, 13], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 178, "seek": 66396, "start": 668.72, "end": 673.84, "text": " And so the question is, how can you leverage all these data", "tokens": [400, 370, 264, 1168, 307, 11, 577, 393, 291, 13982, 439, 613, 1412], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 179, "seek": 66396, "start": 673.84, "end": 677.8000000000001, "text": " in order to perform your original translation task?", "tokens": [294, 1668, 281, 2042, 428, 3380, 12853, 5633, 30], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 180, "seek": 66396, "start": 677.8000000000001, "end": 681.72, "text": " And so this is a Mondrian-like learning setting,", "tokens": [400, 370, 341, 307, 257, 7492, 5501, 12, 4092, 2539, 3287, 11], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 181, "seek": 66396, "start": 681.72, "end": 684.72, "text": " which is pretty tricky.", "tokens": [597, 307, 1238, 12414, 13], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 182, "seek": 66396, "start": 684.72, "end": 689.08, "text": " And this is going to be the topic of this lecture.", "tokens": [400, 341, 307, 516, 281, 312, 264, 4829, 295, 341, 7991, 13], "temperature": 0.0, "avg_logprob": -0.12637097002512002, "compression_ratio": 1.585, "no_speech_prob": 0.0003984555078204721}, {"id": 183, "seek": 68908, "start": 689.08, "end": 695.5200000000001, "text": " And so there is not a very peer definition", "tokens": [400, 370, 456, 307, 406, 257, 588, 15108, 7123], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 184, "seek": 68908, "start": 695.5200000000001, "end": 699.24, "text": " of what Lores or Smoshin translation is.", "tokens": [295, 437, 441, 2706, 420, 3915, 3019, 259, 12853, 307, 13], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 185, "seek": 68908, "start": 699.24, "end": 702.32, "text": " Lusely speaking, a language park can be considered", "tokens": [441, 301, 736, 4124, 11, 257, 2856, 3884, 393, 312, 4888], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 186, "seek": 68908, "start": 702.32, "end": 706.44, "text": " lower resource when the number of parallel sentences in domain", "tokens": [3126, 7684, 562, 264, 1230, 295, 8952, 16579, 294, 9274], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 187, "seek": 68908, "start": 706.44, "end": 710.0, "text": " is less than 10,000.", "tokens": [307, 1570, 813, 1266, 11, 1360, 13], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 188, "seek": 68908, "start": 710.0, "end": 715.84, "text": " And as order of magnitude.", "tokens": [400, 382, 1668, 295, 15668, 13], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 189, "seek": 68908, "start": 715.84, "end": 717.6800000000001, "text": " And this is very little.", "tokens": [400, 341, 307, 588, 707, 13], "temperature": 0.0, "avg_logprob": -0.4391152231316817, "compression_ratio": 1.4438502673796791, "no_speech_prob": 7.17476723366417e-05}, {"id": 190, "seek": 71768, "start": 717.68, "end": 720.92, "text": " Particularly, if you think the modern neural machine", "tokens": [32281, 11, 498, 291, 519, 264, 4363, 18161, 3479], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 191, "seek": 71768, "start": 720.92, "end": 724.16, "text": " translation systems have easily hundreds", "tokens": [12853, 3652, 362, 3612, 6779], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 192, "seek": 71768, "start": 724.16, "end": 726.64, "text": " of millions of parameters.", "tokens": [295, 6803, 295, 9834, 13], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 193, "seek": 71768, "start": 726.64, "end": 728.3199999999999, "text": " And so there are several challenges.", "tokens": [400, 370, 456, 366, 2940, 4759, 13], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 194, "seek": 71768, "start": 728.3199999999999, "end": 730.0799999999999, "text": " There are challenges that pertain the data", "tokens": [821, 366, 4759, 300, 13269, 491, 264, 1412], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 195, "seek": 71768, "start": 730.0799999999999, "end": 733.16, "text": " and challenges that pertain to the model design.", "tokens": [293, 4759, 300, 13269, 491, 281, 264, 2316, 1715, 13], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 196, "seek": 71768, "start": 733.16, "end": 739.8399999999999, "text": " So in terms of the data, it is very hard to get data to train.", "tokens": [407, 294, 2115, 295, 264, 1412, 11, 309, 307, 588, 1152, 281, 483, 1412, 281, 3847, 13], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 197, "seek": 71768, "start": 739.8399999999999, "end": 743.92, "text": " It is very hard to figure out where to get the data to train.", "tokens": [467, 307, 588, 1152, 281, 2573, 484, 689, 281, 483, 264, 1412, 281, 3847, 13], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 198, "seek": 71768, "start": 743.92, "end": 747.28, "text": " Data that is in a domain similar to the domain", "tokens": [11888, 300, 307, 294, 257, 9274, 2531, 281, 264, 9274], "temperature": 0.0, "avg_logprob": -0.15093937459981666, "compression_ratio": 1.8384279475982532, "no_speech_prob": 0.0002228203957201913}, {"id": 199, "seek": 74728, "start": 747.28, "end": 751.0799999999999, "text": " that you are interested in eventually translating.", "tokens": [300, 291, 366, 3102, 294, 4728, 35030, 13], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 200, "seek": 74728, "start": 751.0799999999999, "end": 755.68, "text": " If that doesn't exist, how to get data in similar languages,", "tokens": [759, 300, 1177, 380, 2514, 11, 577, 281, 483, 1412, 294, 2531, 8650, 11], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 201, "seek": 74728, "start": 755.68, "end": 760.16, "text": " on other domains, and even how to get data to evaluate", "tokens": [322, 661, 25514, 11, 293, 754, 577, 281, 483, 1412, 281, 13059], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 202, "seek": 74728, "start": 760.16, "end": 761.9599999999999, "text": " your system on.", "tokens": [428, 1185, 322, 13], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 203, "seek": 74728, "start": 761.9599999999999, "end": 766.52, "text": " And on the modeling side, there is the question of course,", "tokens": [400, 322, 264, 15983, 1252, 11, 456, 307, 264, 1168, 295, 1164, 11], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 204, "seek": 74728, "start": 766.52, "end": 769.92, "text": " how to learn with solito supervision,", "tokens": [577, 281, 1466, 365, 1404, 3528, 32675, 11], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 205, "seek": 74728, "start": 769.92, "end": 772.6, "text": " solito direct supervision at the very least,", "tokens": [1404, 3528, 2047, 32675, 412, 264, 588, 1935, 11], "temperature": 0.0, "avg_logprob": -0.199876830691383, "compression_ratio": 1.6363636363636365, "no_speech_prob": 7.779450243106112e-05}, {"id": 206, "seek": 77260, "start": 772.6, "end": 777.88, "text": " and how to operate in this framework for which", "tokens": [293, 577, 281, 9651, 294, 341, 8388, 337, 597], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 207, "seek": 77260, "start": 777.88, "end": 782.5600000000001, "text": " you have so many languages and so many domains.", "tokens": [291, 362, 370, 867, 8650, 293, 370, 867, 25514, 13], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 208, "seek": 77260, "start": 782.5600000000001, "end": 789.72, "text": " So as Chris mentioned at the very beginning,", "tokens": [407, 382, 6688, 2835, 412, 264, 588, 2863, 11], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 209, "seek": 77260, "start": 789.72, "end": 791.9200000000001, "text": " my background is not really NLP.", "tokens": [452, 3678, 307, 406, 534, 426, 45196, 13], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 210, "seek": 77260, "start": 791.9200000000001, "end": 798.44, "text": " My have always been trusted in learning with less supervision.", "tokens": [1222, 362, 1009, 668, 16034, 294, 2539, 365, 1570, 32675, 13], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 211, "seek": 77260, "start": 798.44, "end": 802.28, "text": " And I think working in a lot of those machine translation", "tokens": [400, 286, 519, 1364, 294, 257, 688, 295, 729, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.251503414577908, "compression_ratio": 1.4577114427860696, "no_speech_prob": 0.00015287197311408818}, {"id": 212, "seek": 80228, "start": 802.28, "end": 806.4, "text": " is at least personally a very unique opportunity.", "tokens": [307, 412, 1935, 5665, 257, 588, 3845, 2650, 13], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 213, "seek": 80228, "start": 806.4, "end": 809.16, "text": " It's a very rare case in which my research agenda", "tokens": [467, 311, 257, 588, 5892, 1389, 294, 597, 452, 2132, 9829], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 214, "seek": 80228, "start": 809.16, "end": 811.68, "text": " is aligned with an application.", "tokens": [307, 17962, 365, 364, 3861, 13], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 215, "seek": 80228, "start": 811.68, "end": 815.8399999999999, "text": " Because in Lorshows machine translation,", "tokens": [1436, 294, 441, 830, 71, 1509, 3479, 12853, 11], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 216, "seek": 80228, "start": 815.8399999999999, "end": 817.72, "text": " you don't have much level data.", "tokens": [291, 500, 380, 362, 709, 1496, 1412, 13], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 217, "seek": 80228, "start": 817.72, "end": 821.6, "text": " And you need to make the best use of auxiliary tasks", "tokens": [400, 291, 643, 281, 652, 264, 1151, 764, 295, 43741, 9608], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 218, "seek": 80228, "start": 821.6, "end": 825.4, "text": " and auxiliary data in order to perform well.", "tokens": [293, 43741, 1412, 294, 1668, 281, 2042, 731, 13], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 219, "seek": 80228, "start": 825.4, "end": 827.76, "text": " And this is a general problem.", "tokens": [400, 341, 307, 257, 2674, 1154, 13], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 220, "seek": 80228, "start": 827.76, "end": 830.04, "text": " And at the same time, machine translation", "tokens": [400, 412, 264, 912, 565, 11, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.20506272997174943, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.00032878699130378664}, {"id": 221, "seek": 83004, "start": 830.04, "end": 833.7199999999999, "text": " is a real application, is something that if we improve,", "tokens": [307, 257, 957, 3861, 11, 307, 746, 300, 498, 321, 3470, 11], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 222, "seek": 83004, "start": 833.7199999999999, "end": 838.5999999999999, "text": " we can really have a chance to improve", "tokens": [321, 393, 534, 362, 257, 2931, 281, 3470], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 223, "seek": 83004, "start": 838.5999999999999, "end": 844.0, "text": " a lot of applications and the life of a lot of people.", "tokens": [257, 688, 295, 5821, 293, 264, 993, 295, 257, 688, 295, 561, 13], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 224, "seek": 83004, "start": 844.0, "end": 847.48, "text": " So this concludes my introduction", "tokens": [407, 341, 24643, 452, 9339], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 225, "seek": 83004, "start": 847.48, "end": 853.1999999999999, "text": " about Lorshows machine translation and the issues", "tokens": [466, 441, 830, 71, 1509, 3479, 12853, 293, 264, 2663], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 226, "seek": 83004, "start": 853.1999999999999, "end": 856.5999999999999, "text": " that we face when working on these languages", "tokens": [300, 321, 1851, 562, 1364, 322, 613, 8650], "temperature": 0.0, "avg_logprob": -0.12835245132446288, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.0003365465090610087}, {"id": 227, "seek": 85660, "start": 856.6, "end": 862.12, "text": " be for and let me just pause for a second", "tokens": [312, 337, 293, 718, 385, 445, 10465, 337, 257, 1150], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 228, "seek": 85660, "start": 862.12, "end": 866.8000000000001, "text": " saying the outline of this talk was around three pillars", "tokens": [1566, 264, 16387, 295, 341, 751, 390, 926, 1045, 26729], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 229, "seek": 85660, "start": 866.8000000000001, "end": 871.9200000000001, "text": " that in a way define the cycle of research.", "tokens": [300, 294, 257, 636, 6964, 264, 6586, 295, 2132, 13], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 230, "seek": 85660, "start": 871.9200000000001, "end": 874.52, "text": " So the first pillar is data.", "tokens": [407, 264, 700, 27592, 307, 1412, 13], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 231, "seek": 85660, "start": 874.52, "end": 880.4, "text": " So I'm going to review how we can get data", "tokens": [407, 286, 478, 516, 281, 3131, 577, 321, 393, 483, 1412], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 232, "seek": 85660, "start": 880.4, "end": 882.12, "text": " in particular for evaluation.", "tokens": [294, 1729, 337, 13344, 13], "temperature": 0.0, "avg_logprob": -0.20365001906209917, "compression_ratio": 1.4969325153374233, "no_speech_prob": 0.0003368791367392987}, {"id": 233, "seek": 88212, "start": 882.12, "end": 886.76, "text": " So data is the prerequisite to do anything in our life", "tokens": [407, 1412, 307, 264, 38333, 34152, 281, 360, 1340, 294, 527, 993], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 234, "seek": 88212, "start": 886.76, "end": 889.72, "text": " as machine learner practitioners.", "tokens": [382, 3479, 33347, 25742, 13], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 235, "seek": 88212, "start": 889.72, "end": 893.0, "text": " And then afterwards, I'm going to move to the modeling.", "tokens": [400, 550, 10543, 11, 286, 478, 516, 281, 1286, 281, 264, 15983, 13], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 236, "seek": 88212, "start": 893.0, "end": 901.48, "text": " So describing some algorithms to learn on Lorshows languages.", "tokens": [407, 16141, 512, 14642, 281, 1466, 322, 441, 830, 71, 1509, 8650, 13], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 237, "seek": 88212, "start": 901.48, "end": 903.6, "text": " And finally, we conclude with some work", "tokens": [400, 2721, 11, 321, 16886, 365, 512, 589], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 238, "seek": 88212, "start": 903.6, "end": 908.36, "text": " on analyzing what the model does when we train on Lorshows", "tokens": [322, 23663, 437, 264, 2316, 775, 562, 321, 3847, 322, 441, 830, 71, 1509], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 239, "seek": 88212, "start": 908.36, "end": 909.48, "text": " languages.", "tokens": [8650, 13], "temperature": 0.0, "avg_logprob": -0.13875475274511131, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.00011350524437148124}, {"id": 240, "seek": 90948, "start": 909.48, "end": 914.52, "text": " And in practice, like throughout my work here,", "tokens": [400, 294, 3124, 11, 411, 3710, 452, 589, 510, 11], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 241, "seek": 90948, "start": 914.52, "end": 919.6800000000001, "text": " I keep going around the circle because as I figure out", "tokens": [286, 1066, 516, 926, 264, 6329, 570, 382, 286, 2573, 484], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 242, "seek": 90948, "start": 919.6800000000001, "end": 921.84, "text": " the issues that we have with the data with the model,", "tokens": [264, 2663, 300, 321, 362, 365, 264, 1412, 365, 264, 2316, 11], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 243, "seek": 90948, "start": 921.84, "end": 925.76, "text": " then I make a map with a data set that better fits the kind", "tokens": [550, 286, 652, 257, 4471, 365, 257, 1412, 992, 300, 1101, 9001, 264, 733], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 244, "seek": 90948, "start": 925.76, "end": 927.2, "text": " of problems that I'm interested in.", "tokens": [295, 2740, 300, 286, 478, 3102, 294, 13], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 245, "seek": 90948, "start": 927.2, "end": 930.64, "text": " And then I may go back to the modeling side", "tokens": [400, 550, 286, 815, 352, 646, 281, 264, 15983, 1252], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 246, "seek": 90948, "start": 930.64, "end": 934.2, "text": " to improve the models and so and so forth.", "tokens": [281, 3470, 264, 5245, 293, 370, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 247, "seek": 90948, "start": 934.2, "end": 936.48, "text": " And here I'm giving some references", "tokens": [400, 510, 286, 478, 2902, 512, 15400], "temperature": 0.0, "avg_logprob": -0.15243157386779785, "compression_ratio": 1.7155963302752293, "no_speech_prob": 7.94205698184669e-05}, {"id": 248, "seek": 93648, "start": 936.48, "end": 940.16, "text": " of the works that I'm presenting, not all of them.", "tokens": [295, 264, 1985, 300, 286, 478, 15578, 11, 406, 439, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 249, "seek": 93648, "start": 940.16, "end": 944.6800000000001, "text": " And just to be clear, this is not meant", "tokens": [400, 445, 281, 312, 1850, 11, 341, 307, 406, 4140], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 250, "seek": 93648, "start": 944.6800000000001, "end": 946.5600000000001, "text": " to be a chronological survey.", "tokens": [281, 312, 257, 19393, 4383, 8984, 13], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 251, "seek": 93648, "start": 946.5600000000001, "end": 950.24, "text": " So these are not necessarily the works that", "tokens": [407, 613, 366, 406, 4725, 264, 1985, 300], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 252, "seek": 93648, "start": 950.24, "end": 953.52, "text": " introduce a certain idea.", "tokens": [5366, 257, 1629, 1558, 13], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 253, "seek": 93648, "start": 953.52, "end": 956.84, "text": " But it's just, I would say, the most accessible entry", "tokens": [583, 309, 311, 445, 11, 286, 576, 584, 11, 264, 881, 9515, 8729], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 254, "seek": 93648, "start": 956.84, "end": 958.52, "text": " points on the topic.", "tokens": [2793, 322, 264, 4829, 13], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 255, "seek": 93648, "start": 958.52, "end": 961.16, "text": " And then you can go on the really the work sections", "tokens": [400, 550, 291, 393, 352, 322, 264, 534, 264, 589, 10863], "temperature": 0.0, "avg_logprob": -0.18796204460991753, "compression_ratio": 1.592964824120603, "no_speech_prob": 0.00013797533756587654}, {"id": 256, "seek": 96116, "start": 961.16, "end": 967.0799999999999, "text": " to figure out if there was some semi-known paper that led", "tokens": [281, 2573, 484, 498, 456, 390, 512, 12909, 12, 6861, 3035, 300, 4684], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 257, "seek": 96116, "start": 967.0799999999999, "end": 969.36, "text": " to that line of research.", "tokens": [281, 300, 1622, 295, 2132, 13], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 258, "seek": 96116, "start": 969.36, "end": 971.88, "text": " And of course, there is quite a bit of presenter bias", "tokens": [400, 295, 1164, 11, 456, 307, 1596, 257, 857, 295, 35594, 12577], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 259, "seek": 96116, "start": 971.88, "end": 976.0799999999999, "text": " because most of these works have been caught or by me.", "tokens": [570, 881, 295, 613, 1985, 362, 668, 5415, 420, 538, 385, 13], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 260, "seek": 96116, "start": 976.0799999999999, "end": 978.88, "text": " So be mindful of that.", "tokens": [407, 312, 14618, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 261, "seek": 96116, "start": 978.88, "end": 982.36, "text": " That said, do you have any questions so far?", "tokens": [663, 848, 11, 360, 291, 362, 604, 1651, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 262, "seek": 96116, "start": 982.36, "end": 984.7199999999999, "text": " I have a quick question about, I see it", "tokens": [286, 362, 257, 1702, 1168, 466, 11, 286, 536, 309], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 263, "seek": 96116, "start": 984.7199999999999, "end": 986.8399999999999, "text": " in the first week when the model is about free space", "tokens": [294, 264, 700, 1243, 562, 264, 2316, 307, 466, 1737, 1901], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 264, "seek": 96116, "start": 986.8399999999999, "end": 989.24, "text": " and new long-soup on M.T. I was wondering if you could", "tokens": [293, 777, 938, 12, 82, 1250, 322, 376, 13, 51, 13, 286, 390, 6359, 498, 291, 727], "temperature": 0.0, "avg_logprob": -0.32149082119182004, "compression_ratio": 1.6126482213438735, "no_speech_prob": 0.0004096657212357968}, {"id": 265, "seek": 98924, "start": 989.24, "end": 993.24, "text": " talk about the different approaches about unsupervised learning", "tokens": [751, 466, 264, 819, 11587, 466, 2693, 12879, 24420, 2539], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 266, "seek": 98924, "start": 993.24, "end": 996.12, "text": " and also algorithms like cloud and work", "tokens": [293, 611, 14642, 411, 4588, 293, 589], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 267, "seek": 98924, "start": 996.12, "end": 999.92, "text": " to work are possible in low resource languages.", "tokens": [281, 589, 366, 1944, 294, 2295, 7684, 8650, 13], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 268, "seek": 98924, "start": 999.92, "end": 1000.72, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 269, "seek": 98924, "start": 1000.72, "end": 1006.8, "text": " So in this lecture, I'm going to focus on neuro.", "tokens": [407, 294, 341, 7991, 11, 286, 478, 516, 281, 1879, 322, 16499, 13], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 270, "seek": 98924, "start": 1006.8, "end": 1011.0, "text": " Actually, I'm not even going in the details of the architecture.", "tokens": [5135, 11, 286, 478, 406, 754, 516, 294, 264, 4365, 295, 264, 9482, 13], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 271, "seek": 98924, "start": 1011.0, "end": 1014.12, "text": " I'm more talking about algorithms actually.", "tokens": [286, 478, 544, 1417, 466, 14642, 767, 13], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 272, "seek": 98924, "start": 1014.12, "end": 1016.84, "text": " And so these algorithms are applicable both", "tokens": [400, 370, 613, 14642, 366, 21142, 1293], "temperature": 0.0, "avg_logprob": -0.24088912540011936, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.0003843597078230232}, {"id": 273, "seek": 101684, "start": 1016.84, "end": 1019.72, "text": " to a neural machine translation system, as well as", "tokens": [281, 257, 18161, 3479, 12853, 1185, 11, 382, 731, 382], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 274, "seek": 101684, "start": 1019.72, "end": 1023.44, "text": " to statistical machine translation systems.", "tokens": [281, 22820, 3479, 12853, 3652, 13], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 275, "seek": 101684, "start": 1023.44, "end": 1029.6000000000001, "text": " When I go over this part, I can address a little bit", "tokens": [1133, 286, 352, 670, 341, 644, 11, 286, 393, 2985, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 276, "seek": 101684, "start": 1029.6000000000001, "end": 1031.76, "text": " your question and tell you a little bit", "tokens": [428, 1168, 293, 980, 291, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 277, "seek": 101684, "start": 1031.76, "end": 1034.2, "text": " about the differences between these two.", "tokens": [466, 264, 7300, 1296, 613, 732, 13], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 278, "seek": 101684, "start": 1037.4, "end": 1041.76, "text": " And then in terms of methods to learn", "tokens": [400, 550, 294, 2115, 295, 7150, 281, 1466], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 279, "seek": 101684, "start": 1041.76, "end": 1045.6000000000001, "text": " more than settings and sentence and settings,", "tokens": [544, 813, 6257, 293, 8174, 293, 6257, 11], "temperature": 0.0, "avg_logprob": -0.23286495710674085, "compression_ratio": 1.6774193548387097, "no_speech_prob": 7.997710781637579e-05}, {"id": 280, "seek": 104560, "start": 1045.6, "end": 1048.28, "text": " I'm going to touch very briefly on that.", "tokens": [286, 478, 516, 281, 2557, 588, 10515, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 281, "seek": 104560, "start": 1048.28, "end": 1050.6399999999999, "text": " So at the end of the lecture, I'm going", "tokens": [407, 412, 264, 917, 295, 264, 7991, 11, 286, 478, 516], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 282, "seek": 104560, "start": 1050.6399999999999, "end": 1054.1999999999998, "text": " to refer to some recent work on filtering", "tokens": [281, 2864, 281, 512, 5162, 589, 322, 30822], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 283, "seek": 104560, "start": 1054.1999999999998, "end": 1059.52, "text": " where people use sentence embedding methods.", "tokens": [689, 561, 764, 8174, 12240, 3584, 7150, 13], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 284, "seek": 104560, "start": 1059.52, "end": 1065.6399999999999, "text": " It's not a globe, but it's something similar in a way.", "tokens": [467, 311, 406, 257, 15371, 11, 457, 309, 311, 746, 2531, 294, 257, 636, 13], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 285, "seek": 104560, "start": 1065.6399999999999, "end": 1071.1599999999999, "text": " In practice, for word embeddings,", "tokens": [682, 3124, 11, 337, 1349, 12240, 29432, 11], "temperature": 0.0, "avg_logprob": -0.17882518510560733, "compression_ratio": 1.5058823529411764, "no_speech_prob": 0.00017112240311689675}, {"id": 286, "seek": 107116, "start": 1071.16, "end": 1076.72, "text": " it's kind of, I would say, a prerequisite for machine", "tokens": [309, 311, 733, 295, 11, 286, 576, 584, 11, 257, 38333, 34152, 337, 3479], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 287, "seek": 107116, "start": 1076.72, "end": 1079.0, "text": " translation, because if you can align", "tokens": [12853, 11, 570, 498, 291, 393, 7975], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 288, "seek": 107116, "start": 1079.0, "end": 1081.96, "text": " word embeddings, you learn a dictionary,", "tokens": [1349, 12240, 29432, 11, 291, 1466, 257, 25890, 11], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 289, "seek": 107116, "start": 1081.96, "end": 1086.2, "text": " and that's a primitive way to do machine translation.", "tokens": [293, 300, 311, 257, 28540, 636, 281, 360, 3479, 12853, 13], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 290, "seek": 107116, "start": 1086.2, "end": 1088.88, "text": " So oftentimes, we look at those things", "tokens": [407, 18349, 11, 321, 574, 412, 729, 721], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 291, "seek": 107116, "start": 1088.88, "end": 1095.2, "text": " as a good sanity check or as a simplified machine translation", "tokens": [382, 257, 665, 47892, 1520, 420, 382, 257, 26335, 3479, 12853], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 292, "seek": 107116, "start": 1095.2, "end": 1096.2, "text": " task.", "tokens": [5633, 13], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 293, "seek": 107116, "start": 1096.2, "end": 1098.0, "text": " Whenever you have a reference dictionary", "tokens": [14159, 291, 362, 257, 6408, 25890], "temperature": 0.0, "avg_logprob": -0.15363632246505382, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.00015123213233891875}, {"id": 294, "seek": 109800, "start": 1098.0, "end": 1102.24, "text": " for which you can then check the accuracy of your alignment.", "tokens": [337, 597, 291, 393, 550, 1520, 264, 14170, 295, 428, 18515, 13], "temperature": 0.0, "avg_logprob": -0.22471803234469506, "compression_ratio": 1.5, "no_speech_prob": 0.0002567687479313463}, {"id": 295, "seek": 109800, "start": 1107.44, "end": 1111.32, "text": " So if you, let me get back to you", "tokens": [407, 498, 291, 11, 718, 385, 483, 646, 281, 291], "temperature": 0.0, "avg_logprob": -0.22471803234469506, "compression_ratio": 1.5, "no_speech_prob": 0.0002567687479313463}, {"id": 296, "seek": 109800, "start": 1111.32, "end": 1114.96, "text": " when we talk about this paper.", "tokens": [562, 321, 751, 466, 341, 3035, 13], "temperature": 0.0, "avg_logprob": -0.22471803234469506, "compression_ratio": 1.5, "no_speech_prob": 0.0002567687479313463}, {"id": 297, "seek": 109800, "start": 1114.96, "end": 1118.0, "text": " So let's talk about data then.", "tokens": [407, 718, 311, 751, 466, 1412, 550, 13], "temperature": 0.0, "avg_logprob": -0.22471803234469506, "compression_ratio": 1.5, "no_speech_prob": 0.0002567687479313463}, {"id": 298, "seek": 109800, "start": 1118.0, "end": 1127.4, "text": " So let's go back to our English Nepali translation task.", "tokens": [407, 718, 311, 352, 646, 281, 527, 3669, 24875, 5103, 12853, 5633, 13], "temperature": 0.0, "avg_logprob": -0.22471803234469506, "compression_ratio": 1.5, "no_speech_prob": 0.0002567687479313463}, {"id": 299, "seek": 112740, "start": 1127.4, "end": 1134.24, "text": " So there is a resource called Opus, which", "tokens": [407, 456, 307, 257, 7684, 1219, 12011, 301, 11, 597], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 300, "seek": 112740, "start": 1134.24, "end": 1137.72, "text": " is a very nice, which shows the very nice collection", "tokens": [307, 257, 588, 1481, 11, 597, 3110, 264, 588, 1481, 5765], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 301, "seek": 112740, "start": 1137.72, "end": 1143.1200000000001, "text": " of datasets, all publicly available in lots of languages.", "tokens": [295, 42856, 11, 439, 14843, 2435, 294, 3195, 295, 8650, 13], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 302, "seek": 112740, "start": 1143.1200000000001, "end": 1146.92, "text": " And when you go to this website, the Opus website,", "tokens": [400, 562, 291, 352, 281, 341, 3144, 11, 264, 12011, 301, 3144, 11], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 303, "seek": 112740, "start": 1146.92, "end": 1150.2800000000002, "text": " you find that for English Nepali, actually,", "tokens": [291, 915, 300, 337, 3669, 24875, 5103, 11, 767, 11], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 304, "seek": 112740, "start": 1150.2800000000002, "end": 1153.44, "text": " there are 1 million parallel sentences.", "tokens": [456, 366, 502, 2459, 8952, 16579, 13], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 305, "seek": 112740, "start": 1153.44, "end": 1156.2, "text": " So maybe I like to you, telling you", "tokens": [407, 1310, 286, 411, 281, 291, 11, 3585, 291], "temperature": 0.0, "avg_logprob": -0.1917670677448141, "compression_ratio": 1.5380952380952382, "no_speech_prob": 0.0004957884666509926}, {"id": 306, "seek": 115620, "start": 1156.2, "end": 1157.8, "text": " that this is a lot of those language.", "tokens": [300, 341, 307, 257, 688, 295, 729, 2856, 13], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 307, "seek": 115620, "start": 1157.8, "end": 1163.4, "text": " But actually, if you look at what these corpus", "tokens": [583, 767, 11, 498, 291, 574, 412, 437, 613, 1181, 31624], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 308, "seek": 115620, "start": 1163.4, "end": 1166.8400000000001, "text": " are, you realize that pretty much half a million", "tokens": [366, 11, 291, 4325, 300, 1238, 709, 1922, 257, 2459], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 309, "seek": 115620, "start": 1166.8400000000001, "end": 1172.64, "text": " these sentences come from JW300, which", "tokens": [613, 16579, 808, 490, 508, 54, 12566, 11, 597], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 310, "seek": 115620, "start": 1172.64, "end": 1174.2, "text": " is a religious magazine.", "tokens": [307, 257, 7185, 11332, 13], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 311, "seek": 115620, "start": 1174.2, "end": 1177.8400000000001, "text": " And then you have 60,000 sentences from the Bible.", "tokens": [400, 550, 291, 362, 4060, 11, 1360, 16579, 490, 264, 6544, 13], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 312, "seek": 115620, "start": 1177.8400000000001, "end": 1180.96, "text": " And the rest come from Genome, Kedi, Ubuntu.", "tokens": [400, 264, 1472, 808, 490, 3632, 423, 11, 591, 10323, 11, 30230, 45605, 13], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 313, "seek": 115620, "start": 1180.96, "end": 1185.16, "text": " So these are computer related materials.", "tokens": [407, 613, 366, 3820, 4077, 5319, 13], "temperature": 0.0, "avg_logprob": -0.2822112234015214, "compression_ratio": 1.5251141552511416, "no_speech_prob": 0.00030142036848701537}, {"id": 314, "seek": 118516, "start": 1185.16, "end": 1189.48, "text": " And so again, unless you're interested in translating novel", "tokens": [400, 370, 797, 11, 5969, 291, 434, 3102, 294, 35030, 7613], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 315, "seek": 118516, "start": 1189.48, "end": 1196.16, "text": " sentences from the Bible, this is now super useful, I would", "tokens": [16579, 490, 264, 6544, 11, 341, 307, 586, 1687, 4420, 11, 286, 576], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 316, "seek": 118516, "start": 1196.16, "end": 1198.52, "text": " say.", "tokens": [584, 13], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 317, "seek": 118516, "start": 1198.52, "end": 1203.0, "text": " And so one thing to note is that all these data originates", "tokens": [400, 370, 472, 551, 281, 3637, 307, 300, 439, 613, 1412, 4957, 1024], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 318, "seek": 118516, "start": 1203.0, "end": 1203.52, "text": " from English.", "tokens": [490, 3669, 13], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 319, "seek": 118516, "start": 1203.52, "end": 1207.0400000000002, "text": " You have nothing that originates from the poly, first of all.", "tokens": [509, 362, 1825, 300, 4957, 1024, 490, 264, 6754, 11, 700, 295, 439, 13], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 320, "seek": 118516, "start": 1207.0400000000002, "end": 1209.5600000000002, "text": " And second of all, if you're interested in, let's say,", "tokens": [400, 1150, 295, 439, 11, 498, 291, 434, 3102, 294, 11, 718, 311, 584, 11], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 321, "seek": 118516, "start": 1209.5600000000002, "end": 1214.8000000000002, "text": " translating Wikipedia, all you have is Wikipedia monolingual", "tokens": [35030, 28999, 11, 439, 291, 362, 307, 28999, 1108, 401, 278, 901], "temperature": 0.0, "avg_logprob": -0.21624164770145227, "compression_ratio": 1.7201834862385321, "no_speech_prob": 0.000191766070201993}, {"id": 322, "seek": 121480, "start": 1214.8, "end": 1216.72, "text": " data, both in English and in the poly.", "tokens": [1412, 11, 1293, 294, 3669, 293, 294, 264, 6754, 13], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 323, "seek": 121480, "start": 1216.72, "end": 1220.04, "text": " And in the poly is not even very much.", "tokens": [400, 294, 264, 6754, 307, 406, 754, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 324, "seek": 121480, "start": 1220.04, "end": 1222.52, "text": " And then of course, you can add some monolingual data", "tokens": [400, 550, 295, 1164, 11, 291, 393, 909, 512, 1108, 401, 278, 901, 1412], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 325, "seek": 121480, "start": 1222.52, "end": 1224.36, "text": " in another domain, like CommonCrow, which", "tokens": [294, 1071, 9274, 11, 411, 18235, 34, 1892, 11, 597], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 326, "seek": 121480, "start": 1224.36, "end": 1228.04, "text": " is just a dump of the internet.", "tokens": [307, 445, 257, 11430, 295, 264, 4705, 13], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 327, "seek": 121480, "start": 1228.04, "end": 1232.44, "text": " But again, translating between English and Nepali using", "tokens": [583, 797, 11, 35030, 1296, 3669, 293, 24875, 5103, 1228], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 328, "seek": 121480, "start": 1232.44, "end": 1235.6, "text": " publicly available data is going to be a challenge,", "tokens": [14843, 2435, 1412, 307, 516, 281, 312, 257, 3430, 11], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 329, "seek": 121480, "start": 1235.6, "end": 1240.96, "text": " because you don't have any in domain parallel data side.", "tokens": [570, 291, 500, 380, 362, 604, 294, 9274, 8952, 1412, 1252, 13], "temperature": 0.0, "avg_logprob": -0.2322383207433364, "compression_ratio": 1.6157205240174672, "no_speech_prob": 0.0006788065657019615}, {"id": 330, "seek": 124096, "start": 1240.96, "end": 1245.6000000000001, "text": " All you have is at most some in domain monolingual data.", "tokens": [1057, 291, 362, 307, 412, 881, 512, 294, 9274, 1108, 401, 278, 901, 1412, 13], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 331, "seek": 124096, "start": 1245.6000000000001, "end": 1247.8400000000001, "text": " But there is an even bigger problem, which", "tokens": [583, 456, 307, 364, 754, 3801, 1154, 11, 597], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 332, "seek": 124096, "start": 1247.8400000000001, "end": 1252.48, "text": " is that there is no test data.", "tokens": [307, 300, 456, 307, 572, 1500, 1412, 13], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 333, "seek": 124096, "start": 1252.48, "end": 1256.64, "text": " So here, we don't have reference translations in the poly", "tokens": [407, 510, 11, 321, 500, 380, 362, 6408, 37578, 294, 264, 6754], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 334, "seek": 124096, "start": 1256.64, "end": 1260.96, "text": " to measure the quality of our machine translation system.", "tokens": [281, 3481, 264, 3125, 295, 527, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 335, "seek": 124096, "start": 1260.96, "end": 1264.28, "text": " And this is a big problem, because if you don't have a high", "tokens": [400, 341, 307, 257, 955, 1154, 11, 570, 498, 291, 500, 380, 362, 257, 1090], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 336, "seek": 124096, "start": 1264.28, "end": 1268.28, "text": " quality or you don't have at all, that's sad.", "tokens": [3125, 420, 291, 500, 380, 362, 412, 439, 11, 300, 311, 4227, 13], "temperature": 0.0, "avg_logprob": -0.1653747169338927, "compression_ratio": 1.7170731707317073, "no_speech_prob": 0.00013073752052150667}, {"id": 337, "seek": 126828, "start": 1268.28, "end": 1271.52, "text": " It's very hard to compare models, and it's very hard", "tokens": [467, 311, 588, 1152, 281, 6794, 5245, 11, 293, 309, 311, 588, 1152], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 338, "seek": 126828, "start": 1271.52, "end": 1274.32, "text": " to do model selection to compare algorithms", "tokens": [281, 360, 2316, 9450, 281, 6794, 14642], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 339, "seek": 126828, "start": 1274.32, "end": 1277.68, "text": " and our field is creeper.", "tokens": [293, 527, 2519, 307, 9626, 260, 13], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 340, "seek": 126828, "start": 1277.68, "end": 1282.52, "text": " We need strong evaluation benchmarks.", "tokens": [492, 643, 2068, 13344, 43751, 13], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 341, "seek": 126828, "start": 1282.52, "end": 1286.32, "text": " And so this motivated a project that's called Flores,", "tokens": [400, 370, 341, 14515, 257, 1716, 300, 311, 1219, 3235, 2706, 11], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 342, "seek": 126828, "start": 1286.32, "end": 1289.08, "text": " the stands for Facebook, Law Resource,", "tokens": [264, 7382, 337, 4384, 11, 7744, 35200, 11], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 343, "seek": 126828, "start": 1289.08, "end": 1293.6, "text": " Law Resource, Evolution, Benzmer for Machine Translation,", "tokens": [7744, 35200, 11, 40800, 11, 3964, 89, 936, 337, 22155, 6531, 24278, 11], "temperature": 0.0, "avg_logprob": -0.3161665055809951, "compression_ratio": 1.555, "no_speech_prob": 0.00015505083138123155}, {"id": 344, "seek": 129360, "start": 1293.6, "end": 1299.36, "text": " where we took Wikipedia sentences in English and translated", "tokens": [689, 321, 1890, 28999, 16579, 294, 3669, 293, 16805], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 345, "seek": 129360, "start": 1299.36, "end": 1301.8799999999999, "text": " them into Nepali and Sinala.", "tokens": [552, 666, 24875, 5103, 293, 11187, 5159, 13], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 346, "seek": 129360, "start": 1301.8799999999999, "end": 1308.4399999999998, "text": " And then we took Wikipedia sentences from Nepali, Wikipedia,", "tokens": [400, 550, 321, 1890, 28999, 16579, 490, 24875, 5103, 11, 28999, 11], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 347, "seek": 129360, "start": 1308.4399999999998, "end": 1311.0, "text": " and translated them into English, as well as from Sinala,", "tokens": [293, 16805, 552, 666, 3669, 11, 382, 731, 382, 490, 11187, 5159, 11], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 348, "seek": 129360, "start": 1311.0, "end": 1315.12, "text": " Wikipedia and translated them into English.", "tokens": [28999, 293, 16805, 552, 666, 3669, 13], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 349, "seek": 129360, "start": 1315.12, "end": 1318.12, "text": " So you may say, this is a little bit boring,", "tokens": [407, 291, 815, 584, 11, 341, 307, 257, 707, 857, 9989, 11], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 350, "seek": 129360, "start": 1318.12, "end": 1322.04, "text": " because what's hard about it?", "tokens": [570, 437, 311, 1152, 466, 309, 30], "temperature": 0.0, "avg_logprob": -0.23314024153209867, "compression_ratio": 1.8953488372093024, "no_speech_prob": 0.000927747692912817}, {"id": 351, "seek": 132204, "start": 1322.04, "end": 1326.1599999999999, "text": " And tell me about tricks to do pattern modeling.", "tokens": [400, 980, 385, 466, 11733, 281, 360, 5102, 15983, 13], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 352, "seek": 132204, "start": 1326.1599999999999, "end": 1329.72, "text": " But actually, you'll be surprised that this data collection", "tokens": [583, 767, 11, 291, 603, 312, 6100, 300, 341, 1412, 5765], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 353, "seek": 132204, "start": 1329.72, "end": 1335.2, "text": " process was harder and more interesting also than we thought.", "tokens": [1399, 390, 6081, 293, 544, 1880, 611, 813, 321, 1194, 13], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 354, "seek": 132204, "start": 1335.2, "end": 1342.44, "text": " So it is hard because there are very few fluent professional", "tokens": [407, 309, 307, 1152, 570, 456, 366, 588, 1326, 40799, 4843], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 355, "seek": 132204, "start": 1342.44, "end": 1344.6, "text": " translators in these languages, and this", "tokens": [5105, 3391, 294, 613, 8650, 11, 293, 341], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 356, "seek": 132204, "start": 1344.6, "end": 1347.8799999999999, "text": " is not even super low resource.", "tokens": [307, 406, 754, 1687, 2295, 7684, 13], "temperature": 0.0, "avg_logprob": -0.23399469587537977, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00030596443684771657}, {"id": 357, "seek": 134788, "start": 1347.88, "end": 1353.44, "text": " And so we dealt with translator agency.", "tokens": [400, 370, 321, 15991, 365, 5105, 1639, 7934, 13], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 358, "seek": 134788, "start": 1353.44, "end": 1358.2800000000002, "text": " And typically, there are not enough people for which you can do", "tokens": [400, 5850, 11, 456, 366, 406, 1547, 561, 337, 597, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 359, "seek": 134788, "start": 1358.2800000000002, "end": 1361.88, "text": " kind of AB test into test the translation of one person", "tokens": [733, 295, 13838, 1500, 666, 1500, 264, 12853, 295, 472, 954], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 360, "seek": 134788, "start": 1361.88, "end": 1363.68, "text": " with another one.", "tokens": [365, 1071, 472, 13], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 361, "seek": 134788, "start": 1363.68, "end": 1364.64, "text": " That's number one.", "tokens": [663, 311, 1230, 472, 13], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 362, "seek": 134788, "start": 1364.64, "end": 1367.4, "text": " Number two, in general, it's very hard", "tokens": [5118, 732, 11, 294, 2674, 11, 309, 311, 588, 1152], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 363, "seek": 134788, "start": 1367.4, "end": 1371.0400000000002, "text": " to assess automatically the quality of a translation,", "tokens": [281, 5877, 6772, 264, 3125, 295, 257, 12853, 11], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 364, "seek": 134788, "start": 1371.0400000000002, "end": 1374.0, "text": " because we don't have enough parallel data", "tokens": [570, 321, 500, 380, 362, 1547, 8952, 1412], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 365, "seek": 134788, "start": 1374.0, "end": 1376.44, "text": " to train machine translation system, right?", "tokens": [281, 3847, 3479, 12853, 1185, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2211772289472757, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0003424157330300659}, {"id": 366, "seek": 137644, "start": 1376.44, "end": 1379.16, "text": " And so we need to rely on other methods", "tokens": [400, 370, 321, 643, 281, 10687, 322, 661, 7150], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 367, "seek": 137644, "start": 1379.16, "end": 1381.88, "text": " than a well-trained machine translation system", "tokens": [813, 257, 731, 12, 17227, 2001, 3479, 12853, 1185], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 368, "seek": 137644, "start": 1381.88, "end": 1384.16, "text": " to assess the quality.", "tokens": [281, 5877, 264, 3125, 13], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 369, "seek": 137644, "start": 1384.16, "end": 1390.8400000000001, "text": " And so we built a pipeline where we would have,", "tokens": [400, 370, 321, 3094, 257, 15517, 689, 321, 576, 362, 11], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 370, "seek": 137644, "start": 1390.8400000000001, "end": 1393.3600000000001, "text": " we would send the sentences to the translators", "tokens": [321, 576, 2845, 264, 16579, 281, 264, 5105, 3391], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 371, "seek": 137644, "start": 1393.3600000000001, "end": 1395.88, "text": " once the translators are back.", "tokens": [1564, 264, 5105, 3391, 366, 646, 13], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 372, "seek": 137644, "start": 1395.88, "end": 1403.0800000000002, "text": " We would do several checks like fluency checks using a language", "tokens": [492, 576, 360, 2940, 13834, 411, 5029, 3020, 13834, 1228, 257, 2856], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 373, "seek": 137644, "start": 1403.0800000000002, "end": 1404.0, "text": " model.", "tokens": [2316, 13], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 374, "seek": 137644, "start": 1404.0, "end": 1406.0800000000002, "text": " We would check for transliteration to make sure", "tokens": [492, 576, 1520, 337, 5105, 1681, 399, 281, 652, 988], "temperature": 0.0, "avg_logprob": -0.15901896294127119, "compression_ratio": 1.710144927536232, "no_speech_prob": 0.00016262289136648178}, {"id": 375, "seek": 140608, "start": 1406.08, "end": 1410.08, "text": " that a sentence is not translated by simply transliterating.", "tokens": [300, 257, 8174, 307, 406, 16805, 538, 2935, 5105, 1681, 990, 13], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 376, "seek": 140608, "start": 1410.08, "end": 1415.52, "text": " We would check that the language is the desired one, right?", "tokens": [492, 576, 1520, 300, 264, 2856, 307, 264, 14721, 472, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 377, "seek": 140608, "start": 1415.52, "end": 1417.6399999999999, "text": " And so we would have a lot of checks like that.", "tokens": [400, 370, 321, 576, 362, 257, 688, 295, 13834, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 378, "seek": 140608, "start": 1417.6399999999999, "end": 1419.8, "text": " And then if, and of course, here there", "tokens": [400, 550, 498, 11, 293, 295, 1164, 11, 510, 456], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 379, "seek": 140608, "start": 1419.8, "end": 1422.9199999999998, "text": " are trashes that you need to set somehow.", "tokens": [366, 11321, 279, 300, 291, 643, 281, 992, 6063, 13], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 380, "seek": 140608, "start": 1422.9199999999998, "end": 1430.84, "text": " And then for those sentences that would fail this step,", "tokens": [400, 550, 337, 729, 16579, 300, 576, 3061, 341, 1823, 11], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 381, "seek": 140608, "start": 1430.84, "end": 1435.3999999999999, "text": " we would send them back to retranslation.", "tokens": [321, 576, 2845, 552, 646, 281, 23106, 599, 24278, 13], "temperature": 0.0, "avg_logprob": -0.15672795316006274, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.00024743363610468805}, {"id": 382, "seek": 143540, "start": 1435.4, "end": 1438.0800000000002, "text": " And so after a few iterations, so this then eventually", "tokens": [400, 370, 934, 257, 1326, 36540, 11, 370, 341, 550, 4728], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 383, "seek": 143540, "start": 1438.0800000000002, "end": 1440.0800000000002, "text": " we do also a human evaluation.", "tokens": [321, 360, 611, 257, 1952, 13344, 13], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 384, "seek": 143540, "start": 1440.0800000000002, "end": 1444.68, "text": " And then the sentences in this evaluation", "tokens": [400, 550, 264, 16579, 294, 341, 13344], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 385, "seek": 143540, "start": 1444.68, "end": 1452.16, "text": " bench, Markard, those that have passed all the automatic", "tokens": [10638, 11, 3934, 515, 11, 729, 300, 362, 4678, 439, 264, 12509], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 386, "seek": 143540, "start": 1452.16, "end": 1455.3600000000001, "text": " and human assessment checks.", "tokens": [293, 1952, 9687, 13834, 13], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 387, "seek": 143540, "start": 1455.3600000000001, "end": 1461.24, "text": " Now, it turns out that there is not even a very good literature", "tokens": [823, 11, 309, 4523, 484, 300, 456, 307, 406, 754, 257, 588, 665, 10394], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 388, "seek": 143540, "start": 1461.24, "end": 1463.76, "text": " that tells you how to collect data.", "tokens": [300, 5112, 291, 577, 281, 2500, 1412, 13], "temperature": 0.0, "avg_logprob": -0.21958017349243164, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.00019872174016200006}, {"id": 389, "seek": 146376, "start": 1463.76, "end": 1465.68, "text": " And in particular, for laws or slang, which", "tokens": [400, 294, 1729, 11, 337, 6064, 420, 1061, 656, 11, 597], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 390, "seek": 146376, "start": 1465.68, "end": 1469.72, "text": " is there are a lot of issues related to the quality", "tokens": [307, 456, 366, 257, 688, 295, 2663, 4077, 281, 264, 3125], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 391, "seek": 146376, "start": 1469.72, "end": 1470.68, "text": " of the translations.", "tokens": [295, 264, 37578, 13], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 392, "seek": 146376, "start": 1470.68, "end": 1474.0, "text": " And so this was a project that we thought", "tokens": [400, 370, 341, 390, 257, 1716, 300, 321, 1194], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 393, "seek": 146376, "start": 1474.0, "end": 1475.32, "text": " would take us a couple of months.", "tokens": [576, 747, 505, 257, 1916, 295, 2493, 13], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 394, "seek": 146376, "start": 1475.32, "end": 1480.0, "text": " But instead it took us more than six months.", "tokens": [583, 2602, 309, 1890, 505, 544, 813, 2309, 2493, 13], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 395, "seek": 146376, "start": 1480.0, "end": 1484.12, "text": " And that's an eventually we call a validation set,", "tokens": [400, 300, 311, 364, 4728, 321, 818, 257, 24071, 992, 11], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 396, "seek": 146376, "start": 1484.12, "end": 1486.76, "text": " a test set, and also a hidden test set,", "tokens": [257, 1500, 992, 11, 293, 611, 257, 7633, 1500, 992, 11], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 397, "seek": 146376, "start": 1486.76, "end": 1490.68, "text": " because we use this data for a WMT competition.", "tokens": [570, 321, 764, 341, 1412, 337, 257, 343, 44, 51, 6211, 13], "temperature": 0.0, "avg_logprob": -0.27742922417471344, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.000798774475697428}, {"id": 398, "seek": 149068, "start": 1490.68, "end": 1494.1200000000001, "text": " And for that, they needed to have a test set that was not", "tokens": [400, 337, 300, 11, 436, 2978, 281, 362, 257, 1500, 992, 300, 390, 406], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 399, "seek": 149068, "start": 1494.1200000000001, "end": 1497.92, "text": " available to people to make sure that people were not", "tokens": [2435, 281, 561, 281, 652, 988, 300, 561, 645, 406], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 400, "seek": 149068, "start": 1497.92, "end": 1500.6000000000001, "text": " cross-validating on the test set.", "tokens": [3278, 12, 3337, 327, 990, 322, 264, 1500, 992, 13], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 401, "seek": 149068, "start": 1500.6000000000001, "end": 1504.04, "text": " And here's some examples of sentences.", "tokens": [400, 510, 311, 512, 5110, 295, 16579, 13], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 402, "seek": 149068, "start": 1504.04, "end": 1508.5600000000002, "text": " So this is from a sentence from the Sinala Wikipedia", "tokens": [407, 341, 307, 490, 257, 8174, 490, 264, 11187, 5159, 28999], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 403, "seek": 149068, "start": 1508.5600000000002, "end": 1511.48, "text": " translated into English, a couple of sentences here.", "tokens": [16805, 666, 3669, 11, 257, 1916, 295, 16579, 510, 13], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 404, "seek": 149068, "start": 1511.48, "end": 1514.04, "text": " And it's from English Wikipedia translated into Sinala.", "tokens": [400, 309, 311, 490, 3669, 28999, 16805, 666, 11187, 5159, 13], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 405, "seek": 149068, "start": 1514.04, "end": 1519.92, "text": " I don't know how many people in the audience come from Sri Lanka.", "tokens": [286, 500, 380, 458, 577, 867, 561, 294, 264, 4034, 808, 490, 25120, 42765, 13], "temperature": 0.0, "avg_logprob": -0.18330721988856236, "compression_ratio": 1.7457627118644068, "no_speech_prob": 0.00042838402441702783}, {"id": 406, "seek": 151992, "start": 1519.92, "end": 1522.92, "text": " That could appreciate this effort.", "tokens": [663, 727, 4449, 341, 4630, 13], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 407, "seek": 151992, "start": 1522.92, "end": 1525.88, "text": " But one interesting thing that you can already see", "tokens": [583, 472, 1880, 551, 300, 291, 393, 1217, 536], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 408, "seek": 151992, "start": 1525.88, "end": 1528.88, "text": " is that although this is totally anecdotal,", "tokens": [307, 300, 4878, 341, 307, 3879, 26652, 38180, 11], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 409, "seek": 151992, "start": 1528.88, "end": 1531.16, "text": " because it's just a couple of sentences from a", "tokens": [570, 309, 311, 445, 257, 1916, 295, 16579, 490, 257], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 410, "seek": 151992, "start": 1531.16, "end": 1535.4, "text": " for Sinala in English, you can see that the topic, kind", "tokens": [337, 11187, 5159, 294, 3669, 11, 291, 393, 536, 300, 264, 4829, 11, 733], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 411, "seek": 151992, "start": 1535.4, "end": 1537.28, "text": " of topic distribution is different.", "tokens": [295, 4829, 7316, 307, 819, 13], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 412, "seek": 151992, "start": 1537.28, "end": 1542.96, "text": " And here you have things that would be a little unlikely", "tokens": [400, 510, 291, 362, 721, 300, 576, 312, 257, 707, 17518], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 413, "seek": 151992, "start": 1542.96, "end": 1546.1200000000001, "text": " in English Wikipedia.", "tokens": [294, 3669, 28999, 13], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 414, "seek": 151992, "start": 1546.1200000000001, "end": 1549.72, "text": " And the same is for Nepal English and English", "tokens": [400, 264, 912, 307, 337, 36283, 3669, 293, 3669], "temperature": 0.0, "avg_logprob": -0.2658793001758809, "compression_ratio": 1.6443514644351465, "no_speech_prob": 0.00041443423833698034}, {"id": 415, "seek": 154972, "start": 1549.72, "end": 1551.44, "text": " Nepali.", "tokens": [24875, 5103, 13], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 416, "seek": 154972, "start": 1551.44, "end": 1555.92, "text": " So we have a GitHub repository where we host the data", "tokens": [407, 321, 362, 257, 23331, 25841, 689, 321, 3975, 264, 1412], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 417, "seek": 154972, "start": 1555.92, "end": 1561.48, "text": " and also baseline models that we train on public available data", "tokens": [293, 611, 20518, 5245, 300, 321, 3847, 322, 1908, 2435, 1412], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 418, "seek": 154972, "start": 1561.48, "end": 1564.64, "text": " and then tested on this floor of the benchmark.", "tokens": [293, 550, 8246, 322, 341, 4123, 295, 264, 18927, 13], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 419, "seek": 154972, "start": 1564.64, "end": 1568.24, "text": " And last week we released another couple of languages,", "tokens": [400, 1036, 1243, 321, 4736, 1071, 1916, 295, 8650, 11], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 420, "seek": 154972, "start": 1568.24, "end": 1570.8, "text": " English, Pashto, English, Camar.", "tokens": [3669, 11, 14199, 357, 78, 11, 3669, 11, 6886, 289, 13], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 421, "seek": 154972, "start": 1570.8, "end": 1574.48, "text": " And we are adding more and more languages", "tokens": [400, 321, 366, 5127, 544, 293, 544, 8650], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 422, "seek": 154972, "start": 1574.48, "end": 1576.32, "text": " in the coming months.", "tokens": [294, 264, 1348, 2493, 13], "temperature": 0.0, "avg_logprob": -0.25780280979200343, "compression_ratio": 1.570048309178744, "no_speech_prob": 0.0009641600190661848}, {"id": 423, "seek": 157632, "start": 1576.32, "end": 1583.72, "text": " So the point of this section is just to say that data is often", "tokens": [407, 264, 935, 295, 341, 3541, 307, 445, 281, 584, 300, 1412, 307, 2049], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 424, "seek": 157632, "start": 1583.72, "end": 1587.52, "text": " time more important than design a model.", "tokens": [565, 544, 1021, 813, 1715, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 425, "seek": 157632, "start": 1587.52, "end": 1589.04, "text": " Because without data, in particular,", "tokens": [1436, 1553, 1412, 11, 294, 1729, 11], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 426, "seek": 157632, "start": 1589.04, "end": 1591.2, "text": " without a good evaluation benchmark,", "tokens": [1553, 257, 665, 13344, 18927, 11], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 427, "seek": 157632, "start": 1591.2, "end": 1597.52, "text": " is essentially impossible to do research in this area.", "tokens": [307, 4476, 6243, 281, 360, 2132, 294, 341, 1859, 13], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 428, "seek": 157632, "start": 1597.52, "end": 1599.6799999999998, "text": " And collecting data is not review.", "tokens": [400, 12510, 1412, 307, 406, 3131, 13], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 429, "seek": 157632, "start": 1599.6799999999998, "end": 1605.3999999999999, "text": " It's not review the process that you use is now well", "tokens": [467, 311, 406, 3131, 264, 1399, 300, 291, 764, 307, 586, 731], "temperature": 0.0, "avg_logprob": -0.19555408954620362, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.00027129758382216096}, {"id": 430, "seek": 160540, "start": 1605.4, "end": 1612.0, "text": " established and in practice, it is hard to do.", "tokens": [7545, 293, 294, 3124, 11, 309, 307, 1152, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 431, "seek": 160540, "start": 1612.0, "end": 1615.2800000000002, "text": " And another thing to consider, sorry,", "tokens": [400, 1071, 551, 281, 1949, 11, 2597, 11], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 432, "seek": 160540, "start": 1615.2800000000002, "end": 1620.2, "text": " is to look at the data, look at the data when you collected", "tokens": [307, 281, 574, 412, 264, 1412, 11, 574, 412, 264, 1412, 562, 291, 11087], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 433, "seek": 160540, "start": 1620.2, "end": 1622.16, "text": " and also before you start training your model.", "tokens": [293, 611, 949, 291, 722, 3097, 428, 2316, 13], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 434, "seek": 160540, "start": 1622.16, "end": 1626.5600000000002, "text": " Because you may realize some issues with the quality", "tokens": [1436, 291, 815, 4325, 512, 2663, 365, 264, 3125], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 435, "seek": 160540, "start": 1626.5600000000002, "end": 1629.4, "text": " of the translations, if you speak the language,", "tokens": [295, 264, 37578, 11, 498, 291, 1710, 264, 2856, 11], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 436, "seek": 160540, "start": 1629.4, "end": 1632.3600000000001, "text": " oftentimes English is on one side.", "tokens": [18349, 3669, 307, 322, 472, 1252, 13], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 437, "seek": 160540, "start": 1632.3600000000001, "end": 1635.1200000000001, "text": " And or you may discover biases or you", "tokens": [400, 420, 291, 815, 4411, 32152, 420, 291], "temperature": 0.0, "avg_logprob": -0.20868522562879196, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.0007438252796418965}, {"id": 438, "seek": 163512, "start": 1635.12, "end": 1637.2399999999998, "text": " may discover interesting things.", "tokens": [815, 4411, 1880, 721, 13], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 439, "seek": 163512, "start": 1637.2399999999998, "end": 1639.6399999999999, "text": " So always look at the data as opposed", "tokens": [407, 1009, 574, 412, 264, 1412, 382, 8851], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 440, "seek": 163512, "start": 1639.6399999999999, "end": 1645.12, "text": " to just apply your method in a black box way.", "tokens": [281, 445, 3079, 428, 3170, 294, 257, 2211, 2424, 636, 13], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 441, "seek": 163512, "start": 1645.12, "end": 1651.08, "text": " That concludes my little discussion of the data part.", "tokens": [663, 24643, 452, 707, 5017, 295, 264, 1412, 644, 13], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 442, "seek": 163512, "start": 1651.08, "end": 1652.84, "text": " Are there any questions on this?", "tokens": [2014, 456, 604, 1651, 322, 341, 30], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 443, "seek": 163512, "start": 1652.84, "end": 1655.04, "text": " If you could talk about building a language model", "tokens": [759, 291, 727, 751, 466, 2390, 257, 2856, 2316], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 444, "seek": 163512, "start": 1655.04, "end": 1656.6799999999998, "text": " for low resource language.", "tokens": [337, 2295, 7684, 2856, 13], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 445, "seek": 163512, "start": 1656.6799999999998, "end": 1657.6799999999998, "text": " Yeah, yeah, yeah.", "tokens": [865, 11, 1338, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 446, "seek": 163512, "start": 1657.6799999999998, "end": 1661.6399999999999, "text": " So in this case, what we did, actually,", "tokens": [407, 294, 341, 1389, 11, 437, 321, 630, 11, 767, 11], "temperature": 0.0, "avg_logprob": -0.2223326641580333, "compression_ratio": 1.5363636363636364, "no_speech_prob": 0.000518393178936094}, {"id": 447, "seek": 166164, "start": 1661.64, "end": 1667.0, "text": " we took the common crawl data.", "tokens": [321, 1890, 264, 2689, 24767, 1412, 13], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 448, "seek": 166164, "start": 1667.0, "end": 1669.88, "text": " And I think I actually don't remember exactly.", "tokens": [400, 286, 519, 286, 767, 500, 380, 1604, 2293, 13], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 449, "seek": 166164, "start": 1669.88, "end": 1673.8000000000002, "text": " So for Nepali, I think we had to concatenate the Wikipedia", "tokens": [407, 337, 24875, 5103, 11, 286, 519, 321, 632, 281, 1588, 7186, 473, 264, 28999], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 450, "seek": 166164, "start": 1673.8000000000002, "end": 1676.3600000000001, "text": " data and the common crawl data because the Wikipedia data", "tokens": [1412, 293, 264, 2689, 24767, 1412, 570, 264, 28999, 1412], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 451, "seek": 166164, "start": 1676.3600000000001, "end": 1678.0400000000002, "text": " was just too small.", "tokens": [390, 445, 886, 1359, 13], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 452, "seek": 166164, "start": 1678.0400000000002, "end": 1682.1200000000001, "text": " And we simply train a count-based angram.", "tokens": [400, 321, 2935, 3847, 257, 1207, 12, 6032, 2562, 2356, 13], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 453, "seek": 166164, "start": 1682.1200000000001, "end": 1684.72, "text": " And then the count-based angram gives you,", "tokens": [400, 550, 264, 1207, 12, 6032, 2562, 2356, 2709, 291, 11], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 454, "seek": 166164, "start": 1684.72, "end": 1686.5600000000002, "text": " I don't know if you studied this, but it gives you", "tokens": [286, 500, 380, 458, 498, 291, 9454, 341, 11, 457, 309, 2709, 291], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 455, "seek": 166164, "start": 1686.5600000000002, "end": 1691.6000000000001, "text": " the probability of more work given some fixed window of context.", "tokens": [264, 8482, 295, 544, 589, 2212, 512, 6806, 4910, 295, 4319, 13], "temperature": 0.0, "avg_logprob": -0.21287310750860916, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.00046919158194214106}, {"id": 456, "seek": 169160, "start": 1691.6, "end": 1695.7199999999998, "text": " And then for a given sentence, we would, like,", "tokens": [400, 550, 337, 257, 2212, 8174, 11, 321, 576, 11, 411, 11], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 457, "seek": 169160, "start": 1695.7199999999998, "end": 1698.32, "text": " let's say, what is it?", "tokens": [718, 311, 584, 11, 437, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 458, "seek": 169160, "start": 1698.32, "end": 1703.7199999999998, "text": " For a given sentence, you would compute the score for every work.", "tokens": [1171, 257, 2212, 8174, 11, 291, 576, 14722, 264, 6175, 337, 633, 589, 13], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 459, "seek": 169160, "start": 1703.7199999999998, "end": 1709.24, "text": " And then the score of a sentence is simply the average", "tokens": [400, 550, 264, 6175, 295, 257, 8174, 307, 2935, 264, 4274], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 460, "seek": 169160, "start": 1709.24, "end": 1712.52, "text": " probability score across all the words in the sentence.", "tokens": [8482, 6175, 2108, 439, 264, 2283, 294, 264, 8174, 13], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 461, "seek": 169160, "start": 1712.52, "end": 1713.7199999999998, "text": " And that would give you a score.", "tokens": [400, 300, 576, 976, 291, 257, 6175, 13], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 462, "seek": 169160, "start": 1713.7199999999998, "end": 1718.24, "text": " And then we would simply have a threshold on that.", "tokens": [400, 550, 321, 576, 2935, 362, 257, 14678, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.19819007449679904, "compression_ratio": 1.8131868131868132, "no_speech_prob": 0.0002831091114785522}, {"id": 463, "seek": 171824, "start": 1718.24, "end": 1722.88, "text": " And so all the sentences that would score too low,", "tokens": [400, 370, 439, 264, 16579, 300, 576, 6175, 886, 2295, 11], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 464, "seek": 171824, "start": 1722.88, "end": 1724.88, "text": " that would be deemed not fluent enough,", "tokens": [300, 576, 312, 27637, 406, 40799, 1547, 11], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 465, "seek": 171824, "start": 1724.88, "end": 1728.52, "text": " would be sent for reward.", "tokens": [576, 312, 2279, 337, 7782, 13], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 466, "seek": 171824, "start": 1728.52, "end": 1732.32, "text": " But of course, whenever you have an entity,", "tokens": [583, 295, 1164, 11, 5699, 291, 362, 364, 13977, 11], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 467, "seek": 171824, "start": 1732.32, "end": 1738.52, "text": " whenever you have, you know, it's not super reliable.", "tokens": [5699, 291, 362, 11, 291, 458, 11, 309, 311, 406, 1687, 12924, 13], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 468, "seek": 171824, "start": 1738.52, "end": 1743.08, "text": " And if you go on languages that are even lower resource", "tokens": [400, 498, 291, 352, 322, 8650, 300, 366, 754, 3126, 7684], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 469, "seek": 171824, "start": 1743.08, "end": 1746.04, "text": " than Sinala, then you don't even have really", "tokens": [813, 11187, 5159, 11, 550, 291, 500, 380, 754, 362, 534], "temperature": 0.0, "avg_logprob": -0.14421978662180346, "compression_ratio": 1.640625, "no_speech_prob": 0.00010079921776195988}, {"id": 470, "seek": 174604, "start": 1746.04, "end": 1748.32, "text": " in domain data.", "tokens": [294, 9274, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 471, "seek": 174604, "start": 1748.32, "end": 1750.44, "text": " Like Wikipedia is not in all the languages.", "tokens": [1743, 28999, 307, 406, 294, 439, 264, 8650, 13], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 472, "seek": 174604, "start": 1750.44, "end": 1753.92, "text": " And then it becomes even harder.", "tokens": [400, 550, 309, 3643, 754, 6081, 13], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 473, "seek": 174604, "start": 1753.92, "end": 1758.1599999999999, "text": " And so oftentimes, so now that we are scaling this up,", "tokens": [400, 370, 18349, 11, 370, 586, 300, 321, 366, 21589, 341, 493, 11], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 474, "seek": 174604, "start": 1758.1599999999999, "end": 1762.6399999999999, "text": " we are looking at neural language models", "tokens": [321, 366, 1237, 412, 18161, 2856, 5245], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 475, "seek": 174604, "start": 1762.6399999999999, "end": 1764.56, "text": " that are trained in a multilingual way", "tokens": [300, 366, 8895, 294, 257, 2120, 38219, 636], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 476, "seek": 174604, "start": 1764.56, "end": 1769.92, "text": " and that are fine tuned on a small in domain", "tokens": [293, 300, 366, 2489, 10870, 322, 257, 1359, 294, 9274], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 477, "seek": 174604, "start": 1769.92, "end": 1773.92, "text": " modeling with data set, if available.", "tokens": [15983, 365, 1412, 992, 11, 498, 2435, 13], "temperature": 0.0, "avg_logprob": -0.2575498308454241, "compression_ratio": 1.6230366492146597, "no_speech_prob": 0.0004335881385486573}, {"id": 478, "seek": 177392, "start": 1773.92, "end": 1780.0, "text": " But also this step is not particularly obvious how to do it.", "tokens": [583, 611, 341, 1823, 307, 406, 4098, 6322, 577, 281, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 479, "seek": 177392, "start": 1780.0, "end": 1780.92, "text": " Yeah, sure.", "tokens": [865, 11, 988, 13], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 480, "seek": 177392, "start": 1780.92, "end": 1785.1200000000001, "text": " So thank you for this amazing result.", "tokens": [407, 1309, 291, 337, 341, 2243, 1874, 13], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 481, "seek": 177392, "start": 1785.1200000000001, "end": 1789.16, "text": " But I just want to comment, because I've noticed that Wikipedia", "tokens": [583, 286, 445, 528, 281, 2871, 11, 570, 286, 600, 5694, 300, 28999], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 482, "seek": 177392, "start": 1789.16, "end": 1792.4, "text": " actually will have different content with different language", "tokens": [767, 486, 362, 819, 2701, 365, 819, 2856], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 483, "seek": 177392, "start": 1792.4, "end": 1793.1200000000001, "text": " you choose.", "tokens": [291, 2826, 13], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 484, "seek": 177392, "start": 1793.1200000000001, "end": 1797.96, "text": " So for example, they'll have very detailed description", "tokens": [407, 337, 1365, 11, 436, 603, 362, 588, 9942, 3855], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 485, "seek": 177392, "start": 1797.96, "end": 1800.3200000000002, "text": " of some basic topic.", "tokens": [295, 512, 3875, 4829, 13], "temperature": 0.0, "avg_logprob": -0.23976467876899532, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0001833549322327599}, {"id": 486, "seek": 180032, "start": 1800.32, "end": 1804.6399999999999, "text": " And then in other languages, even with really commonly", "tokens": [400, 550, 294, 661, 8650, 11, 754, 365, 534, 12719], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 487, "seek": 180032, "start": 1804.6399999999999, "end": 1807.9199999999998, "text": " used language like Chinese, they'll actually just", "tokens": [1143, 2856, 411, 4649, 11, 436, 603, 767, 445], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 488, "seek": 180032, "start": 1807.9199999999998, "end": 1811.08, "text": " have completely different content or basically simplified", "tokens": [362, 2584, 819, 2701, 420, 1936, 26335], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 489, "seek": 180032, "start": 1811.08, "end": 1812.12, "text": " content.", "tokens": [2701, 13], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 490, "seek": 180032, "start": 1812.12, "end": 1816.24, "text": " So I'm pretty sure this is also going", "tokens": [407, 286, 478, 1238, 988, 341, 307, 611, 516], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 491, "seek": 180032, "start": 1816.24, "end": 1819.1599999999999, "text": " to happen with rarely used languages.", "tokens": [281, 1051, 365, 13752, 1143, 8650, 13], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 492, "seek": 180032, "start": 1819.1599999999999, "end": 1823.76, "text": " So yeah, I just generally think that Wikipedia", "tokens": [407, 1338, 11, 286, 445, 5101, 519, 300, 28999], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 493, "seek": 180032, "start": 1823.76, "end": 1828.36, "text": " might not be, basically they might not", "tokens": [1062, 406, 312, 11, 1936, 436, 1062, 406], "temperature": 0.0, "avg_logprob": -0.19892587541024895, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.00011399027425795794}, {"id": 494, "seek": 182836, "start": 1828.36, "end": 1832.9199999999998, "text": " be very direct reference to the translation.", "tokens": [312, 588, 2047, 6408, 281, 264, 12853, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 495, "seek": 182836, "start": 1832.9199999999998, "end": 1833.9199999999998, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 496, "seek": 182836, "start": 1833.9199999999998, "end": 1834.3999999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 497, "seek": 182836, "start": 1834.3999999999999, "end": 1836.1999999999998, "text": " So it's an excellent point.", "tokens": [407, 309, 311, 364, 7103, 935, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 498, "seek": 182836, "start": 1836.1999999999998, "end": 1837.6799999999998, "text": " And this is something that I'm going", "tokens": [400, 341, 307, 746, 300, 286, 478, 516], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 499, "seek": 182836, "start": 1837.6799999999998, "end": 1840.3999999999999, "text": " to discuss more in the third part of the lecture.", "tokens": [281, 2248, 544, 294, 264, 2636, 644, 295, 264, 7991, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 500, "seek": 182836, "start": 1840.3999999999999, "end": 1846.9199999999998, "text": " And in a way, this is the translation problem.", "tokens": [400, 294, 257, 636, 11, 341, 307, 264, 12853, 1154, 13], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 501, "seek": 182836, "start": 1846.9199999999998, "end": 1852.36, "text": " So we need to accept the fact that content that is originated", "tokens": [407, 321, 643, 281, 3241, 264, 1186, 300, 2701, 300, 307, 31129], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 502, "seek": 182836, "start": 1852.36, "end": 1856.1599999999999, "text": " in a certain language may have a different topic distribution", "tokens": [294, 257, 1629, 2856, 815, 362, 257, 819, 4829, 7316], "temperature": 0.0, "avg_logprob": -0.19494920248513695, "compression_ratio": 1.6208530805687205, "no_speech_prob": 0.00011855762568302453}, {"id": 503, "seek": 185616, "start": 1856.16, "end": 1859.64, "text": " than content that originates in another language.", "tokens": [813, 2701, 300, 4957, 1024, 294, 1071, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 504, "seek": 185616, "start": 1859.64, "end": 1863.96, "text": " And what you want to translate is really content that originates", "tokens": [400, 437, 291, 528, 281, 13799, 307, 534, 2701, 300, 4957, 1024], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 505, "seek": 185616, "start": 1863.96, "end": 1866.28, "text": " in the source language.", "tokens": [294, 264, 4009, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 506, "seek": 185616, "start": 1866.28, "end": 1869.76, "text": " And so you need to live with it.", "tokens": [400, 370, 291, 643, 281, 1621, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 507, "seek": 185616, "start": 1869.76, "end": 1871.52, "text": " That's what it is.", "tokens": [663, 311, 437, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 508, "seek": 185616, "start": 1871.52, "end": 1878.4, "text": " So oftentimes in the public benchmarks, in the literature,", "tokens": [407, 18349, 294, 264, 1908, 43751, 11, 294, 264, 10394, 11], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 509, "seek": 185616, "start": 1878.4, "end": 1882.1200000000001, "text": " you find that people assume that corpora are comparable.", "tokens": [291, 915, 300, 561, 6552, 300, 6804, 64, 366, 25323, 13], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 510, "seek": 185616, "start": 1882.1200000000001, "end": 1885.28, "text": " So everything that originates in English", "tokens": [407, 1203, 300, 4957, 1024, 294, 3669], "temperature": 0.0, "avg_logprob": -0.1960057778791948, "compression_ratio": 1.743718592964824, "no_speech_prob": 6.857341213617474e-05}, {"id": 511, "seek": 188528, "start": 1885.28, "end": 1889.08, "text": " and let's say Nepali essentially comes from the same kind", "tokens": [293, 718, 311, 584, 24875, 5103, 4476, 1487, 490, 264, 912, 733], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 512, "seek": 188528, "start": 1889.08, "end": 1889.8, "text": " of sources.", "tokens": [295, 7139, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 513, "seek": 188528, "start": 1889.8, "end": 1894.28, "text": " So it's news and it's all news talking about the senior things.", "tokens": [407, 309, 311, 2583, 293, 309, 311, 439, 2583, 1417, 466, 264, 7965, 721, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 514, "seek": 188528, "start": 1894.28, "end": 1895.8799999999999, "text": " But in practice, this is not true.", "tokens": [583, 294, 3124, 11, 341, 307, 406, 2074, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 515, "seek": 188528, "start": 1895.8799999999999, "end": 1899.48, "text": " It's not true for Wikipedia, as you correctly said.", "tokens": [467, 311, 406, 2074, 337, 28999, 11, 382, 291, 8944, 848, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 516, "seek": 188528, "start": 1899.48, "end": 1901.36, "text": " But it's also true for news, right?", "tokens": [583, 309, 311, 611, 2074, 337, 2583, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 517, "seek": 188528, "start": 1901.36, "end": 1905.52, "text": " Because if I look at local news in Nepal", "tokens": [1436, 498, 286, 574, 412, 2654, 2583, 294, 36283], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 518, "seek": 188528, "start": 1905.52, "end": 1909.68, "text": " and local news over here, it's quite different.", "tokens": [293, 2654, 2583, 670, 510, 11, 309, 311, 1596, 819, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 519, "seek": 188528, "start": 1909.68, "end": 1912.16, "text": " So this is a general problem.", "tokens": [407, 341, 307, 257, 2674, 1154, 13], "temperature": 0.0, "avg_logprob": -0.19895170353077077, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0002191172243328765}, {"id": 520, "seek": 191216, "start": 1912.16, "end": 1916.3200000000002, "text": " And this has implications in terms of the methods", "tokens": [400, 341, 575, 16602, 294, 2115, 295, 264, 7150], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 521, "seek": 191216, "start": 1916.3200000000002, "end": 1918.76, "text": " that we are going to use as we will discuss later.", "tokens": [300, 321, 366, 516, 281, 764, 382, 321, 486, 2248, 1780, 13], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 522, "seek": 191216, "start": 1925.1200000000001, "end": 1927.1200000000001, "text": " Other questions?", "tokens": [5358, 1651, 30], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 523, "seek": 191216, "start": 1927.1200000000001, "end": 1930.48, "text": " Or I'm not sure if I was clear.", "tokens": [1610, 286, 478, 406, 988, 498, 286, 390, 1850, 13], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 524, "seek": 191216, "start": 1930.48, "end": 1937.44, "text": " It's really hard to speak without seeing, without feedback.", "tokens": [467, 311, 534, 1152, 281, 1710, 1553, 2577, 11, 1553, 5824, 13], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 525, "seek": 191216, "start": 1937.44, "end": 1941.6000000000001, "text": " Please, please let me know if anything is not clear.", "tokens": [2555, 11, 1767, 718, 385, 458, 498, 1340, 307, 406, 1850, 13], "temperature": 0.0, "avg_logprob": -0.23847691218058267, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.00037678625085391104}, {"id": 526, "seek": 194160, "start": 1941.6, "end": 1943.3999999999999, "text": " OK, let's talk about modeling.", "tokens": [2264, 11, 718, 311, 751, 466, 15983, 13], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 527, "seek": 194160, "start": 1943.3999999999999, "end": 1948.36, "text": " And this is going to be most of our,", "tokens": [400, 341, 307, 516, 281, 312, 881, 295, 527, 11], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 528, "seek": 194160, "start": 1948.36, "end": 1951.1599999999999, "text": " where we are going to spend most of our time.", "tokens": [689, 321, 366, 516, 281, 3496, 881, 295, 527, 565, 13], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 529, "seek": 194160, "start": 1951.1599999999999, "end": 1955.0, "text": " So remember that we have this funky chart,", "tokens": [407, 1604, 300, 321, 362, 341, 33499, 6927, 11], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 530, "seek": 194160, "start": 1955.0, "end": 1956.9199999999998, "text": " where we have domain and languages.", "tokens": [689, 321, 362, 9274, 293, 8650, 13], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 531, "seek": 194160, "start": 1956.9199999999998, "end": 1961.04, "text": " And it's a pretty complicated learning setting.", "tokens": [400, 309, 311, 257, 1238, 6179, 2539, 3287, 13], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 532, "seek": 194160, "start": 1961.04, "end": 1963.36, "text": " And here for simplicity, we are going", "tokens": [400, 510, 337, 25632, 11, 321, 366, 516], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 533, "seek": 194160, "start": 1963.36, "end": 1969.28, "text": " to focus just on English and Nepali languages.", "tokens": [281, 1879, 445, 322, 3669, 293, 24875, 5103, 8650, 13], "temperature": 0.0, "avg_logprob": -0.15838307274712457, "compression_ratio": 1.6414141414141414, "no_speech_prob": 0.00039627347723580897}, {"id": 534, "seek": 196928, "start": 1969.28, "end": 1971.56, "text": " And we start with a simplest setting ever,", "tokens": [400, 321, 722, 365, 257, 22811, 3287, 1562, 11], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 535, "seek": 196928, "start": 1971.56, "end": 1973.92, "text": " which is supervised learning, assuming", "tokens": [597, 307, 46533, 2539, 11, 11926], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 536, "seek": 196928, "start": 1973.92, "end": 1977.12, "text": " that all data is in the same domain.", "tokens": [300, 439, 1412, 307, 294, 264, 912, 9274, 13], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 537, "seek": 196928, "start": 1977.12, "end": 1981.52, "text": " So perhaps you have a small training set.", "tokens": [407, 4317, 291, 362, 257, 1359, 3097, 992, 13], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 538, "seek": 196928, "start": 1981.52, "end": 1985.24, "text": " And the test set is in the same domain as the training set,", "tokens": [400, 264, 1500, 992, 307, 294, 264, 912, 9274, 382, 264, 3097, 992, 11], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 539, "seek": 196928, "start": 1985.24, "end": 1988.04, "text": " as the parallel training set.", "tokens": [382, 264, 8952, 3097, 992, 13], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 540, "seek": 196928, "start": 1988.04, "end": 1991.44, "text": " So we denote as x the source sentence,", "tokens": [407, 321, 45708, 382, 2031, 264, 4009, 8174, 11], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 541, "seek": 196928, "start": 1991.44, "end": 1994.12, "text": " as y, the target sentence, d.", "tokens": [382, 288, 11, 264, 3779, 8174, 11, 274, 13], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 542, "seek": 196928, "start": 1994.12, "end": 1997.52, "text": " So d is the parallel data set that", "tokens": [407, 274, 307, 264, 8952, 1412, 992, 300], "temperature": 0.0, "avg_logprob": -0.18631243464922664, "compression_ratio": 1.83419689119171, "no_speech_prob": 0.0004035018791910261}, {"id": 543, "seek": 199752, "start": 1997.52, "end": 2001.28, "text": " collects all these sentence pairs.", "tokens": [39897, 439, 613, 8174, 15494, 13], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 544, "seek": 199752, "start": 2001.28, "end": 2005.2, "text": " And so this is the typical empirical risk minimization framework,", "tokens": [400, 370, 341, 307, 264, 7476, 31886, 3148, 4464, 2144, 8388, 11], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 545, "seek": 199752, "start": 2005.2, "end": 2008.44, "text": " whereby you do supervised learning.", "tokens": [36998, 291, 360, 46533, 2539, 13], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 546, "seek": 199752, "start": 2008.44, "end": 2010.56, "text": " In this case, you minimize the percent of the loss,", "tokens": [682, 341, 1389, 11, 291, 17522, 264, 3043, 295, 264, 4470, 11], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 547, "seek": 199752, "start": 2010.56, "end": 2013.44, "text": " and you want to maximize the probability of the target", "tokens": [293, 291, 528, 281, 19874, 264, 8482, 295, 264, 3779], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 548, "seek": 199752, "start": 2013.44, "end": 2015.76, "text": " sentence given the source sentence.", "tokens": [8174, 2212, 264, 4009, 8174, 13], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 549, "seek": 199752, "start": 2015.76, "end": 2021.8799999999999, "text": " And so a way to visualize this is to say that x is my English sentence.", "tokens": [400, 370, 257, 636, 281, 23273, 341, 307, 281, 584, 300, 2031, 307, 452, 3669, 8174, 13], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 550, "seek": 199752, "start": 2021.8799999999999, "end": 2025.56, "text": " It goes to my encoder, decoder, and antisystem", "tokens": [467, 1709, 281, 452, 2058, 19866, 11, 979, 19866, 11, 293, 2511, 271, 9321], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 551, "seek": 199752, "start": 2025.56, "end": 2027.48, "text": " that produces a prediction.", "tokens": [300, 14725, 257, 17630, 13], "temperature": 0.0, "avg_logprob": -0.207829546045374, "compression_ratio": 1.7459016393442623, "no_speech_prob": 0.0002429360756650567}, {"id": 552, "seek": 202748, "start": 2027.48, "end": 2029.44, "text": " And then we have a loss that measure", "tokens": [400, 550, 321, 362, 257, 4470, 300, 3481], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 553, "seek": 202748, "start": 2029.44, "end": 2031.96, "text": " the discrepancy between the human reference,", "tokens": [264, 2983, 265, 6040, 1344, 1296, 264, 1952, 6408, 11], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 554, "seek": 202748, "start": 2031.96, "end": 2034.08, "text": " that you took the sentence x.", "tokens": [300, 291, 1890, 264, 8174, 2031, 13], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 555, "seek": 202748, "start": 2034.08, "end": 2038.0, "text": " You asked your translator that gave you the human reference.", "tokens": [509, 2351, 428, 35223, 300, 2729, 291, 264, 1952, 6408, 13], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 556, "seek": 202748, "start": 2038.0, "end": 2039.8, "text": " And so the percent of the loss measure", "tokens": [400, 370, 264, 3043, 295, 264, 4470, 3481], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 557, "seek": 202748, "start": 2039.8, "end": 2042.56, "text": " the discrepancy between the model prediction", "tokens": [264, 2983, 265, 6040, 1344, 1296, 264, 2316, 17630], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 558, "seek": 202748, "start": 2042.56, "end": 2043.76, "text": " and the human reference.", "tokens": [293, 264, 1952, 6408, 13], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 559, "seek": 202748, "start": 2046.04, "end": 2052.56, "text": " Now, notice that here I'm denoting with boxes.", "tokens": [823, 11, 3449, 300, 510, 286, 478, 1441, 17001, 365, 9002, 13], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 560, "seek": 202748, "start": 2052.56, "end": 2056.4, "text": " Now model components, in this case, the blue boxes,", "tokens": [823, 2316, 6677, 11, 294, 341, 1389, 11, 264, 3344, 9002, 11], "temperature": 0.0, "avg_logprob": -0.24098977855607576, "compression_ratio": 1.8627450980392157, "no_speech_prob": 7.609701424371451e-05}, {"id": 561, "seek": 205640, "start": 2056.4, "end": 2060.1600000000003, "text": " the encoder, the processes English sentences,", "tokens": [264, 2058, 19866, 11, 264, 7555, 3669, 16579, 11], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 562, "seek": 205640, "start": 2060.1600000000003, "end": 2066.7200000000003, "text": " and the red boxes, the decoder that operates in the poly.", "tokens": [293, 264, 2182, 9002, 11, 264, 979, 19866, 300, 22577, 294, 264, 6754, 13], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 563, "seek": 205640, "start": 2066.7200000000003, "end": 2070.2000000000003, "text": " And I just wanted to add one more thing,", "tokens": [400, 286, 445, 1415, 281, 909, 472, 544, 551, 11], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 564, "seek": 205640, "start": 2070.2000000000003, "end": 2073.04, "text": " which is that if you don't have a lot of parallel data,", "tokens": [597, 307, 300, 498, 291, 500, 380, 362, 257, 688, 295, 8952, 1412, 11], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 565, "seek": 205640, "start": 2073.04, "end": 2074.76, "text": " you need to regularize.", "tokens": [291, 643, 281, 3890, 1125, 13], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 566, "seek": 205640, "start": 2074.76, "end": 2078.48, "text": " And so you can do a wad decay, which is pretty standard.", "tokens": [400, 370, 291, 393, 360, 257, 261, 345, 21039, 11, 597, 307, 1238, 3832, 13], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 567, "seek": 205640, "start": 2078.48, "end": 2082.36, "text": " So you kind of minimize the abnormal parameters,", "tokens": [407, 291, 733, 295, 17522, 264, 32847, 9834, 11], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 568, "seek": 205640, "start": 2082.36, "end": 2084.2000000000003, "text": " but there are also other methods", "tokens": [457, 456, 366, 611, 661, 7150], "temperature": 0.0, "avg_logprob": -0.20757491989891128, "compression_ratio": 1.5991189427312775, "no_speech_prob": 0.0005988346529193223}, {"id": 569, "seek": 208420, "start": 2084.2, "end": 2086.6, "text": " that I think in the machine learning class,", "tokens": [300, 286, 519, 294, 264, 3479, 2539, 1508, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 570, "seek": 208420, "start": 2086.6, "end": 2089.64, "text": " you may have seen like dropout, where you set to 0", "tokens": [291, 815, 362, 1612, 411, 3270, 346, 11, 689, 291, 992, 281, 1958], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 571, "seek": 208420, "start": 2089.64, "end": 2093.04, "text": " at random hidden units in your encoder, decoder,", "tokens": [412, 4974, 7633, 6815, 294, 428, 2058, 19866, 11, 979, 19866, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 572, "seek": 208420, "start": 2093.04, "end": 2095.8399999999997, "text": " or you can do levels smoothing, whereby you,", "tokens": [420, 291, 393, 360, 4358, 899, 6259, 571, 11, 36998, 291, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 573, "seek": 208420, "start": 2098.08, "end": 2101.0, "text": " in your cross-entropy loss, instead of,", "tokens": [294, 428, 3278, 12, 317, 27514, 4470, 11, 2602, 295, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 574, "seek": 208420, "start": 2101.0, "end": 2102.68, "text": " actually, should be more over here.", "tokens": [767, 11, 820, 312, 544, 670, 510, 13], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 575, "seek": 208420, "start": 2103.64, "end": 2108.64, "text": " Instead of setting as a target for the correct word,", "tokens": [7156, 295, 3287, 382, 257, 3779, 337, 264, 3006, 1349, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 576, "seek": 208420, "start": 2109.2799999999997, "end": 2111.8399999999997, "text": " so this is the probability over the whole sequence,", "tokens": [370, 341, 307, 264, 8482, 670, 264, 1379, 8310, 11], "temperature": 0.0, "avg_logprob": -0.2995768877176138, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00046084722271189094}, {"id": 577, "seek": 211184, "start": 2111.84, "end": 2115.92, "text": " which you can factorize over each individual word,", "tokens": [597, 291, 393, 5952, 1125, 670, 1184, 2609, 1349, 11], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 578, "seek": 211184, "start": 2115.92, "end": 2117.44, "text": " by the product rule.", "tokens": [538, 264, 1674, 4978, 13], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 579, "seek": 211184, "start": 2118.48, "end": 2123.48, "text": " So for every word, you have the correct word that you want,", "tokens": [407, 337, 633, 1349, 11, 291, 362, 264, 3006, 1349, 300, 291, 528, 11], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 580, "seek": 211184, "start": 2124.36, "end": 2126.4, "text": " sorry, at every time step,", "tokens": [2597, 11, 412, 633, 565, 1823, 11], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 581, "seek": 211184, "start": 2126.4, "end": 2128.7200000000003, "text": " you want to predict the next word.", "tokens": [291, 528, 281, 6069, 264, 958, 1349, 13], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 582, "seek": 211184, "start": 2128.7200000000003, "end": 2131.6000000000004, "text": " And now instead of assigning 100% of probability", "tokens": [400, 586, 2602, 295, 49602, 2319, 4, 295, 8482], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 583, "seek": 211184, "start": 2131.6000000000004, "end": 2134.6800000000003, "text": " on the next word, you, let's say,", "tokens": [322, 264, 958, 1349, 11, 291, 11, 718, 311, 584, 11], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 584, "seek": 211184, "start": 2134.6800000000003, "end": 2137.04, "text": " you assign 90% of the probability,", "tokens": [291, 6269, 4289, 4, 295, 264, 8482, 11], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 585, "seek": 211184, "start": 2137.04, "end": 2140.04, "text": " and the remaining 10% you evenly distribute", "tokens": [293, 264, 8877, 1266, 4, 291, 17658, 20594], "temperature": 0.0, "avg_logprob": -0.20931522369384767, "compression_ratio": 1.658878504672897, "no_speech_prob": 0.0003271186142228544}, {"id": 586, "seek": 214004, "start": 2140.04, "end": 2142.08, "text": " across all the remaining words, so that the model", "tokens": [2108, 439, 264, 8877, 2283, 11, 370, 300, 264, 2316], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 587, "seek": 214004, "start": 2142.08, "end": 2143.52, "text": " is not too overly confident.", "tokens": [307, 406, 886, 24324, 6679, 13], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 588, "seek": 214004, "start": 2143.52, "end": 2145.92, "text": " So the combinations of these two things", "tokens": [407, 264, 21267, 295, 613, 732, 721], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 589, "seek": 214004, "start": 2145.92, "end": 2150.44, "text": " are usually good ways to regularize the system.", "tokens": [366, 2673, 665, 2098, 281, 3890, 1125, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 590, "seek": 214004, "start": 2151.0, "end": 2153.16, "text": " So that's the simplest setting.", "tokens": [407, 300, 311, 264, 22811, 3287, 13], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 591, "seek": 214004, "start": 2153.16, "end": 2155.6, "text": " Now, let's see what happens when we have also", "tokens": [823, 11, 718, 311, 536, 437, 2314, 562, 321, 362, 611], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 592, "seek": 214004, "start": 2155.6, "end": 2158.32, "text": " some source side monolingual data.", "tokens": [512, 4009, 1252, 1108, 401, 278, 901, 1412, 13], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 593, "seek": 214004, "start": 2158.32, "end": 2162.04, "text": " So here now we have an additional data set", "tokens": [407, 510, 586, 321, 362, 364, 4497, 1412, 992], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 594, "seek": 214004, "start": 2162.04, "end": 2167.04, "text": " that has only sentences in the source language English.", "tokens": [300, 575, 787, 16579, 294, 264, 4009, 2856, 3669, 13], "temperature": 0.0, "avg_logprob": -0.17524210611979166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 0.00017259831656701863}, {"id": 595, "seek": 216704, "start": 2167.04, "end": 2170.04, "text": " So in addition to T, now we have also MS,", "tokens": [407, 294, 4500, 281, 314, 11, 586, 321, 362, 611, 7395, 11], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 596, "seek": 216704, "start": 2170.04, "end": 2174.04, "text": " which is the monolingual data on the source side.", "tokens": [597, 307, 264, 1108, 401, 278, 901, 1412, 322, 264, 4009, 1252, 13], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 597, "seek": 216704, "start": 2174.04, "end": 2176.04, "text": " So we have a bunch of axes.", "tokens": [407, 321, 362, 257, 3840, 295, 35387, 13], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 598, "seek": 216704, "start": 2176.04, "end": 2181.04, "text": " So typically, M is much greater than M, right?", "tokens": [407, 5850, 11, 376, 307, 709, 5044, 813, 376, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 599, "seek": 216704, "start": 2181.04, "end": 2185.04, "text": " And now a typical way to use this data", "tokens": [400, 586, 257, 7476, 636, 281, 764, 341, 1412], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 600, "seek": 216704, "start": 2185.04, "end": 2190.04, "text": " is to model the margin distribution of the data of X, right?", "tokens": [307, 281, 2316, 264, 10270, 7316, 295, 264, 1412, 295, 1783, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 601, "seek": 216704, "start": 2190.04, "end": 2193.04, "text": " And so there are many ways to do that.", "tokens": [400, 370, 456, 366, 867, 2098, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 602, "seek": 216704, "start": 2193.04, "end": 2195.04, "text": " One way that has proved that,", "tokens": [1485, 636, 300, 575, 14617, 300, 11], "temperature": 0.0, "avg_logprob": -0.29111591820577976, "compression_ratio": 1.5876777251184835, "no_speech_prob": 0.0001908358681248501}, {"id": 603, "seek": 219504, "start": 2195.04, "end": 2198.04, "text": " one way that has proven to be pretty effective", "tokens": [472, 636, 300, 575, 12785, 281, 312, 1238, 4942], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 604, "seek": 219504, "start": 2198.04, "end": 2202.04, "text": " in machine translation is to do denoising auto encoding.", "tokens": [294, 3479, 12853, 307, 281, 360, 1441, 78, 3436, 8399, 43430, 13], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 605, "seek": 219504, "start": 2202.04, "end": 2207.04, "text": " And so here the idea is that you have something", "tokens": [400, 370, 510, 264, 1558, 307, 300, 291, 362, 746], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 606, "seek": 219504, "start": 2207.04, "end": 2212.04, "text": " similar to what we had before, except that now the input", "tokens": [2531, 281, 437, 321, 632, 949, 11, 3993, 300, 586, 264, 4846], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 607, "seek": 219504, "start": 2212.04, "end": 2216.04, "text": " is taken from this monolingual data set, okay?", "tokens": [307, 2726, 490, 341, 1108, 401, 278, 901, 1412, 992, 11, 1392, 30], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 608, "seek": 219504, "start": 2216.04, "end": 2218.04, "text": " And you add noise to it,", "tokens": [400, 291, 909, 5658, 281, 309, 11], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 609, "seek": 219504, "start": 2218.04, "end": 2221.04, "text": " and I'm going to describe the noise in a second.", "tokens": [293, 286, 478, 516, 281, 6786, 264, 5658, 294, 257, 1150, 13], "temperature": 0.0, "avg_logprob": -0.17895417685037132, "compression_ratio": 1.5592417061611374, "no_speech_prob": 0.00027484819293022156}, {"id": 610, "seek": 222104, "start": 2221.04, "end": 2225.04, "text": " And then the job of the encoder decoder", "tokens": [400, 550, 264, 1691, 295, 264, 2058, 19866, 979, 19866], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 611, "seek": 222104, "start": 2225.04, "end": 2230.04, "text": " is simply to denoise the noisy input.", "tokens": [307, 2935, 281, 1441, 78, 908, 264, 24518, 4846, 13], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 612, "seek": 222104, "start": 2230.04, "end": 2233.04, "text": " And the cross-central P loss measured this discrepancy", "tokens": [400, 264, 3278, 12, 2207, 2155, 430, 4470, 12690, 341, 2983, 265, 6040, 1344], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 613, "seek": 222104, "start": 2233.04, "end": 2238.04, "text": " between the prediction and the actual clean input.", "tokens": [1296, 264, 17630, 293, 264, 3539, 2541, 4846, 13], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 614, "seek": 222104, "start": 2238.04, "end": 2243.04, "text": " But now notice that the decoder is not this radicoder", "tokens": [583, 586, 3449, 300, 264, 979, 19866, 307, 406, 341, 2843, 299, 19866], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 615, "seek": 222104, "start": 2243.04, "end": 2247.04, "text": " because the decoder now is a decoder that operates in English.", "tokens": [570, 264, 979, 19866, 586, 307, 257, 979, 19866, 300, 22577, 294, 3669, 13], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 616, "seek": 222104, "start": 2247.04, "end": 2249.04, "text": " But the encoder does not.", "tokens": [583, 264, 2058, 19866, 775, 406, 13], "temperature": 0.0, "avg_logprob": -0.2227195821782594, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.0009076688438653946}, {"id": 617, "seek": 224904, "start": 2249.04, "end": 2255.04, "text": " Now the encoder is the same that you have seen here.", "tokens": [823, 264, 2058, 19866, 307, 264, 912, 300, 291, 362, 1612, 510, 13], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 618, "seek": 224904, "start": 2255.04, "end": 2261.04, "text": " So again, the loss function here is very similar to before,", "tokens": [407, 797, 11, 264, 4470, 2445, 510, 307, 588, 2531, 281, 949, 11], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 619, "seek": 224904, "start": 2261.04, "end": 2266.04, "text": " except that the target is the clean input X.", "tokens": [3993, 300, 264, 3779, 307, 264, 2541, 4846, 1783, 13], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 620, "seek": 224904, "start": 2266.04, "end": 2273.04, "text": " And the input is a notified version of X.", "tokens": [400, 264, 4846, 307, 257, 18013, 3037, 295, 1783, 13], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 621, "seek": 224904, "start": 2273.04, "end": 2275.04, "text": " So in this case,", "tokens": [407, 294, 341, 1389, 11], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 622, "seek": 224904, "start": 2275.04, "end": 2278.04, "text": " we are not predicting something in a poly by something in English.", "tokens": [321, 366, 406, 32884, 746, 294, 257, 6754, 538, 746, 294, 3669, 13], "temperature": 0.0, "avg_logprob": -0.18326807022094727, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0003292276232969016}, {"id": 623, "seek": 227804, "start": 2278.04, "end": 2282.04, "text": " So this is a, if you want, a limitation of this work.", "tokens": [407, 341, 307, 257, 11, 498, 291, 528, 11, 257, 27432, 295, 341, 589, 13], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 624, "seek": 227804, "start": 2282.04, "end": 2288.04, "text": " But this is useful because you are anyway doing some good modeling", "tokens": [583, 341, 307, 4420, 570, 291, 366, 4033, 884, 512, 665, 15983], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 625, "seek": 227804, "start": 2288.04, "end": 2291.04, "text": " of the input sentences.", "tokens": [295, 264, 4846, 16579, 13], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 626, "seek": 227804, "start": 2291.04, "end": 2294.04, "text": " And you're going to train the encoder parameters", "tokens": [400, 291, 434, 516, 281, 3847, 264, 2058, 19866, 9834], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 627, "seek": 227804, "start": 2294.04, "end": 2298.04, "text": " that are going to be shared with your supervised system.", "tokens": [300, 366, 516, 281, 312, 5507, 365, 428, 46533, 1185, 13], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 628, "seek": 227804, "start": 2298.04, "end": 2304.04, "text": " So the encoder is shared between the translation task", "tokens": [407, 264, 2058, 19866, 307, 5507, 1296, 264, 12853, 5633], "temperature": 0.0, "avg_logprob": -0.13276095204539112, "compression_ratio": 1.5916230366492146, "no_speech_prob": 0.0006697953795082867}, {"id": 629, "seek": 230404, "start": 2304.04, "end": 2309.04, "text": " on parallel data, right? And the denosional code in task.", "tokens": [322, 8952, 1412, 11, 558, 30, 400, 264, 1441, 329, 1966, 3089, 294, 5633, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 630, "seek": 230404, "start": 2309.04, "end": 2311.04, "text": " So essentially you have an encoder and two decoders.", "tokens": [407, 4476, 291, 362, 364, 2058, 19866, 293, 732, 979, 378, 433, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 631, "seek": 230404, "start": 2311.04, "end": 2315.04, "text": " One that operates in a poly, one that operates in English.", "tokens": [1485, 300, 22577, 294, 257, 6754, 11, 472, 300, 22577, 294, 3669, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 632, "seek": 230404, "start": 2315.04, "end": 2320.04, "text": " And so in terms of noise,", "tokens": [400, 370, 294, 2115, 295, 5658, 11], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 633, "seek": 230404, "start": 2320.04, "end": 2324.04, "text": " there are essentially two types of noise that we have been using our work.", "tokens": [456, 366, 4476, 732, 3467, 295, 5658, 300, 321, 362, 668, 1228, 527, 589, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 634, "seek": 230404, "start": 2324.04, "end": 2327.04, "text": " Others are possible.", "tokens": [20277, 366, 1944, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 635, "seek": 230404, "start": 2327.04, "end": 2331.04, "text": " In the simplest case, you can drop words or swap words.", "tokens": [682, 264, 22811, 1389, 11, 291, 393, 3270, 2283, 420, 18135, 2283, 13], "temperature": 0.0, "avg_logprob": -0.21786606311798096, "compression_ratio": 1.6291079812206573, "no_speech_prob": 0.00031055332510732114}, {"id": 636, "seek": 233104, "start": 2331.04, "end": 2335.04, "text": " So assume that the input sentences is the cassette on the mat.", "tokens": [407, 6552, 300, 264, 4846, 16579, 307, 264, 40514, 322, 264, 3803, 13], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 637, "seek": 233104, "start": 2335.04, "end": 2341.04, "text": " Then if you swap words, you may provide the input on set mat.", "tokens": [1396, 498, 291, 18135, 2283, 11, 291, 815, 2893, 264, 4846, 322, 992, 3803, 13], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 638, "seek": 233104, "start": 2341.04, "end": 2346.04, "text": " And so here the encoder, the code needs to understand a little bit of the syntax,", "tokens": [400, 370, 510, 264, 2058, 19866, 11, 264, 3089, 2203, 281, 1223, 257, 707, 857, 295, 264, 28431, 11], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 639, "seek": 233104, "start": 2346.04, "end": 2350.04, "text": " the grammatical rules in order to reorder.", "tokens": [264, 17570, 267, 804, 4474, 294, 1668, 281, 319, 4687, 13], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 640, "seek": 233104, "start": 2350.04, "end": 2354.04, "text": " If you drop, let's say you drop the last word, the cassette on the,", "tokens": [759, 291, 3270, 11, 718, 311, 584, 291, 3270, 264, 1036, 1349, 11, 264, 40514, 322, 264, 11], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 641, "seek": 233104, "start": 2354.04, "end": 2357.04, "text": " then the model needs to understand a little bit of the semantics", "tokens": [550, 264, 2316, 2203, 281, 1223, 257, 707, 857, 295, 264, 4361, 45298], "temperature": 0.0, "avg_logprob": -0.18419669438334343, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.0011367426486685872}, {"id": 642, "seek": 235704, "start": 2357.04, "end": 2362.04, "text": " because it needs to assign higher probability to mat now, right?", "tokens": [570, 309, 2203, 281, 6269, 2946, 8482, 281, 3803, 586, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 643, "seek": 235704, "start": 2362.04, "end": 2367.04, "text": " And so you can see that there is a little bit of,", "tokens": [400, 370, 291, 393, 536, 300, 456, 307, 257, 707, 857, 295, 11], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 644, "seek": 235704, "start": 2367.04, "end": 2369.04, "text": " so there are two hyper parameters here.", "tokens": [370, 456, 366, 732, 9848, 9834, 510, 13], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 645, "seek": 235704, "start": 2369.04, "end": 2374.04, "text": " So one, actually, there are several ways to use denosional encoding.", "tokens": [407, 472, 11, 767, 11, 456, 366, 2940, 2098, 281, 764, 1441, 329, 1966, 43430, 13], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 646, "seek": 235704, "start": 2374.04, "end": 2378.04, "text": " So you can use denosional encoding as a way to pre-training encoder.", "tokens": [407, 291, 393, 764, 1441, 329, 1966, 43430, 382, 257, 636, 281, 659, 12, 17227, 1760, 2058, 19866, 13], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 647, "seek": 235704, "start": 2378.04, "end": 2384.04, "text": " Or you can use it as auxiliary loss when you do supervised learning.", "tokens": [1610, 291, 393, 764, 309, 382, 43741, 4470, 562, 291, 360, 46533, 2539, 13], "temperature": 0.0, "avg_logprob": -0.1307533893388571, "compression_ratio": 1.6790697674418604, "no_speech_prob": 0.0006971729453653097}, {"id": 648, "seek": 238404, "start": 2384.04, "end": 2389.04, "text": " So you can have this term plus lambda this term.", "tokens": [407, 291, 393, 362, 341, 1433, 1804, 13607, 341, 1433, 13], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 649, "seek": 238404, "start": 2389.04, "end": 2392.04, "text": " Okay, so both ways are fine.", "tokens": [1033, 11, 370, 1293, 2098, 366, 2489, 13], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 650, "seek": 238404, "start": 2392.04, "end": 2398.04, "text": " And so there is a very critical hyper parameter here,", "tokens": [400, 370, 456, 307, 257, 588, 4924, 9848, 13075, 510, 11], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 651, "seek": 238404, "start": 2398.04, "end": 2400.04, "text": " which is the level noise.", "tokens": [597, 307, 264, 1496, 5658, 13], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 652, "seek": 238404, "start": 2400.04, "end": 2403.04, "text": " If you don't have any noise or if the noise level is too low,", "tokens": [759, 291, 500, 380, 362, 604, 5658, 420, 498, 264, 5658, 1496, 307, 886, 2295, 11], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 653, "seek": 238404, "start": 2403.04, "end": 2407.04, "text": " then this task is trivial because of the attention,", "tokens": [550, 341, 5633, 307, 26703, 570, 295, 264, 3202, 11], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 654, "seek": 238404, "start": 2407.04, "end": 2409.04, "text": " you can simply copy the input.", "tokens": [291, 393, 2935, 5055, 264, 4846, 13], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 655, "seek": 238404, "start": 2409.04, "end": 2413.04, "text": " And so the encoder and the code don't need to learn anything.", "tokens": [400, 370, 264, 2058, 19866, 293, 264, 3089, 500, 380, 643, 281, 1466, 1340, 13], "temperature": 0.0, "avg_logprob": -0.12511729259116977, "compression_ratio": 1.6774193548387097, "no_speech_prob": 8.481289842166007e-05}, {"id": 656, "seek": 241304, "start": 2413.04, "end": 2418.04, "text": " If the noise level is too high, then you destroy the input here.", "tokens": [759, 264, 5658, 1496, 307, 886, 1090, 11, 550, 291, 5293, 264, 4846, 510, 13], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 657, "seek": 241304, "start": 2418.04, "end": 2420.04, "text": " So the encoder is not useful.", "tokens": [407, 264, 2058, 19866, 307, 406, 4420, 13], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 658, "seek": 241304, "start": 2420.04, "end": 2423.04, "text": " You just do language modeling using the decoder.", "tokens": [509, 445, 360, 2856, 15983, 1228, 264, 979, 19866, 13], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 659, "seek": 241304, "start": 2423.04, "end": 2430.04, "text": " But remember that this decoder is then not used for translation", "tokens": [583, 1604, 300, 341, 979, 19866, 307, 550, 406, 1143, 337, 12853], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 660, "seek": 241304, "start": 2430.04, "end": 2435.04, "text": " because what you use in the machine translation system is the encoder box, right?", "tokens": [570, 437, 291, 764, 294, 264, 3479, 12853, 1185, 307, 264, 2058, 19866, 2424, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 661, "seek": 241304, "start": 2435.04, "end": 2438.04, "text": " The encoder module.", "tokens": [440, 2058, 19866, 10088, 13], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 662, "seek": 241304, "start": 2438.04, "end": 2442.04, "text": " Okay, so there are other ways to use source.", "tokens": [1033, 11, 370, 456, 366, 661, 2098, 281, 764, 4009, 13], "temperature": 0.0, "avg_logprob": -0.16049141579485954, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.00043141335481777787}, {"id": 663, "seek": 244204, "start": 2442.04, "end": 2445.04, "text": " Side monolingual data.", "tokens": [19026, 1108, 401, 278, 901, 1412, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 664, "seek": 244204, "start": 2445.04, "end": 2447.04, "text": " In addition to the noisy of encoding,", "tokens": [682, 4500, 281, 264, 24518, 295, 43430, 11], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 665, "seek": 244204, "start": 2447.04, "end": 2449.04, "text": " you could also do a set training,", "tokens": [291, 727, 611, 360, 257, 992, 3097, 11], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 666, "seek": 244204, "start": 2449.04, "end": 2455.04, "text": " which is a method that comes from the 90s, if not earlier.", "tokens": [597, 307, 257, 3170, 300, 1487, 490, 264, 4289, 82, 11, 498, 406, 3071, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 667, "seek": 244204, "start": 2455.04, "end": 2457.04, "text": " And the idea is very simple.", "tokens": [400, 264, 1558, 307, 588, 2199, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 668, "seek": 244204, "start": 2457.04, "end": 2462.04, "text": " So again, you take a sentence from your source side monolingual data set.", "tokens": [407, 797, 11, 291, 747, 257, 8174, 490, 428, 4009, 1252, 1108, 401, 278, 901, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 669, "seek": 244204, "start": 2462.04, "end": 2466.04, "text": " And you add noise to it and then you have an encoder decoder that.", "tokens": [400, 291, 909, 5658, 281, 309, 293, 550, 291, 362, 364, 2058, 19866, 979, 19866, 300, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 670, "seek": 244204, "start": 2466.04, "end": 2470.04, "text": " Tries to this time translate from this noisy input.", "tokens": [314, 2244, 281, 341, 565, 13799, 490, 341, 24518, 4846, 13], "temperature": 0.0, "avg_logprob": -0.218864003452686, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.0008029679302126169}, {"id": 671, "seek": 247004, "start": 2470.04, "end": 2473.04, "text": " Okay, and now what's the reference?", "tokens": [1033, 11, 293, 586, 437, 311, 264, 6408, 30], "temperature": 0.0, "avg_logprob": -0.25990636008126394, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.00019442106713540852}, {"id": 672, "seek": 247004, "start": 2473.04, "end": 2480.04, "text": " The reference is given by a stale version of your machine translation system.", "tokens": [440, 6408, 307, 2212, 538, 257, 342, 1220, 3037, 295, 428, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.25990636008126394, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.00019442106713540852}, {"id": 673, "seek": 247004, "start": 2480.04, "end": 2484.04, "text": " Okay, where the reference is produced by let's say beam.", "tokens": [1033, 11, 689, 264, 6408, 307, 7126, 538, 718, 311, 584, 14269, 13], "temperature": 0.0, "avg_logprob": -0.25990636008126394, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.00019442106713540852}, {"id": 674, "seek": 247004, "start": 2484.04, "end": 2492.04, "text": " And so the central p loss is then going to measure the discrepancy between your prediction and what.", "tokens": [400, 370, 264, 5777, 280, 4470, 307, 550, 516, 281, 3481, 264, 2983, 265, 6040, 1344, 1296, 428, 17630, 293, 437, 13], "temperature": 0.0, "avg_logprob": -0.25990636008126394, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.00019442106713540852}, {"id": 675, "seek": 247004, "start": 2492.04, "end": 2496.04, "text": " The prediction from from a stale version of your system gave.", "tokens": [440, 17630, 490, 490, 257, 342, 1220, 3037, 295, 428, 1185, 2729, 13], "temperature": 0.0, "avg_logprob": -0.25990636008126394, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.00019442106713540852}, {"id": 676, "seek": 249604, "start": 2496.04, "end": 2503.04, "text": " The reason why this works is that when you do beam, you actually typically.", "tokens": [440, 1778, 983, 341, 1985, 307, 300, 562, 291, 360, 14269, 11, 291, 767, 5850, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 677, "seek": 249604, "start": 2503.04, "end": 2506.04, "text": " Produce better quality.", "tokens": [11793, 384, 1101, 3125, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 678, "seek": 249604, "start": 2506.04, "end": 2508.04, "text": " Uh, outputs.", "tokens": [4019, 11, 23930, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 679, "seek": 249604, "start": 2508.04, "end": 2513.04, "text": " And so when you train now this encoder decoder by cross entropy loss,", "tokens": [400, 370, 562, 291, 3847, 586, 341, 2058, 19866, 979, 19866, 538, 3278, 30867, 4470, 11], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 680, "seek": 249604, "start": 2513.04, "end": 2516.04, "text": " you're going to learn the decoding process.", "tokens": [291, 434, 516, 281, 1466, 264, 979, 8616, 1399, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 681, "seek": 249604, "start": 2516.04, "end": 2519.04, "text": " Okay, and so this is something.", "tokens": [1033, 11, 293, 370, 341, 307, 746, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 682, "seek": 249604, "start": 2519.04, "end": 2521.04, "text": " Good for you.", "tokens": [2205, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 683, "seek": 249604, "start": 2521.04, "end": 2525.04, "text": " In addition, when you train you inject noise and the noise is regularizing.", "tokens": [682, 4500, 11, 562, 291, 3847, 291, 10711, 5658, 293, 264, 5658, 307, 3890, 3319, 13], "temperature": 0.0, "avg_logprob": -0.2185078257137967, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.00030824472196400166}, {"id": 684, "seek": 252504, "start": 2525.04, "end": 2527.04, "text": " So you're going to be able to see the difference.", "tokens": [407, 291, 434, 516, 281, 312, 1075, 281, 536, 264, 2649, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 685, "seek": 252504, "start": 2527.04, "end": 2529.04, "text": " So you're going to see the difference.", "tokens": [407, 291, 434, 516, 281, 536, 264, 2649, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 686, "seek": 252504, "start": 2529.04, "end": 2531.04, "text": " So you're going to see the difference.", "tokens": [407, 291, 434, 516, 281, 536, 264, 2649, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 687, "seek": 252504, "start": 2531.04, "end": 2535.04, "text": " And so if you're predicting correctly one sentence now also nearby sentences,", "tokens": [400, 370, 498, 291, 434, 32884, 8944, 472, 8174, 586, 611, 11184, 16579, 11], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 688, "seek": 252504, "start": 2535.04, "end": 2541.04, "text": " but nearby I mean sentences that are sooner phrases or have a good overlap.", "tokens": [457, 11184, 286, 914, 16579, 300, 366, 15324, 20312, 420, 362, 257, 665, 19959, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 689, "seek": 252504, "start": 2541.04, "end": 2546.04, "text": " With the current sentence are going to be more likely predicted correctly.", "tokens": [2022, 264, 2190, 8174, 366, 516, 281, 312, 544, 3700, 19147, 8944, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 690, "seek": 252504, "start": 2546.04, "end": 2550.04, "text": " And so we have this paper where we analyze a little bit of this aspects.", "tokens": [400, 370, 321, 362, 341, 3035, 689, 321, 12477, 257, 707, 857, 295, 341, 7270, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 691, "seek": 252504, "start": 2550.04, "end": 2553.04, "text": " And so the algorithm is very simple.", "tokens": [400, 370, 264, 9284, 307, 588, 2199, 13], "temperature": 0.2, "avg_logprob": -0.5656479952628153, "compression_ratio": 2.0086206896551726, "no_speech_prob": 0.0002788572455756366}, {"id": 692, "seek": 255304, "start": 2553.04, "end": 2557.04, "text": " So you can train your machine translation system on the parallel data.", "tokens": [407, 291, 393, 3847, 428, 3479, 12853, 1185, 322, 264, 8952, 1412, 13], "temperature": 0.0, "avg_logprob": -0.19424140744092988, "compression_ratio": 1.9772727272727273, "no_speech_prob": 0.0006314126076176763}, {"id": 693, "seek": 255304, "start": 2557.04, "end": 2559.04, "text": " And then you repeat the following process.", "tokens": [400, 550, 291, 7149, 264, 3480, 1399, 13], "temperature": 0.0, "avg_logprob": -0.19424140744092988, "compression_ratio": 1.9772727272727273, "no_speech_prob": 0.0006314126076176763}, {"id": 694, "seek": 255304, "start": 2559.04, "end": 2566.04, "text": " So first you decode your monolingual data set using your current machine translation system.", "tokens": [407, 700, 291, 979, 1429, 428, 1108, 401, 278, 901, 1412, 992, 1228, 428, 2190, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.19424140744092988, "compression_ratio": 1.9772727272727273, "no_speech_prob": 0.0006314126076176763}, {"id": 695, "seek": 255304, "start": 2566.04, "end": 2573.04, "text": " And you make a new parallel data set of sentences from your monolingual data set with,", "tokens": [400, 291, 652, 257, 777, 8952, 1412, 992, 295, 16579, 490, 428, 1108, 401, 278, 901, 1412, 992, 365, 11], "temperature": 0.0, "avg_logprob": -0.19424140744092988, "compression_ratio": 1.9772727272727273, "no_speech_prob": 0.0006314126076176763}, {"id": 696, "seek": 255304, "start": 2573.04, "end": 2578.04, "text": " sorry, with the translations from your current system.", "tokens": [2597, 11, 365, 264, 37578, 490, 428, 2190, 1185, 13], "temperature": 0.0, "avg_logprob": -0.19424140744092988, "compression_ratio": 1.9772727272727273, "no_speech_prob": 0.0006314126076176763}, {"id": 697, "seek": 257804, "start": 2578.04, "end": 2588.04, "text": " And then you retrain the model this pure white pure white given X on the union of your original parallel data plus this auxiliary data set.", "tokens": [400, 550, 291, 1533, 7146, 264, 2316, 341, 6075, 2418, 6075, 2418, 2212, 1783, 322, 264, 11671, 295, 428, 3380, 8952, 1412, 1804, 341, 43741, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.2940384851743097, "compression_ratio": 1.75, "no_speech_prob": 0.00044193374924361706}, {"id": 698, "seek": 257804, "start": 2588.04, "end": 2592.04, "text": " And so here you have two hyper parameters.", "tokens": [400, 370, 510, 291, 362, 732, 9848, 9834, 13], "temperature": 0.0, "avg_logprob": -0.2940384851743097, "compression_ratio": 1.75, "no_speech_prob": 0.00044193374924361706}, {"id": 699, "seek": 257804, "start": 2592.04, "end": 2599.04, "text": " One is the noise level and the other is the hyper parameters that weight this auxiliary data set.", "tokens": [1485, 307, 264, 5658, 1496, 293, 264, 661, 307, 264, 9848, 9834, 300, 3364, 341, 43741, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.2940384851743097, "compression_ratio": 1.75, "no_speech_prob": 0.00044193374924361706}, {"id": 700, "seek": 257804, "start": 2599.04, "end": 2603.04, "text": " So this is a training loss.", "tokens": [407, 341, 307, 257, 3097, 4470, 13], "temperature": 0.0, "avg_logprob": -0.2940384851743097, "compression_ratio": 1.75, "no_speech_prob": 0.00044193374924361706}, {"id": 701, "seek": 260304, "start": 2603.04, "end": 2610.04, "text": " Now let's so that's that concludes how we can use source Simon in will data.", "tokens": [823, 718, 311, 370, 300, 311, 300, 24643, 577, 321, 393, 764, 4009, 13193, 294, 486, 1412, 13], "temperature": 0.0, "avg_logprob": -0.20521620948715966, "compression_ratio": 1.8427947598253276, "no_speech_prob": 0.0004999354132451117}, {"id": 702, "seek": 260304, "start": 2610.04, "end": 2615.04, "text": " Let me say a word about how we can use target Simon on in will data.", "tokens": [961, 385, 584, 257, 1349, 466, 577, 321, 393, 764, 3779, 13193, 322, 294, 486, 1412, 13], "temperature": 0.0, "avg_logprob": -0.20521620948715966, "compression_ratio": 1.8427947598253276, "no_speech_prob": 0.0004999354132451117}, {"id": 703, "seek": 260304, "start": 2615.04, "end": 2623.04, "text": " So you could use the target Simon in will data to train a language model and then train the machine translation system in the residual space of this language model.", "tokens": [407, 291, 727, 764, 264, 3779, 13193, 294, 486, 1412, 281, 3847, 257, 2856, 2316, 293, 550, 3847, 264, 3479, 12853, 1185, 294, 264, 27980, 1901, 295, 341, 2856, 2316, 13], "temperature": 0.0, "avg_logprob": -0.20521620948715966, "compression_ratio": 1.8427947598253276, "no_speech_prob": 0.0004999354132451117}, {"id": 704, "seek": 260304, "start": 2623.04, "end": 2628.04, "text": " By turns out that there is a much more effective way to leverage this data.", "tokens": [3146, 4523, 484, 300, 456, 307, 257, 709, 544, 4942, 636, 281, 13982, 341, 1412, 13], "temperature": 0.0, "avg_logprob": -0.20521620948715966, "compression_ratio": 1.8427947598253276, "no_speech_prob": 0.0004999354132451117}, {"id": 705, "seek": 260304, "start": 2628.04, "end": 2630.04, "text": " And that's called back translation.", "tokens": [400, 300, 311, 1219, 646, 12853, 13], "temperature": 0.0, "avg_logprob": -0.20521620948715966, "compression_ratio": 1.8427947598253276, "no_speech_prob": 0.0004999354132451117}, {"id": 706, "seek": 263004, "start": 2630.04, "end": 2640.04, "text": " At the high level it works as follows so you take a sentence from your target Simon in will data set white here.", "tokens": [1711, 264, 1090, 1496, 309, 1985, 382, 10002, 370, 291, 747, 257, 8174, 490, 428, 3779, 13193, 294, 486, 1412, 992, 2418, 510, 13], "temperature": 0.0, "avg_logprob": -0.2886843126873637, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.0014277504524216056}, {"id": 707, "seek": 263004, "start": 2640.04, "end": 2647.04, "text": " And on the part of the data set you train also back or machine translation system that goes from the party to English.", "tokens": [400, 322, 264, 644, 295, 264, 1412, 992, 291, 3847, 611, 646, 420, 3479, 12853, 1185, 300, 1709, 490, 264, 3595, 281, 3669, 13], "temperature": 0.0, "avg_logprob": -0.2886843126873637, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.0014277504524216056}, {"id": 708, "seek": 263004, "start": 2647.04, "end": 2656.04, "text": " Okay, so that's so now you have a red and colder at the x Nepali and the blue decoder that works in the English space.", "tokens": [1033, 11, 370, 300, 311, 370, 586, 291, 362, 257, 2182, 293, 31020, 412, 264, 2031, 24875, 5103, 293, 264, 3344, 979, 19866, 300, 1985, 294, 264, 3669, 1901, 13], "temperature": 0.0, "avg_logprob": -0.2886843126873637, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.0014277504524216056}, {"id": 709, "seek": 265604, "start": 2656.04, "end": 2660.04, "text": " So you map the sentencing into English.", "tokens": [407, 291, 4471, 264, 2279, 13644, 666, 3669, 13], "temperature": 0.0, "avg_logprob": -0.17979424340384348, "compression_ratio": 1.675, "no_speech_prob": 0.0012942327884957194}, {"id": 710, "seek": 265604, "start": 2660.04, "end": 2666.04, "text": " It's the policy sentencing to English and now this may not be a correct translation path.", "tokens": [467, 311, 264, 3897, 2279, 13644, 281, 3669, 293, 586, 341, 815, 406, 312, 257, 3006, 12853, 3100, 13], "temperature": 0.0, "avg_logprob": -0.17979424340384348, "compression_ratio": 1.675, "no_speech_prob": 0.0012942327884957194}, {"id": 711, "seek": 265604, "start": 2666.04, "end": 2673.04, "text": " It's a noisy input that you feed to your encoder decoder that you want to train.", "tokens": [467, 311, 257, 24518, 4846, 300, 291, 3154, 281, 428, 2058, 19866, 979, 19866, 300, 291, 528, 281, 3847, 13], "temperature": 0.0, "avg_logprob": -0.17979424340384348, "compression_ratio": 1.675, "no_speech_prob": 0.0012942327884957194}, {"id": 712, "seek": 265604, "start": 2673.04, "end": 2683.04, "text": " And so now the input is noisy but the target here is clean because it comes from the original target Simon in will data set.", "tokens": [400, 370, 586, 264, 4846, 307, 24518, 457, 264, 3779, 510, 307, 2541, 570, 309, 1487, 490, 264, 3380, 3779, 13193, 294, 486, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.17979424340384348, "compression_ratio": 1.675, "no_speech_prob": 0.0012942327884957194}, {"id": 713, "seek": 268304, "start": 2683.04, "end": 2688.04, "text": " So this is a very powerful algorithm.", "tokens": [407, 341, 307, 257, 588, 4005, 9284, 13], "temperature": 0.0, "avg_logprob": -0.32961908027307313, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0002657889563124627}, {"id": 714, "seek": 268304, "start": 2688.04, "end": 2692.04, "text": " Because.", "tokens": [1436, 13], "temperature": 0.0, "avg_logprob": -0.32961908027307313, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0002657889563124627}, {"id": 715, "seek": 268304, "start": 2692.04, "end": 2712.04, "text": " Unlike saltraining here the target circling but the input is a little noisy and that's usually much better than having clean inputs but noisy targets right because the targets affect essentially all the other signals that you propagate through the NMT systems.", "tokens": [17657, 1845, 17227, 1760, 510, 264, 3779, 3510, 1688, 457, 264, 4846, 307, 257, 707, 24518, 293, 300, 311, 2673, 709, 1101, 813, 1419, 2541, 15743, 457, 24518, 12911, 558, 570, 264, 12911, 3345, 4476, 439, 264, 661, 12354, 300, 291, 48256, 807, 264, 426, 44, 51, 3652, 13], "temperature": 0.0, "avg_logprob": -0.32961908027307313, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0002657889563124627}, {"id": 716, "seek": 271204, "start": 2712.04, "end": 2726.04, "text": " And you can see that translation is a way to do that augmentation because you produce noise a version of inputs for a given target a little bit like envision where they do.", "tokens": [400, 291, 393, 536, 300, 12853, 307, 257, 636, 281, 360, 300, 14501, 19631, 570, 291, 5258, 5658, 257, 3037, 295, 15743, 337, 257, 2212, 3779, 257, 707, 857, 411, 24739, 689, 436, 360, 13], "temperature": 0.0, "avg_logprob": -0.19117112807285638, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.00048423840780742466}, {"id": 717, "seek": 271204, "start": 2726.04, "end": 2738.04, "text": " I guess this is not the right audience to do this analogy but it should work on vision you will do scaling rotation different cropping and that's a little bit similar to what we're doing here.", "tokens": [286, 2041, 341, 307, 406, 264, 558, 4034, 281, 360, 341, 21663, 457, 309, 820, 589, 322, 5201, 291, 486, 360, 21589, 12447, 819, 4848, 3759, 293, 300, 311, 257, 707, 857, 2531, 281, 437, 321, 434, 884, 510, 13], "temperature": 0.0, "avg_logprob": -0.19117112807285638, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.00048423840780742466}, {"id": 718, "seek": 273804, "start": 2738.04, "end": 2754.04, "text": " The algorithm again is you train a backward and forward machine translation system on the parallel data and then you use your backward model to decode the target side modeling with the set to produce an auxiliary parallel data set.", "tokens": [440, 9284, 797, 307, 291, 3847, 257, 23897, 293, 2128, 3479, 12853, 1185, 322, 264, 8952, 1412, 293, 550, 291, 764, 428, 23897, 2316, 281, 979, 1429, 264, 3779, 1252, 15983, 365, 264, 992, 281, 5258, 364, 43741, 8952, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.16760668883452545, "compression_ratio": 1.8795811518324608, "no_speech_prob": 0.0014985004672780633}, {"id": 719, "seek": 273804, "start": 2754.04, "end": 2766.04, "text": " And then you concatenate the two data sets the original parallel data set and the auxiliary one to train the new forward model.", "tokens": [400, 550, 291, 1588, 7186, 473, 264, 732, 1412, 6352, 264, 3380, 8952, 1412, 992, 293, 264, 43741, 472, 281, 3847, 264, 777, 2128, 2316, 13], "temperature": 0.0, "avg_logprob": -0.16760668883452545, "compression_ratio": 1.8795811518324608, "no_speech_prob": 0.0014985004672780633}, {"id": 720, "seek": 276604, "start": 2766.04, "end": 2768.04, "text": " So you can combine.", "tokens": [407, 291, 393, 10432, 13], "temperature": 0.0, "avg_logprob": -0.2202073714312385, "compression_ratio": 2.036842105263158, "no_speech_prob": 0.0004187210579402745}, {"id": 721, "seek": 276604, "start": 2768.04, "end": 2775.04, "text": " Set training and bad translation so if you have both source modeling with the set and target modeling with the set.", "tokens": [8928, 3097, 293, 1578, 12853, 370, 498, 291, 362, 1293, 4009, 15983, 365, 264, 992, 293, 3779, 15983, 365, 264, 992, 13], "temperature": 0.0, "avg_logprob": -0.2202073714312385, "compression_ratio": 2.036842105263158, "no_speech_prob": 0.0004187210579402745}, {"id": 722, "seek": 276604, "start": 2775.04, "end": 2795.04, "text": " You can do the following so you can use the parallel data to train the forward and the backward machine translation system and then at the step to you can use the forward model to decode to translate the source at modeling with the set into this data.", "tokens": [509, 393, 360, 264, 3480, 370, 291, 393, 764, 264, 8952, 1412, 281, 3847, 264, 2128, 293, 264, 23897, 3479, 12853, 1185, 293, 550, 412, 264, 1823, 281, 291, 393, 764, 264, 2128, 2316, 281, 979, 1429, 281, 13799, 264, 4009, 412, 15983, 365, 264, 992, 666, 341, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2202073714312385, "compression_ratio": 2.036842105263158, "no_speech_prob": 0.0004187210579402745}, {"id": 723, "seek": 279504, "start": 2795.04, "end": 2806.04, "text": " And then you use the backward machine translation system to translate the target same on the ingot data set into these translations.", "tokens": [400, 550, 291, 764, 264, 23897, 3479, 12853, 1185, 281, 13799, 264, 3779, 912, 322, 264, 3957, 310, 1412, 992, 666, 613, 37578, 13], "temperature": 0.0, "avg_logprob": -0.32829547273939935, "compression_ratio": 1.9515151515151514, "no_speech_prob": 0.00017319235485047102}, {"id": 724, "seek": 279504, "start": 2806.04, "end": 2814.04, "text": " And then you treat this parallel sentences as real data and you concatenate them to the parallel data set.", "tokens": [400, 550, 291, 2387, 341, 8952, 16579, 382, 957, 1412, 293, 291, 1588, 7186, 473, 552, 281, 264, 8952, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.32829547273939935, "compression_ratio": 1.9515151515151514, "no_speech_prob": 0.00017319235485047102}, {"id": 725, "seek": 279504, "start": 2814.04, "end": 2819.04, "text": " And now you retrain both the forward and the backward machine translation systems.", "tokens": [400, 586, 291, 1533, 7146, 1293, 264, 2128, 293, 264, 23897, 3479, 12853, 3652, 13], "temperature": 0.0, "avg_logprob": -0.32829547273939935, "compression_ratio": 1.9515151515151514, "no_speech_prob": 0.00017319235485047102}, {"id": 726, "seek": 281904, "start": 2819.04, "end": 2835.04, "text": " And as long as this to improve then you can go and do another iteration whereby you again you really code you translate the source and the target side modeling with the sets and then you go and you retrain them.", "tokens": [400, 382, 938, 382, 341, 281, 3470, 550, 291, 393, 352, 293, 360, 1071, 24784, 36998, 291, 797, 291, 534, 3089, 291, 13799, 264, 4009, 293, 264, 3779, 1252, 15983, 365, 264, 6352, 293, 550, 291, 352, 293, 291, 1533, 7146, 552, 13], "temperature": 0.0, "avg_logprob": -0.2800806628333198, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.0006394982920028269}, {"id": 727, "seek": 281904, "start": 2835.04, "end": 2847.04, "text": " And this is as far as no, the most effective way to leverage modeling with data in law resource languages nowadays.", "tokens": [400, 341, 307, 382, 1400, 382, 572, 11, 264, 881, 4942, 636, 281, 13982, 15983, 365, 1412, 294, 2101, 7684, 8650, 13434, 13], "temperature": 0.0, "avg_logprob": -0.2800806628333198, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.0006394982920028269}, {"id": 728, "seek": 284704, "start": 2847.04, "end": 2860.04, "text": " And let me talk a little bit about how we can do multilingual training. So in this case, we have parallel data sets on different language pairs.", "tokens": [400, 718, 385, 751, 257, 707, 857, 466, 577, 321, 393, 360, 2120, 38219, 3097, 13, 407, 294, 341, 1389, 11, 321, 362, 8952, 1412, 6352, 322, 819, 2856, 15494, 13], "temperature": 0.0, "avg_logprob": -0.18323938170475745, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.0007342442404478788}, {"id": 729, "seek": 284704, "start": 2860.04, "end": 2870.04, "text": " And so you have a parallel data set for English Nepali one for English Hindi one for Hindi English or Nepali Hindi or any subset of this.", "tokens": [400, 370, 291, 362, 257, 8952, 1412, 992, 337, 3669, 24875, 5103, 472, 337, 3669, 36225, 472, 337, 36225, 3669, 420, 24875, 5103, 36225, 420, 604, 25993, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.18323938170475745, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.0007342442404478788}, {"id": 730, "seek": 287004, "start": 2870.04, "end": 2878.04, "text": " This is super simple. So the way that it works is that you have a single encoder and the single decoder.", "tokens": [639, 307, 1687, 2199, 13, 407, 264, 636, 300, 309, 1985, 307, 300, 291, 362, 257, 2167, 2058, 19866, 293, 264, 2167, 979, 19866, 13], "temperature": 0.0, "avg_logprob": -0.08845277209030955, "compression_ratio": 1.6397849462365592, "no_speech_prob": 0.0005977167165838182}, {"id": 731, "seek": 287004, "start": 2878.04, "end": 2882.04, "text": " And you train by supervised learning.", "tokens": [400, 291, 3847, 538, 46533, 2539, 13], "temperature": 0.0, "avg_logprob": -0.08845277209030955, "compression_ratio": 1.6397849462365592, "no_speech_prob": 0.0005977167165838182}, {"id": 732, "seek": 287004, "start": 2882.04, "end": 2895.04, "text": " The only change that needs to be made is that at the input of the encoder you concatenate also a token that specifies the language in which you want to translate.", "tokens": [440, 787, 1319, 300, 2203, 281, 312, 1027, 307, 300, 412, 264, 4846, 295, 264, 2058, 19866, 291, 1588, 7186, 473, 611, 257, 14862, 300, 1608, 11221, 264, 2856, 294, 597, 291, 528, 281, 13799, 13], "temperature": 0.0, "avg_logprob": -0.08845277209030955, "compression_ratio": 1.6397849462365592, "no_speech_prob": 0.0005977167165838182}, {"id": 733, "seek": 289504, "start": 2895.04, "end": 2908.04, "text": " And so the encoder will learn to process multiple languages. The decoder will learn to do to produce multiple languages as well.", "tokens": [400, 370, 264, 2058, 19866, 486, 1466, 281, 1399, 3866, 8650, 13, 440, 979, 19866, 486, 1466, 281, 360, 281, 5258, 3866, 8650, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.16543901727554647, "compression_ratio": 1.59375, "no_speech_prob": 0.000423583755036816}, {"id": 734, "seek": 289504, "start": 2908.04, "end": 2914.04, "text": " And we pick the language based on the token specified by Indian code input.", "tokens": [400, 321, 1888, 264, 2856, 2361, 322, 264, 14862, 22206, 538, 6427, 3089, 4846, 13], "temperature": 0.0, "avg_logprob": -0.16543901727554647, "compression_ratio": 1.59375, "no_speech_prob": 0.000423583755036816}, {"id": 735, "seek": 291404, "start": 2914.04, "end": 2933.04, "text": " And so training is just minimizing the cross entropy loss for all the parallel data sets that you have where you simply add an extra token in the source sentence that specifies the target language that you want to translate.", "tokens": [400, 370, 3097, 307, 445, 46608, 264, 3278, 30867, 4470, 337, 439, 264, 8952, 1412, 6352, 300, 291, 362, 689, 291, 2935, 909, 364, 2857, 14862, 294, 264, 4009, 8174, 300, 1608, 11221, 264, 3779, 2856, 300, 291, 528, 281, 13799, 13], "temperature": 0.0, "avg_logprob": -0.11102520901223888, "compression_ratio": 1.5033557046979866, "no_speech_prob": 0.00020183116430416703}, {"id": 736, "seek": 293304, "start": 2933.04, "end": 2954.04, "text": " And the only thing that I wanted to add on this is that oftentimes it types if you preprocess the data by I'm not sure if you learn about by parent coding sentence pieces essentially waste to segment words into syllables or frequent.", "tokens": [400, 264, 787, 551, 300, 286, 1415, 281, 909, 322, 341, 307, 300, 18349, 309, 3467, 498, 291, 2666, 340, 780, 264, 1412, 538, 286, 478, 406, 988, 498, 291, 1466, 466, 538, 2596, 17720, 8174, 3755, 4476, 5964, 281, 9469, 2283, 666, 45364, 420, 18004, 13], "temperature": 0.0, "avg_logprob": -0.21352829652674057, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.00024883702280931175}, {"id": 737, "seek": 295404, "start": 2954.04, "end": 2966.04, "text": " And so if you concatenate this data in order to learn these ways to segment the data, then it's also possible that for many languages, there is a good fraction addiction that is shared.", "tokens": [400, 370, 498, 291, 1588, 7186, 473, 341, 1412, 294, 1668, 281, 1466, 613, 2098, 281, 9469, 264, 1412, 11, 550, 309, 311, 611, 1944, 300, 337, 867, 8650, 11, 456, 307, 257, 665, 14135, 16835, 300, 307, 5507, 13], "temperature": 0.0, "avg_logprob": -0.14735249912037568, "compression_ratio": 1.6298342541436464, "no_speech_prob": 0.00027216965099796653}, {"id": 738, "seek": 295404, "start": 2966.04, "end": 2976.04, "text": " And so this also helps making sure that you can do a good job translating multiple languages at once at once.", "tokens": [400, 370, 341, 611, 3665, 1455, 988, 300, 291, 393, 360, 257, 665, 1691, 35030, 3866, 8650, 412, 1564, 412, 1564, 13], "temperature": 0.0, "avg_logprob": -0.14735249912037568, "compression_ratio": 1.6298342541436464, "no_speech_prob": 0.00027216965099796653}, {"id": 739, "seek": 297604, "start": 2976.04, "end": 2989.04, "text": " And so my conclusion so far is that even without domain effect, there are a lot of training paradigms depending on the available data that you have.", "tokens": [400, 370, 452, 10063, 370, 1400, 307, 300, 754, 1553, 9274, 1802, 11, 456, 366, 257, 688, 295, 3097, 13480, 328, 2592, 5413, 322, 264, 2435, 1412, 300, 291, 362, 13], "temperature": 0.0, "avg_logprob": -0.11040380341666085, "compression_ratio": 1.2869565217391303, "no_speech_prob": 9.871432848740369e-05}, {"id": 740, "seek": 298904, "start": 2989.04, "end": 3006.04, "text": " And so for the diary, it's very hard to tell which method works best nowadays because it really depends on how much data you have, how different are the domains and what is the language part that you're working with.", "tokens": [400, 370, 337, 264, 26492, 11, 309, 311, 588, 1152, 281, 980, 597, 3170, 1985, 1151, 13434, 570, 309, 534, 5946, 322, 577, 709, 1412, 291, 362, 11, 577, 819, 366, 264, 25514, 293, 437, 307, 264, 2856, 644, 300, 291, 434, 1364, 365, 13], "temperature": 0.0, "avg_logprob": -0.19631398188603388, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.0001621037517907098}, {"id": 741, "seek": 298904, "start": 3006.04, "end": 3015.04, "text": " For instance, the domains may be very different, but if you have a lot of data, maybe it doesn't matter much.", "tokens": [1171, 5197, 11, 264, 25514, 815, 312, 588, 819, 11, 457, 498, 291, 362, 257, 688, 295, 1412, 11, 1310, 309, 1177, 380, 1871, 709, 13], "temperature": 0.0, "avg_logprob": -0.19631398188603388, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.0001621037517907098}, {"id": 742, "seek": 301504, "start": 3015.04, "end": 3025.04, "text": " And one of these we have key ingredients, the noise in auto encoding, bad translation, multilingual training that work pretty well.", "tokens": [400, 472, 295, 613, 321, 362, 2141, 6952, 11, 264, 5658, 294, 8399, 43430, 11, 1578, 12853, 11, 2120, 38219, 3097, 300, 589, 1238, 731, 13], "temperature": 0.0, "avg_logprob": -0.24887328811838658, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.0007149353041313589}, {"id": 743, "seek": 301504, "start": 3025.04, "end": 3039.04, "text": " And nowadays the field is at the stage in which we are trying to figure out the best way to combine them. And right now there is a lot of what I would say craftsmanship to figure out how to best combine them.", "tokens": [400, 13434, 264, 2519, 307, 412, 264, 3233, 294, 597, 321, 366, 1382, 281, 2573, 484, 264, 1151, 636, 281, 10432, 552, 13, 400, 558, 586, 456, 307, 257, 688, 295, 437, 286, 576, 584, 8448, 10817, 27140, 281, 2573, 484, 577, 281, 1151, 10432, 552, 13], "temperature": 0.0, "avg_logprob": -0.24887328811838658, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.0007149353041313589}, {"id": 744, "seek": 303904, "start": 3039.04, "end": 3047.04, "text": " But hopefully we can find out. And I think there is a lot of effort in trying to automate this process because right now.", "tokens": [583, 4696, 321, 393, 915, 484, 13, 400, 286, 519, 456, 307, 257, 688, 295, 4630, 294, 1382, 281, 31605, 341, 1399, 570, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.1589084158138353, "compression_ratio": 1.4149659863945578, "no_speech_prob": 0.0005955022061243653}, {"id": 745, "seek": 303904, "start": 3047.04, "end": 3054.04, "text": " There is a lot of cross validation would say to figure out all these hyper parameters.", "tokens": [821, 307, 257, 688, 295, 3278, 24071, 576, 584, 281, 2573, 484, 439, 613, 9848, 9834, 13], "temperature": 0.0, "avg_logprob": -0.1589084158138353, "compression_ratio": 1.4149659863945578, "no_speech_prob": 0.0005955022061243653}, {"id": 746, "seek": 305404, "start": 3054.04, "end": 3081.04, "text": " So the open challenges here are dealing with the diversity of domains, a dealing with data sets that have very wildly different translation quality, some are very noisy, some are very clean dealing with different with data sets of different size and very different language pairs.", "tokens": [407, 264, 1269, 4759, 510, 366, 6260, 365, 264, 8811, 295, 25514, 11, 257, 6260, 365, 1412, 6352, 300, 362, 588, 34731, 819, 12853, 3125, 11, 512, 366, 588, 24518, 11, 512, 366, 588, 2541, 6260, 365, 819, 365, 1412, 6352, 295, 819, 2744, 293, 588, 819, 2856, 15494, 13], "temperature": 0.0, "avg_logprob": -0.2511180595115379, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0003431265940889716}, {"id": 747, "seek": 308104, "start": 3081.04, "end": 3104.04, "text": " And yeah, and so I would say that in general it may be counterintuitive, but working in low resource machine translation doesn't mean training small models on small data, but actually means training even bigger models on even more data because you need to compensate for the lack of supervision that you have of direct supervision that you have.", "tokens": [400, 1338, 11, 293, 370, 286, 576, 584, 300, 294, 2674, 309, 815, 312, 5682, 686, 48314, 11, 457, 1364, 294, 2295, 7684, 3479, 12853, 1177, 380, 914, 3097, 1359, 5245, 322, 1359, 1412, 11, 457, 767, 1355, 3097, 754, 3801, 5245, 322, 754, 544, 1412, 570, 291, 643, 281, 29458, 337, 264, 5011, 295, 32675, 300, 291, 362, 295, 2047, 32675, 300, 291, 362, 13], "temperature": 0.0, "avg_logprob": -0.20966595241001673, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.0016351633239537477}, {"id": 748, "seek": 310404, "start": 3104.04, "end": 3116.04, "text": " Very good. Before I go on, are there any questions? Yeah, I just had a quick question regarding in the in a few of the previous algorithms that you described.", "tokens": [4372, 665, 13, 4546, 286, 352, 322, 11, 366, 456, 604, 1651, 30, 865, 11, 286, 445, 632, 257, 1702, 1168, 8595, 294, 264, 294, 257, 1326, 295, 264, 3894, 14642, 300, 291, 7619, 13], "temperature": 0.0, "avg_logprob": -0.15181272323817424, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.00013727304758504033}, {"id": 749, "seek": 310404, "start": 3116.04, "end": 3129.04, "text": " Is it necessary to retrain entirely like retrain the model entirely or is there some way to augment the model or fine tune it on the on the generated.", "tokens": [1119, 309, 4818, 281, 1533, 7146, 7696, 411, 1533, 7146, 264, 2316, 7696, 420, 307, 456, 512, 636, 281, 29919, 264, 2316, 420, 2489, 10864, 309, 322, 264, 322, 264, 10833, 13], "temperature": 0.0, "avg_logprob": -0.15181272323817424, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.00013727304758504033}, {"id": 750, "seek": 312904, "start": 3129.04, "end": 3137.04, "text": " So actually, what usually happens is that as you iterate, you can make the model bigger.", "tokens": [407, 767, 11, 437, 2673, 2314, 307, 300, 382, 291, 44497, 11, 291, 393, 652, 264, 2316, 3801, 13], "temperature": 0.0, "avg_logprob": -0.21040670750504833, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.0006866097101010382}, {"id": 751, "seek": 312904, "start": 3137.04, "end": 3146.04, "text": " So when you train on the parallel data set, usually this is not much data and so you need to train in something smaller, why is your overfed too much.", "tokens": [407, 562, 291, 3847, 322, 264, 8952, 1412, 992, 11, 2673, 341, 307, 406, 709, 1412, 293, 370, 291, 643, 281, 3847, 294, 746, 4356, 11, 983, 307, 428, 670, 33712, 886, 709, 13], "temperature": 0.0, "avg_logprob": -0.21040670750504833, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.0006866097101010382}, {"id": 752, "seek": 314604, "start": 3146.04, "end": 3168.04, "text": " Once you add the monolingual data that you this 80 data set, then this model can be much bigger than your original model. Now, it's not super obvious how to, you know, initialize a bigger model from a smaller model.", "tokens": [3443, 291, 909, 264, 1108, 401, 278, 901, 1412, 300, 291, 341, 4688, 1412, 992, 11, 550, 341, 2316, 393, 312, 709, 3801, 813, 428, 3380, 2316, 13, 823, 11, 309, 311, 406, 1687, 6322, 577, 281, 11, 291, 458, 11, 5883, 1125, 257, 3801, 2316, 490, 257, 4356, 2316, 13], "temperature": 0.0, "avg_logprob": -0.18738072135231712, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.00010657863458618522}, {"id": 753, "seek": 316804, "start": 3168.04, "end": 3182.04, "text": " So that's why people usually initialize from random at the next iterations, you can initialize from the model at the previous interaction.", "tokens": [407, 300, 311, 983, 561, 2673, 5883, 1125, 490, 4974, 412, 264, 958, 36540, 11, 291, 393, 5883, 1125, 490, 264, 2316, 412, 264, 3894, 9285, 13], "temperature": 0.0, "avg_logprob": -0.13643382986386618, "compression_ratio": 1.5661764705882353, "no_speech_prob": 0.0001427669485565275}, {"id": 754, "seek": 316804, "start": 3182.04, "end": 3191.04, "text": " What we usually find is that initializing at random usually works as well.", "tokens": [708, 321, 2673, 915, 307, 300, 5883, 3319, 412, 4974, 2673, 1985, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13643382986386618, "compression_ratio": 1.5661764705882353, "no_speech_prob": 0.0001427669485565275}, {"id": 755, "seek": 319104, "start": 3191.04, "end": 3198.04, "text": " Thank you. Thank you. Okay, any other question.", "tokens": [1044, 291, 13, 1044, 291, 13, 1033, 11, 604, 661, 1168, 13], "temperature": 0.0, "avg_logprob": -0.20871491334876235, "compression_ratio": 1.4296296296296296, "no_speech_prob": 0.0003704591072164476}, {"id": 756, "seek": 319104, "start": 3198.04, "end": 3209.04, "text": " When you say, usually the model learns, I was wondering, do you mean that you add more layers of the more parameters as the model keeps training.", "tokens": [1133, 291, 584, 11, 2673, 264, 2316, 27152, 11, 286, 390, 6359, 11, 360, 291, 914, 300, 291, 909, 544, 7914, 295, 264, 544, 9834, 382, 264, 2316, 5965, 3097, 13], "temperature": 0.0, "avg_logprob": -0.20871491334876235, "compression_ratio": 1.4296296296296296, "no_speech_prob": 0.0003704591072164476}, {"id": 757, "seek": 320904, "start": 3209.04, "end": 3225.04, "text": " So usually you just make it bigger. Yeah. Yeah, the more layers more parameter. So whether it is wider or deeper.", "tokens": [407, 2673, 291, 445, 652, 309, 3801, 13, 865, 13, 865, 11, 264, 544, 7914, 544, 13075, 13, 407, 1968, 309, 307, 11842, 420, 7731, 13], "temperature": 0.0, "avg_logprob": -0.2369045575459798, "compression_ratio": 1.202127659574468, "no_speech_prob": 0.00021979286975692958}, {"id": 758, "seek": 322504, "start": 3225.04, "end": 3241.04, "text": " I think usually, yeah, I'm not entirely sure there is a definite answer on that. Usually making the encoder deeper is a good thing.", "tokens": [286, 519, 2673, 11, 1338, 11, 286, 478, 406, 7696, 988, 456, 307, 257, 25131, 1867, 322, 300, 13, 11419, 1455, 264, 2058, 19866, 7731, 307, 257, 665, 551, 13], "temperature": 0.0, "avg_logprob": -0.1354855273632293, "compression_ratio": 1.376923076923077, "no_speech_prob": 0.0003264266124460846}, {"id": 759, "seek": 322504, "start": 3241.04, "end": 3245.04, "text": " Making the decoder deeper doesn't buy you much.", "tokens": [14595, 264, 979, 19866, 7731, 1177, 380, 2256, 291, 709, 13], "temperature": 0.0, "avg_logprob": -0.1354855273632293, "compression_ratio": 1.376923076923077, "no_speech_prob": 0.0003264266124460846}, {"id": 760, "seek": 324504, "start": 3245.04, "end": 3259.04, "text": " So usually we play with encoder, I would say. But yeah, there is not so much difference in practice, I would say.", "tokens": [407, 2673, 321, 862, 365, 2058, 19866, 11, 286, 576, 584, 13, 583, 1338, 11, 456, 307, 406, 370, 709, 2649, 294, 3124, 11, 286, 576, 584, 13], "temperature": 0.0, "avg_logprob": -0.17935935974121095, "compression_ratio": 1.3840579710144927, "no_speech_prob": 0.0002270258410135284}, {"id": 761, "seek": 324504, "start": 3259.04, "end": 3269.04, "text": " So you can imagine just double the size of your hidden state that would work.", "tokens": [407, 291, 393, 3811, 445, 3834, 264, 2744, 295, 428, 7633, 1785, 300, 576, 589, 13], "temperature": 0.0, "avg_logprob": -0.17935935974121095, "compression_ratio": 1.3840579710144927, "no_speech_prob": 0.0002270258410135284}, {"id": 762, "seek": 326904, "start": 3269.04, "end": 3282.04, "text": " Okay, so let's see how this. So I didn't speak about models, but I spoke about algorithms. You can turn this algorithms into models a little bit and talk about joint distribution, March on distribution.", "tokens": [1033, 11, 370, 718, 311, 536, 577, 341, 13, 407, 286, 994, 380, 1710, 466, 5245, 11, 457, 286, 7179, 466, 14642, 13, 509, 393, 1261, 341, 14642, 666, 5245, 257, 707, 857, 293, 751, 466, 7225, 7316, 11, 6129, 322, 7316, 13], "temperature": 0.0, "avg_logprob": -0.18663423125808304, "compression_ratio": 1.5621890547263682, "no_speech_prob": 0.000722329190466553}, {"id": 763, "seek": 326904, "start": 3282.04, "end": 3291.04, "text": " But in my view, it's just simpler to think in terms of algorithms, because also the way that we implement them.", "tokens": [583, 294, 452, 1910, 11, 309, 311, 445, 18587, 281, 519, 294, 2115, 295, 14642, 11, 570, 611, 264, 636, 300, 321, 4445, 552, 13], "temperature": 0.0, "avg_logprob": -0.18663423125808304, "compression_ratio": 1.5621890547263682, "no_speech_prob": 0.000722329190466553}, {"id": 764, "seek": 329104, "start": 3291.04, "end": 3306.04, "text": " And so let's see how these algorithms can be put together in some interesting case studies. So actually, I realized that I'm really going slow. So let's see the case where you only have monolingual data and no parallel data.", "tokens": [400, 370, 718, 311, 536, 577, 613, 14642, 393, 312, 829, 1214, 294, 512, 1880, 1389, 5313, 13, 407, 767, 11, 286, 5334, 300, 286, 478, 534, 516, 2964, 13, 407, 718, 311, 536, 264, 1389, 689, 291, 787, 362, 1108, 401, 278, 901, 1412, 293, 572, 8952, 1412, 13], "temperature": 0.0, "avg_logprob": -0.08114261486951042, "compression_ratio": 1.5, "no_speech_prob": 0.00018156097212340683}, {"id": 765, "seek": 329104, "start": 3306.04, "end": 3310.04, "text": " So this is what we call unsupervised machine translation.", "tokens": [407, 341, 307, 437, 321, 818, 2693, 12879, 24420, 3479, 12853, 13], "temperature": 0.0, "avg_logprob": -0.08114261486951042, "compression_ratio": 1.5, "no_speech_prob": 0.00018156097212340683}, {"id": 766, "seek": 331004, "start": 3310.04, "end": 3324.04, "text": " So let's say that you have an English and a French data set. This is not a typical use case of a supervised machine translation, but this is where it works really well. So let's focus for this for now.", "tokens": [407, 718, 311, 584, 300, 291, 362, 364, 3669, 293, 257, 5522, 1412, 992, 13, 639, 307, 406, 257, 7476, 764, 1389, 295, 257, 46533, 3479, 12853, 11, 457, 341, 307, 689, 309, 1985, 534, 731, 13, 407, 718, 311, 1879, 337, 341, 337, 586, 13], "temperature": 0.0, "avg_logprob": -0.1674753619778541, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.00025767169427126646}, {"id": 767, "seek": 331004, "start": 3324.04, "end": 3334.04, "text": " And so you take a sentence from the target seminal in all data set, you go through your encoder decoder and you produce an English translation. Obviously, you don't have the reference here.", "tokens": [400, 370, 291, 747, 257, 8174, 490, 264, 3779, 4361, 2071, 294, 439, 1412, 992, 11, 291, 352, 807, 428, 2058, 19866, 979, 19866, 293, 291, 5258, 364, 3669, 12853, 13, 7580, 11, 291, 500, 380, 362, 264, 6408, 510, 13], "temperature": 0.0, "avg_logprob": -0.1674753619778541, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.00025767169427126646}, {"id": 768, "seek": 333404, "start": 3334.04, "end": 3351.04, "text": " So what you could do is to feed this to a machine translation system that goes from English to French so that you kind of reconstruct your original French sentence. And now you have you can have another signal to back propagate through your machine translation system.", "tokens": [407, 437, 291, 727, 360, 307, 281, 3154, 341, 281, 257, 3479, 12853, 1185, 300, 1709, 490, 3669, 281, 5522, 370, 300, 291, 733, 295, 31499, 428, 3380, 5522, 8174, 13, 400, 586, 291, 362, 291, 393, 362, 1071, 6358, 281, 646, 48256, 807, 428, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.12327138115377988, "compression_ratio": 1.7688172043010753, "no_speech_prob": 0.0003450048097874969}, {"id": 769, "seek": 333404, "start": 3351.04, "end": 3355.04, "text": " You can do the same going from English to French to English.", "tokens": [509, 393, 360, 264, 912, 516, 490, 3669, 281, 5522, 281, 3669, 13], "temperature": 0.0, "avg_logprob": -0.12327138115377988, "compression_ratio": 1.7688172043010753, "no_speech_prob": 0.0003450048097874969}, {"id": 770, "seek": 335504, "start": 3355.04, "end": 3369.04, "text": " This is very much what people have done in vision, the code, a psycho consistency. You can see this as a note encoder where the intermediate representation is, you know, is a language in English.", "tokens": [639, 307, 588, 709, 437, 561, 362, 1096, 294, 5201, 11, 264, 3089, 11, 257, 33355, 14416, 13, 509, 393, 536, 341, 382, 257, 3637, 2058, 19866, 689, 264, 19376, 10290, 307, 11, 291, 458, 11, 307, 257, 2856, 294, 3669, 13], "temperature": 0.0, "avg_logprob": -0.19667249407087053, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.0005445291171781719}, {"id": 771, "seek": 335504, "start": 3369.04, "end": 3378.04, "text": " The problem is that as it is, the model is not constrained to produce something that is fluent English sentence.", "tokens": [440, 1154, 307, 300, 382, 309, 307, 11, 264, 2316, 307, 406, 38901, 281, 5258, 746, 300, 307, 40799, 3669, 8174, 13], "temperature": 0.0, "avg_logprob": -0.19667249407087053, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.0005445291171781719}, {"id": 772, "seek": 337804, "start": 3378.04, "end": 3395.04, "text": " So in the vision of main people use adversarial training, but in an LTE, it's kind of tricky because this is a discrete sequence. And so in order to make sure that this decoder produces English fluent English sentences, you could imagine to do the noisy auto encoding.", "tokens": [407, 294, 264, 5201, 295, 2135, 561, 764, 17641, 44745, 3097, 11, 457, 294, 364, 441, 13639, 11, 309, 311, 733, 295, 12414, 570, 341, 307, 257, 27706, 8310, 13, 400, 370, 294, 1668, 281, 652, 988, 300, 341, 979, 19866, 14725, 3669, 40799, 3669, 16579, 11, 291, 727, 3811, 281, 360, 264, 24518, 8399, 43430, 13], "temperature": 0.0, "avg_logprob": -0.2708069848232582, "compression_ratio": 1.4486486486486487, "no_speech_prob": 0.0003061466559302062}, {"id": 773, "seek": 339504, "start": 3395.04, "end": 3413.04, "text": " So you could take a, you could take an English sentence, notified what through your denoysed auto encoding now this decoder is the same block that you appear is going to be forced to learn the statistics and the regularities of the English language.", "tokens": [407, 291, 727, 747, 257, 11, 291, 727, 747, 364, 3669, 8174, 11, 18013, 437, 807, 428, 1441, 78, 749, 292, 8399, 43430, 586, 341, 979, 19866, 307, 264, 912, 3461, 300, 291, 4204, 307, 516, 281, 312, 7579, 281, 1466, 264, 12523, 293, 264, 3890, 1088, 295, 264, 3669, 2856, 13], "temperature": 0.0, "avg_logprob": -0.26790058612823486, "compression_ratio": 1.5660377358490567, "no_speech_prob": 0.00018312566680833697}, {"id": 774, "seek": 341304, "start": 3413.04, "end": 3431.04, "text": " The problem is that if you look at this decoder, this decoder is in the denoysed auto encoding game, it is operating on the output of this encoder that takes English as input while here encoder takes French as input.", "tokens": [440, 1154, 307, 300, 498, 291, 574, 412, 341, 979, 19866, 11, 341, 979, 19866, 307, 294, 264, 1441, 78, 749, 292, 8399, 43430, 1216, 11, 309, 307, 7447, 322, 264, 5598, 295, 341, 2058, 19866, 300, 2516, 3669, 382, 4846, 1339, 510, 2058, 19866, 2516, 5522, 382, 4846, 13], "temperature": 0.0, "avg_logprob": -0.08248142143348594, "compression_ratio": 1.6614583333333333, "no_speech_prob": 0.00033677570172585547}, {"id": 775, "seek": 341304, "start": 3431.04, "end": 3437.04, "text": " It could be very well be the case that the representation produced by these two encoders is different.", "tokens": [467, 727, 312, 588, 731, 312, 264, 1389, 300, 264, 10290, 7126, 538, 613, 732, 2058, 378, 433, 307, 819, 13], "temperature": 0.0, "avg_logprob": -0.08248142143348594, "compression_ratio": 1.6614583333333333, "no_speech_prob": 0.00033677570172585547}, {"id": 776, "seek": 343704, "start": 3437.04, "end": 3453.04, "text": " So this decoder may work very well in this setting, but not in this setting. And so in other ways, how can we make sure that this red and blue blocks are interchangeable? How can we make sure that there is good modularity.", "tokens": [407, 341, 979, 19866, 815, 589, 588, 731, 294, 341, 3287, 11, 457, 406, 294, 341, 3287, 13, 400, 370, 294, 661, 2098, 11, 577, 393, 321, 652, 988, 300, 341, 2182, 293, 3344, 8474, 366, 30358, 712, 30, 1012, 393, 321, 652, 988, 300, 456, 307, 665, 31111, 507, 13], "temperature": 0.0, "avg_logprob": -0.1070297588001598, "compression_ratio": 1.5633802816901408, "no_speech_prob": 0.0005158682470209897}, {"id": 777, "seek": 345304, "start": 3453.04, "end": 3469.04, "text": " So one way to do this is to use the trick that we use for multilingual training, whereby we have a single encoder and a single decoder. So the decoder is shared across France and English and the encoder is shared across English and France.", "tokens": [407, 472, 636, 281, 360, 341, 307, 281, 764, 264, 4282, 300, 321, 764, 337, 2120, 38219, 3097, 11, 36998, 321, 362, 257, 2167, 2058, 19866, 293, 257, 2167, 979, 19866, 13, 407, 264, 979, 19866, 307, 5507, 2108, 6190, 293, 3669, 293, 264, 2058, 19866, 307, 5507, 2108, 3669, 293, 6190, 13], "temperature": 0.0, "avg_logprob": -0.11987813313802083, "compression_ratio": 1.6830985915492958, "no_speech_prob": 0.00015567310038022697}, {"id": 778, "seek": 346904, "start": 3469.04, "end": 3497.04, "text": " And we specify the target language by an extra token at the input. And so in particular, if you learn common BPS and if you share parameters, then this process, sorry, this process really works well and you have an encoder that operates well with whenever it is fed with the hidden state that comes from an encoder operating on English or French.", "tokens": [400, 321, 16500, 264, 3779, 2856, 538, 364, 2857, 14862, 412, 264, 4846, 13, 400, 370, 294, 1729, 11, 498, 291, 1466, 2689, 363, 6273, 293, 498, 291, 2073, 9834, 11, 550, 341, 1399, 11, 2597, 11, 341, 1399, 534, 1985, 731, 293, 291, 362, 364, 2058, 19866, 300, 22577, 731, 365, 5699, 309, 307, 4636, 365, 264, 7633, 1785, 300, 1487, 490, 364, 2058, 19866, 7447, 322, 3669, 420, 5522, 13], "temperature": 0.0, "avg_logprob": -0.1703948598158987, "compression_ratio": 1.5944700460829493, "no_speech_prob": 0.00030806660652160645}, {"id": 779, "seek": 349704, "start": 3497.04, "end": 3508.04, "text": " And so again, the key ingredients are iterative by translation, the noise encoding and multilingual training. And for supervised machine translation, we do.", "tokens": [400, 370, 797, 11, 264, 2141, 6952, 366, 17138, 1166, 538, 12853, 11, 264, 5658, 43430, 293, 2120, 38219, 3097, 13, 400, 337, 46533, 3479, 12853, 11, 321, 360, 13], "temperature": 0.0, "avg_logprob": -0.3328700065612793, "compression_ratio": 1.3805309734513274, "no_speech_prob": 0.000434584217146039}, {"id": 780, "seek": 350804, "start": 3508.04, "end": 3537.04, "text": " And so when you do this on English friends, you find that as you you can get pretty good performance, a blue of 30, usually key is you pretty fluent translations that are also adequate.", "tokens": [400, 370, 562, 291, 360, 341, 322, 3669, 1855, 11, 291, 915, 300, 382, 291, 291, 393, 483, 1238, 665, 3389, 11, 257, 3344, 295, 2217, 11, 2673, 2141, 307, 291, 1238, 40799, 37578, 300, 366, 611, 20927, 13], "temperature": 0.0, "avg_logprob": -0.31710094629332075, "compression_ratio": 1.3909774436090225, "no_speech_prob": 0.0005432988400571048}, {"id": 781, "seek": 353704, "start": 3537.04, "end": 3562.04, "text": " And if you compare that to what you got with the supervised baseline that is trained on the parallel data set, you find that training on 10 million monolingual sentences in English and 10 million French gives you the same translation accuracy, then training a supervised baseline that is this red curve.", "tokens": [400, 498, 291, 6794, 300, 281, 437, 291, 658, 365, 264, 46533, 20518, 300, 307, 8895, 322, 264, 8952, 1412, 992, 11, 291, 915, 300, 3097, 322, 1266, 2459, 1108, 401, 278, 901, 16579, 294, 3669, 293, 1266, 2459, 5522, 2709, 291, 264, 912, 12853, 14170, 11, 550, 3097, 257, 46533, 20518, 300, 307, 341, 2182, 7605, 13], "temperature": 0.0, "avg_logprob": -0.1551555049034857, "compression_ratio": 1.702247191011236, "no_speech_prob": 0.0009487892384640872}, {"id": 782, "seek": 356204, "start": 3562.04, "end": 3583.04, "text": " Actually, this red curve, this blue curve and this red curve, this is the new version, this is the place base version with 100,000 parallel sentences. So in other words, each parallel sentence, bar is equivalent to 100 monolingual sentences.", "tokens": [5135, 11, 341, 2182, 7605, 11, 341, 3344, 7605, 293, 341, 2182, 7605, 11, 341, 307, 264, 777, 3037, 11, 341, 307, 264, 1081, 3096, 3037, 365, 2319, 11, 1360, 8952, 16579, 13, 407, 294, 661, 2283, 11, 1184, 8952, 8174, 11, 2159, 307, 10344, 281, 2319, 1108, 401, 278, 901, 16579, 13], "temperature": 0.0, "avg_logprob": -0.26251943487870066, "compression_ratio": 1.6736111111111112, "no_speech_prob": 0.00023244218027684838}, {"id": 783, "seek": 358304, "start": 3583.04, "end": 3603.04, "text": " So in the sense that they give you a machine translation system of similar accuracy. And so now the more the domains are different and the more the languages are different from each other, the words it gets.", "tokens": [407, 294, 264, 2020, 300, 436, 976, 291, 257, 3479, 12853, 1185, 295, 2531, 14170, 13, 400, 370, 586, 264, 544, 264, 25514, 366, 819, 293, 264, 544, 264, 8650, 366, 819, 490, 1184, 661, 11, 264, 2283, 309, 2170, 13], "temperature": 0.0, "avg_logprob": -0.1989286422729492, "compression_ratio": 1.5220588235294117, "no_speech_prob": 0.0003532842092681676}, {"id": 784, "seek": 360304, "start": 3603.04, "end": 3619.04, "text": " That's why when you do loads of machine translation, this is the extreme case of unsupervised machine translation, you need to learn from lots of data in order to compensate for the lack of direct supervision.", "tokens": [663, 311, 983, 562, 291, 360, 12668, 295, 3479, 12853, 11, 341, 307, 264, 8084, 1389, 295, 2693, 12879, 24420, 3479, 12853, 11, 291, 643, 281, 1466, 490, 3195, 295, 1412, 294, 1668, 281, 29458, 337, 264, 5011, 295, 2047, 32675, 13], "temperature": 0.0, "avg_logprob": -0.14538843735404636, "compression_ratio": 1.536764705882353, "no_speech_prob": 0.00042659338214434683}, {"id": 785, "seek": 361904, "start": 3619.04, "end": 3641.04, "text": " And maybe give you an example on Flores where for the Flores, as we have seen, there was no in domain parallel data. There was some monolingual data that was in domain, but not very much. And there was quite a bit of auto domain parallel data.", "tokens": [400, 1310, 976, 291, 364, 1365, 322, 3235, 2706, 689, 337, 264, 3235, 2706, 11, 382, 321, 362, 1612, 11, 456, 390, 572, 294, 9274, 8952, 1412, 13, 821, 390, 512, 1108, 401, 278, 901, 1412, 300, 390, 294, 9274, 11, 457, 406, 588, 709, 13, 400, 456, 390, 1596, 257, 857, 295, 8399, 9274, 8952, 1412, 13], "temperature": 0.0, "avg_logprob": -0.18746069938905777, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0004931401927024126}, {"id": 786, "seek": 364104, "start": 3641.04, "end": 3652.04, "text": " Do you remember the one million sentences from Bible and Ubuntu. And then we have quite a bit of monolingual data that is auto domain.", "tokens": [1144, 291, 1604, 264, 472, 2459, 16579, 490, 6544, 293, 30230, 45605, 13, 400, 550, 321, 362, 1596, 257, 857, 295, 1108, 401, 278, 901, 1412, 300, 307, 8399, 9274, 13], "temperature": 0.0, "avg_logprob": -0.13970279693603516, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.0005088401376269758}, {"id": 787, "seek": 364104, "start": 3652.04, "end": 3666.04, "text": " And so this is the supervised baseline unsupervised machine translation here didn't work at all because very much like was mentioned that the Wikipedia domains are not quite aligned.", "tokens": [400, 370, 341, 307, 264, 46533, 20518, 2693, 12879, 24420, 3479, 12853, 510, 994, 380, 589, 412, 439, 570, 588, 709, 411, 390, 2835, 300, 264, 28999, 25514, 366, 406, 1596, 17962, 13], "temperature": 0.0, "avg_logprob": -0.13970279693603516, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.0005088401376269758}, {"id": 788, "seek": 366604, "start": 3666.04, "end": 3679.04, "text": " So this doesn't have unsupervised machine translation. If you do back translation, if you do iterative, but transition, you do quite a bit better than the supervised baseline, which is quite good.", "tokens": [407, 341, 1177, 380, 362, 2693, 12879, 24420, 3479, 12853, 13, 759, 291, 360, 646, 12853, 11, 498, 291, 360, 17138, 1166, 11, 457, 6034, 11, 291, 360, 1596, 257, 857, 1101, 813, 264, 46533, 20518, 11, 597, 307, 1596, 665, 13], "temperature": 0.0, "avg_logprob": -0.21018563146176544, "compression_ratio": 1.5076923076923077, "no_speech_prob": 0.0008250123937614262}, {"id": 789, "seek": 367904, "start": 3679.04, "end": 3701.04, "text": " And you add also English Hindi parallel data, you do quite a bit better. And now also the unsupervised machine translation works. It's unsupervised for English Nepali, but you do have supervision for English Hindi. And so the combination of back translation and multilingual training is here, the winning combination.", "tokens": [400, 291, 909, 611, 3669, 36225, 8952, 1412, 11, 291, 360, 1596, 257, 857, 1101, 13, 400, 586, 611, 264, 2693, 12879, 24420, 3479, 12853, 1985, 13, 467, 311, 2693, 12879, 24420, 337, 3669, 24875, 5103, 11, 457, 291, 360, 362, 32675, 337, 3669, 36225, 13, 400, 370, 264, 6562, 295, 646, 12853, 293, 2120, 38219, 3097, 307, 510, 11, 264, 8224, 6562, 13], "temperature": 0.0, "avg_logprob": -0.16120374903959386, "compression_ratio": 1.7043010752688172, "no_speech_prob": 0.00014184410974849015}, {"id": 790, "seek": 370104, "start": 3701.04, "end": 3717.04, "text": " And this is something that we see through in general. So I'm going to skip the results on English bar means actually, I had a nice demo, but I'm going to show it to you later if there is time.", "tokens": [400, 341, 307, 746, 300, 321, 536, 807, 294, 2674, 13, 407, 286, 478, 516, 281, 10023, 264, 3542, 322, 3669, 2159, 1355, 767, 11, 286, 632, 257, 1481, 10723, 11, 457, 286, 478, 516, 281, 855, 309, 281, 291, 1780, 498, 456, 307, 565, 13], "temperature": 0.0, "avg_logprob": -0.19878067016601564, "compression_ratio": 1.3714285714285714, "no_speech_prob": 0.0004990746965631843}, {"id": 791, "seek": 371704, "start": 3717.04, "end": 3740.04, "text": " And so, as I said, we have quite a few good components, which we can combine pretty easily. And now the research is about how to best combine them, how to best weight data sets, how to best weight examples in order to automate the current cross validation based process, I would say.", "tokens": [400, 370, 11, 382, 286, 848, 11, 321, 362, 1596, 257, 1326, 665, 6677, 11, 597, 321, 393, 10432, 1238, 3612, 13, 400, 586, 264, 2132, 307, 466, 577, 281, 1151, 10432, 552, 11, 577, 281, 1151, 3364, 1412, 6352, 11, 577, 281, 1151, 3364, 5110, 294, 1668, 281, 31605, 264, 2190, 3278, 24071, 2361, 1399, 11, 286, 576, 584, 13], "temperature": 0.0, "avg_logprob": -0.09965620040893555, "compression_ratio": 1.5810055865921788, "no_speech_prob": 0.00018153878045268357}, {"id": 792, "seek": 374004, "start": 3740.04, "end": 3758.04, "text": " And the other message here is that it's, Lorenzo's machine translation is a big data problem. It requires big compute. It's a pretty big engineering feat in order to compensate for the lack of parallel data.", "tokens": [400, 264, 661, 3636, 510, 307, 300, 309, 311, 11, 37162, 4765, 311, 3479, 12853, 307, 257, 955, 1412, 1154, 13, 467, 7029, 955, 14722, 13, 467, 311, 257, 1238, 955, 7043, 15425, 294, 1668, 281, 29458, 337, 264, 5011, 295, 8952, 1412, 13], "temperature": 0.0, "avg_logprob": -0.17448880379660087, "compression_ratio": 1.437125748502994, "no_speech_prob": 0.0002816157357301563}, {"id": 793, "seek": 374004, "start": 3758.04, "end": 3761.04, "text": " Are there any questions on this?", "tokens": [2014, 456, 604, 1651, 322, 341, 30], "temperature": 0.0, "avg_logprob": -0.17448880379660087, "compression_ratio": 1.437125748502994, "no_speech_prob": 0.0002816157357301563}, {"id": 794, "seek": 376104, "start": 3761.04, "end": 3771.04, "text": " I was just wondering when you mentioned that the parallel to vision in cycle consistency, you mentioned that we can't do adversarial training.", "tokens": [286, 390, 445, 6359, 562, 291, 2835, 300, 264, 8952, 281, 5201, 294, 6586, 14416, 11, 291, 2835, 300, 321, 393, 380, 360, 17641, 44745, 3097, 13], "temperature": 0.0, "avg_logprob": -0.12099666444082109, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0006032309029251337}, {"id": 795, "seek": 376104, "start": 3771.04, "end": 3780.04, "text": " And I was just wondering if you could flush that out and why we couldn't just use say like an LSTM and performs adversarial training.", "tokens": [400, 286, 390, 445, 6359, 498, 291, 727, 19568, 300, 484, 293, 983, 321, 2809, 380, 445, 764, 584, 411, 364, 441, 6840, 44, 293, 26213, 17641, 44745, 3097, 13], "temperature": 0.0, "avg_logprob": -0.12099666444082109, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0006032309029251337}, {"id": 796, "seek": 378004, "start": 3780.04, "end": 3793.04, "text": " Yeah, yes, yes, so there are actually a bunch of papers trying to do adversarial training or guns, dial training for text generation.", "tokens": [865, 11, 2086, 11, 2086, 11, 370, 456, 366, 767, 257, 3840, 295, 10577, 1382, 281, 360, 17641, 44745, 3097, 420, 10153, 11, 5502, 3097, 337, 2487, 5125, 13], "temperature": 0.0, "avg_logprob": -0.2323331981897354, "compression_ratio": 1.521978021978022, "no_speech_prob": 0.00039486473542638123}, {"id": 797, "seek": 378004, "start": 3793.04, "end": 3804.04, "text": " I must say that it's a pretty active research area. I haven't seen a very compelling demonstration that this methods work very well with tried.", "tokens": [286, 1633, 584, 300, 309, 311, 257, 1238, 4967, 2132, 1859, 13, 286, 2378, 380, 1612, 257, 588, 20050, 16520, 300, 341, 7150, 589, 588, 731, 365, 3031, 13], "temperature": 0.0, "avg_logprob": -0.2323331981897354, "compression_ratio": 1.521978021978022, "no_speech_prob": 0.00039486473542638123}, {"id": 798, "seek": 380404, "start": 3804.04, "end": 3814.04, "text": " It's a little difficult to propagate. So when this produces a sentence, you need to produce, you know, a sentence and that's discrete.", "tokens": [467, 311, 257, 707, 2252, 281, 48256, 13, 407, 562, 341, 14725, 257, 8174, 11, 291, 643, 281, 5258, 11, 291, 458, 11, 257, 8174, 293, 300, 311, 27706, 13], "temperature": 0.0, "avg_logprob": -0.17100882530212402, "compression_ratio": 1.6197916666666667, "no_speech_prob": 0.0007353693363256752}, {"id": 799, "seek": 380404, "start": 3814.04, "end": 3828.04, "text": " And so you could propagate using reinforced kind of methods. You could do a lot of these things, but essentially it's just a little hard to make it work. And it's very finicky.", "tokens": [400, 370, 291, 727, 48256, 1228, 31365, 733, 295, 7150, 13, 509, 727, 360, 257, 688, 295, 613, 721, 11, 457, 4476, 309, 311, 445, 257, 707, 1152, 281, 652, 309, 589, 13, 400, 309, 311, 588, 962, 20539, 13], "temperature": 0.0, "avg_logprob": -0.17100882530212402, "compression_ratio": 1.6197916666666667, "no_speech_prob": 0.0007353693363256752}, {"id": 800, "seek": 382804, "start": 3828.04, "end": 3846.04, "text": " So it may work on simple data sets, but at scale, it's very hard to. So another thing, another consideration is that anything that you do has to work a scale, because again, the value, the amount of information that you get from a monolingual sentence is not very much.", "tokens": [407, 309, 815, 589, 322, 2199, 1412, 6352, 11, 457, 412, 4373, 11, 309, 311, 588, 1152, 281, 13, 407, 1071, 551, 11, 1071, 12381, 307, 300, 1340, 300, 291, 360, 575, 281, 589, 257, 4373, 11, 570, 797, 11, 264, 2158, 11, 264, 2372, 295, 1589, 300, 291, 483, 490, 257, 1108, 401, 278, 901, 8174, 307, 406, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.16637286272915927, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.0005668913363479078}, {"id": 801, "seek": 384604, "start": 3846.04, "end": 3858.04, "text": " Now, if you do a lot of compute, if you or if your gradients have a lot of noise, like when you're doing with reinforced, then it's not going to work.", "tokens": [823, 11, 498, 291, 360, 257, 688, 295, 14722, 11, 498, 291, 420, 498, 428, 2771, 2448, 362, 257, 688, 295, 5658, 11, 411, 562, 291, 434, 884, 365, 31365, 11, 550, 309, 311, 406, 516, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.19484069679356827, "compression_ratio": 1.5604395604395604, "no_speech_prob": 0.0003042760363314301}, {"id": 802, "seek": 384604, "start": 3858.04, "end": 3868.04, "text": " It's possible that people make a map with ways to make it work. I don't think this is true. A present, but it could be in the future.", "tokens": [467, 311, 1944, 300, 561, 652, 257, 4471, 365, 2098, 281, 652, 309, 589, 13, 286, 500, 380, 519, 341, 307, 2074, 13, 316, 1974, 11, 457, 309, 727, 312, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.19484069679356827, "compression_ratio": 1.5604395604395604, "no_speech_prob": 0.0003042760363314301}, {"id": 803, "seek": 386804, "start": 3868.04, "end": 3889.04, "text": " Let me spend five minutes on the analysis. And then you will have this slide so you can go over the remaining details. So here, we, so the starting point is to say, well, if I were to simulate Lord resource machine translation with a high resource language, like French to English, let's say you take Europe,", "tokens": [961, 385, 3496, 1732, 2077, 322, 264, 5215, 13, 400, 550, 291, 486, 362, 341, 4137, 370, 291, 393, 352, 670, 264, 8877, 4365, 13, 407, 510, 11, 321, 11, 370, 264, 2891, 935, 307, 281, 584, 11, 731, 11, 498, 286, 645, 281, 27817, 3257, 7684, 3479, 12853, 365, 257, 1090, 7684, 2856, 11, 411, 5522, 281, 3669, 11, 718, 311, 584, 291, 747, 3315, 11], "temperature": 0.0, "avg_logprob": -0.2778235153413155, "compression_ratio": 1.4879227053140096, "no_speech_prob": 0.00021757648210041225}, {"id": 804, "seek": 388904, "start": 3889.04, "end": 3908.04, "text": " let's say 20,000 parades sentences and 100,000 mongol target sentences, and you play by translation, you got a very nice improvement. Now, if you come here, Facebook, and you try this on Facebook data, you find that the improvement is actually very, very minimal.", "tokens": [718, 311, 584, 945, 11, 1360, 971, 2977, 16579, 293, 2319, 11, 1360, 275, 556, 401, 3779, 16579, 11, 293, 291, 862, 538, 12853, 11, 291, 658, 257, 588, 1481, 10444, 13, 823, 11, 498, 291, 808, 510, 11, 4384, 11, 293, 291, 853, 341, 322, 4384, 1412, 11, 291, 915, 300, 264, 10444, 307, 767, 588, 11, 588, 13206, 13], "temperature": 0.0, "avg_logprob": -0.33502047612116886, "compression_ratio": 1.5654761904761905, "no_speech_prob": 0.00026399578200653195}, {"id": 805, "seek": 390804, "start": 3908.04, "end": 3926.04, "text": " And that relates to the discussion that we had at the very beginning that what people talk about in different parts of the world is very different. And so now you need, it's like you need to align to point clouds, but the distribution is to point clouds is very, very different from each other.", "tokens": [400, 300, 16155, 281, 264, 5017, 300, 321, 632, 412, 264, 588, 2863, 300, 437, 561, 751, 466, 294, 819, 3166, 295, 264, 1002, 307, 588, 819, 13, 400, 370, 586, 291, 643, 11, 309, 311, 411, 291, 643, 281, 7975, 281, 935, 12193, 11, 457, 264, 7316, 307, 281, 935, 12193, 307, 588, 11, 588, 819, 490, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.13347744574913611, "compression_ratio": 1.7093023255813953, "no_speech_prob": 0.00055862677982077}, {"id": 806, "seek": 392604, "start": 3926.04, "end": 3944.04, "text": " And so here I was making example that even for English speaking countries, if you look at topics on sports, you have that in America people may talk more about food, but Facebook, in the UK, more about cricket and soccer, right.", "tokens": [400, 370, 510, 286, 390, 1455, 1365, 300, 754, 337, 3669, 4124, 3517, 11, 498, 291, 574, 412, 8378, 322, 6573, 11, 291, 362, 300, 294, 3374, 561, 815, 751, 544, 466, 1755, 11, 457, 4384, 11, 294, 264, 7051, 11, 544, 466, 31626, 293, 15469, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.31100438675790465, "compression_ratio": 1.3987730061349692, "no_speech_prob": 0.0007005842053331435}, {"id": 807, "seek": 394404, "start": 3944.04, "end": 3965.04, "text": " For the same topic, you have a different distribution words, but you also have a different distribution of topics. And so this is what we call the source target domain mismatch. So you may have several kinds of domain mismatch. Typically, you have a mismatch between the training distribution and the test distribution.", "tokens": [1171, 264, 912, 4829, 11, 291, 362, 257, 819, 7316, 2283, 11, 457, 291, 611, 362, 257, 819, 7316, 295, 8378, 13, 400, 370, 341, 307, 437, 321, 818, 264, 4009, 3779, 9274, 23220, 852, 13, 407, 291, 815, 362, 2940, 3685, 295, 9274, 23220, 852, 13, 23129, 11, 291, 362, 257, 23220, 852, 1296, 264, 3097, 7316, 293, 264, 1500, 7316, 13], "temperature": 0.0, "avg_logprob": -0.1286456976363908, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0011046172585338354}, {"id": 808, "seek": 396504, "start": 3965.04, "end": 3987.04, "text": " And so talking also about the mismatch between the source domain, the source language, the source domain and the target domain. Okay. And so there is a hypothesis that this may make better translation less effective because even if you were to perfectly translate target side monitoring will data once you translate is going to be auto domain.", "tokens": [400, 370, 1417, 611, 466, 264, 23220, 852, 1296, 264, 4009, 9274, 11, 264, 4009, 2856, 11, 264, 4009, 9274, 293, 264, 3779, 9274, 13, 1033, 13, 400, 370, 456, 307, 257, 17291, 300, 341, 815, 652, 1101, 12853, 1570, 4942, 570, 754, 498, 291, 645, 281, 6239, 13799, 3779, 1252, 11028, 486, 1412, 1564, 291, 13799, 307, 516, 281, 312, 8399, 9274, 13], "temperature": 0.0, "avg_logprob": -0.28858546649708466, "compression_ratio": 1.7064676616915422, "no_speech_prob": 0.0005837393109686673}, {"id": 809, "seek": 398704, "start": 3987.04, "end": 4001.04, "text": " And so with respect to the data that you really want to translate, which originates in the source domain. And so we had a very nice control setting to study this problem.", "tokens": [400, 370, 365, 3104, 281, 264, 1412, 300, 291, 534, 528, 281, 13799, 11, 597, 4957, 1024, 294, 264, 4009, 9274, 13, 400, 370, 321, 632, 257, 588, 1481, 1969, 3287, 281, 2979, 341, 1154, 13], "temperature": 0.0, "avg_logprob": -0.12523558139801025, "compression_ratio": 1.36, "no_speech_prob": 0.00028173477039672434}, {"id": 810, "seek": 400104, "start": 4001.04, "end": 4021.04, "text": " And so we were we create a synthetic data set where the source domain comes from your parliament data and the target domain comes from open subtitles, which are movie captions. And now by creating the target domain as a mixture of the two, you can precisely control the amount of", "tokens": [400, 370, 321, 645, 321, 1884, 257, 23420, 1412, 992, 689, 264, 4009, 9274, 1487, 490, 428, 19520, 1412, 293, 264, 3779, 9274, 1487, 490, 1269, 42045, 11, 597, 366, 3169, 44832, 13, 400, 586, 538, 4084, 264, 3779, 9274, 382, 257, 9925, 295, 264, 732, 11, 291, 393, 13402, 1969, 264, 2372, 295], "temperature": 0.0, "avg_logprob": -0.23061652019106108, "compression_ratio": 1.6411764705882352, "no_speech_prob": 0.00021425317390821874}, {"id": 811, "seek": 402104, "start": 4021.04, "end": 4042.04, "text": " the domain is between the source and the target domain. And by very alpha, you can vary that. And so the major result is this figure where alpha measures how much is the target domain similar to the source domain. So if I face equal to one, they are all", "tokens": [264, 9274, 307, 1296, 264, 4009, 293, 264, 3779, 9274, 13, 400, 538, 588, 8961, 11, 291, 393, 10559, 300, 13, 400, 370, 264, 2563, 1874, 307, 341, 2573, 689, 8961, 8000, 577, 709, 307, 264, 3779, 9274, 2531, 281, 264, 4009, 9274, 13, 407, 498, 286, 1851, 2681, 281, 472, 11, 436, 366, 439], "temperature": 0.0, "avg_logprob": -0.2186188293715655, "compression_ratio": 1.5911949685534592, "no_speech_prob": 0.00019534784951247275}, {"id": 812, "seek": 404204, "start": 4042.04, "end": 4058.04, "text": " very different. One is Europe and the other is open subtitles. And so it turns out that in this extreme regime actually said training, which is this deadline works better than back translation.", "tokens": [588, 819, 13, 1485, 307, 3315, 293, 264, 661, 307, 1269, 42045, 13, 400, 370, 309, 4523, 484, 300, 294, 341, 8084, 13120, 767, 848, 3097, 11, 597, 307, 341, 20615, 1985, 1101, 813, 646, 12853, 13], "temperature": 0.0, "avg_logprob": -0.21844542026519775, "compression_ratio": 1.7168949771689497, "no_speech_prob": 0.0003240550577174872}, {"id": 813, "seek": 404204, "start": 4058.04, "end": 4071.04, "text": " But as you make the domains more and more similar, back translation is much better than said training and both of them are much better than just if you were to use the parallel data.", "tokens": [583, 382, 291, 652, 264, 25514, 544, 293, 544, 2531, 11, 646, 12853, 307, 709, 1101, 813, 848, 3097, 293, 1293, 295, 552, 366, 709, 1101, 813, 445, 498, 291, 645, 281, 764, 264, 8952, 1412, 13], "temperature": 0.0, "avg_logprob": -0.21844542026519775, "compression_ratio": 1.7168949771689497, "no_speech_prob": 0.0003240550577174872}, {"id": 814, "seek": 407104, "start": 4071.04, "end": 4086.04, "text": " So I'm going to skip all of this. You can look at the paper and the slides. I want to conclude that there are other things that I didn't talk about like filtering. This is one of the most exciting things nowadays.", "tokens": [407, 286, 478, 516, 281, 10023, 439, 295, 341, 13, 509, 393, 574, 412, 264, 3035, 293, 264, 9788, 13, 286, 528, 281, 16886, 300, 456, 366, 661, 721, 300, 286, 994, 380, 751, 466, 411, 30822, 13, 639, 307, 472, 295, 264, 881, 4670, 721, 13434, 13], "temperature": 0.0, "avg_logprob": -0.10788016135875995, "compression_ratio": 1.4489795918367347, "no_speech_prob": 0.0002638550940901041}, {"id": 815, "seek": 408604, "start": 4086.04, "end": 4107.04, "text": " And the idea is to essentially learn a joint embedding space for sentences by simply training a multilingual system on lots of public available data. And then you use this in order to do nearest the level of three of a sentence for what the corresponding translation would be in other languages.", "tokens": [400, 264, 1558, 307, 281, 4476, 1466, 257, 7225, 12240, 3584, 1901, 337, 16579, 538, 2935, 3097, 257, 2120, 38219, 1185, 322, 3195, 295, 1908, 2435, 1412, 13, 400, 550, 291, 764, 341, 294, 1668, 281, 360, 23831, 264, 1496, 295, 1045, 295, 257, 8174, 337, 437, 264, 11760, 12853, 576, 312, 294, 661, 8650, 13], "temperature": 0.0, "avg_logprob": -0.24880077044169108, "compression_ratio": 1.586021505376344, "no_speech_prob": 0.0002665311621967703}, {"id": 816, "seek": 410704, "start": 4107.04, "end": 4121.04, "text": " And they found that they collected a large data set and they were able to beat the performance of state of the art machine translation system on high resource languages like English German English Russian.", "tokens": [400, 436, 1352, 300, 436, 11087, 257, 2416, 1412, 992, 293, 436, 645, 1075, 281, 4224, 264, 3389, 295, 1785, 295, 264, 1523, 3479, 12853, 1185, 322, 1090, 7684, 8650, 411, 3669, 6521, 3669, 7220, 13], "temperature": 0.0, "avg_logprob": -0.16946942806243898, "compression_ratio": 1.474820143884892, "no_speech_prob": 0.0003255317860748619}, {"id": 817, "seek": 412104, "start": 4121.04, "end": 4142.04, "text": " And the idea is that by using much more data, although noisy, you can do better than using a curated high quality data set. And this is something that we see over and over. And again, the idea here is that we need to figure out how to best combine by translation this filtering material in pre training in order to", "tokens": [400, 264, 1558, 307, 300, 538, 1228, 709, 544, 1412, 11, 4878, 24518, 11, 291, 393, 360, 1101, 813, 1228, 257, 47851, 1090, 3125, 1412, 992, 13, 400, 341, 307, 746, 300, 321, 536, 670, 293, 670, 13, 400, 797, 11, 264, 1558, 510, 307, 300, 321, 643, 281, 2573, 484, 577, 281, 1151, 10432, 538, 12853, 341, 30822, 2527, 294, 659, 3097, 294, 1668, 281], "temperature": 0.0, "avg_logprob": -0.12876802171979632, "compression_ratio": 1.643979057591623, "no_speech_prob": 0.00016653843340463936}, {"id": 818, "seek": 414204, "start": 4142.04, "end": 4160.04, "text": " get the past combination ever for solving or for improving law resource machine translation. And so I just want to maybe I should conclude here by thanking my collaborators and by telling you that", "tokens": [483, 264, 1791, 6562, 1562, 337, 12606, 420, 337, 11470, 2101, 7684, 3479, 12853, 13, 400, 370, 286, 445, 528, 281, 1310, 286, 820, 16886, 510, 538, 30830, 452, 39789, 293, 538, 3585, 291, 300], "temperature": 0.0, "avg_logprob": -0.17112373694395408, "compression_ratio": 1.4, "no_speech_prob": 0.0005048963357694447}, {"id": 819, "seek": 416004, "start": 4160.04, "end": 4176.04, "text": " if you have any questions about this lecture, you can always email me drop me a line. I'd be happy to follow up. And also in my lab, we have a lot of opportunities from internships to full time positions as a research scientist research engineers.", "tokens": [498, 291, 362, 604, 1651, 466, 341, 7991, 11, 291, 393, 1009, 3796, 385, 3270, 385, 257, 1622, 13, 286, 1116, 312, 2055, 281, 1524, 493, 13, 400, 611, 294, 452, 2715, 11, 321, 362, 257, 688, 295, 4786, 490, 35712, 281, 1577, 565, 8432, 382, 257, 2132, 12662, 2132, 11955, 13], "temperature": 0.0, "avg_logprob": -0.13298924763997397, "compression_ratio": 1.5255813953488373, "no_speech_prob": 0.0005786133115179837}, {"id": 820, "seek": 416004, "start": 4176.04, "end": 4187.04, "text": " So if you're interested or curious, just also drop me an email. Okay, thank you.", "tokens": [407, 498, 291, 434, 3102, 420, 6369, 11, 445, 611, 3270, 385, 364, 3796, 13, 1033, 11, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.13298924763997397, "compression_ratio": 1.5255813953488373, "no_speech_prob": 0.0005786133115179837}, {"id": 821, "seek": 418704, "start": 4187.04, "end": 4202.04, "text": " So maybe there's still a few people that might have questions and you're happy to stay a few more minutes for questions.", "tokens": [407, 1310, 456, 311, 920, 257, 1326, 561, 300, 1062, 362, 1651, 293, 291, 434, 2055, 281, 1754, 257, 1326, 544, 2077, 337, 1651, 13], "temperature": 0.0, "avg_logprob": -0.2204441657433143, "compression_ratio": 1.4128440366972477, "no_speech_prob": 0.0012811431661248207}, {"id": 822, "seek": 418704, "start": 4202.04, "end": 4207.04, "text": " Happy to ask your questions. Yes.", "tokens": [8277, 281, 1029, 428, 1651, 13, 1079, 13], "temperature": 0.0, "avg_logprob": -0.2204441657433143, "compression_ratio": 1.4128440366972477, "no_speech_prob": 0.0012811431661248207}, {"id": 823, "seek": 420704, "start": 4207.04, "end": 4217.04, "text": " I'd love to learn more about the models that you used. Actually, if you go back to the model that you first spoke about, spoke about right before back translation. I wanted to understand.", "tokens": [286, 1116, 959, 281, 1466, 544, 466, 264, 5245, 300, 291, 1143, 13, 5135, 11, 498, 291, 352, 646, 281, 264, 2316, 300, 291, 700, 7179, 466, 11, 7179, 466, 558, 949, 646, 12853, 13, 286, 1415, 281, 1223, 13], "temperature": 0.0, "avg_logprob": -0.25718753212376644, "compression_ratio": 1.6987951807228916, "no_speech_prob": 0.000610052258707583}, {"id": 824, "seek": 420704, "start": 4217.04, "end": 4221.04, "text": " You have a pipeline from English English, right?", "tokens": [509, 362, 257, 15517, 490, 3669, 3669, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.25718753212376644, "compression_ratio": 1.6987951807228916, "no_speech_prob": 0.000610052258707583}, {"id": 825, "seek": 420704, "start": 4221.04, "end": 4232.04, "text": " In this one, you want something like you the data augmentation techniques like in region, such as dropping the word or switching switching words to be able to make an augmented data set.", "tokens": [682, 341, 472, 11, 291, 528, 746, 411, 291, 264, 1412, 14501, 19631, 7512, 411, 294, 4458, 11, 1270, 382, 13601, 264, 1349, 420, 16493, 16493, 2283, 281, 312, 1075, 281, 652, 364, 36155, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.25718753212376644, "compression_ratio": 1.6987951807228916, "no_speech_prob": 0.000610052258707583}, {"id": 826, "seek": 423204, "start": 4232.04, "end": 4256.04, "text": " That's right. So the analogy that I made is for back translation were, yes, all these methods essentially, you don't have X and what golden X and Y pairs. And so for self training, what you do, you fantasize the target for back translation, you fantasize the input.", "tokens": [663, 311, 558, 13, 407, 264, 21663, 300, 286, 1027, 307, 337, 646, 12853, 645, 11, 2086, 11, 439, 613, 7150, 4476, 11, 291, 500, 380, 362, 1783, 293, 437, 9729, 1783, 293, 398, 15494, 13, 400, 370, 337, 2698, 3097, 11, 437, 291, 360, 11, 291, 31255, 1125, 264, 3779, 337, 646, 12853, 11, 291, 31255, 1125, 264, 4846, 13], "temperature": 0.0, "avg_logprob": -0.2190040294940655, "compression_ratio": 1.6158536585365855, "no_speech_prob": 0.0008932892233133316}, {"id": 827, "seek": 425604, "start": 4256.04, "end": 4272.04, "text": " And so you can see all these methods as a way in particular, but translation is very similar to the data augmentation that people do in vision in the sense that here, the transformation is not rule based is produced by a platform machine translation system.", "tokens": [400, 370, 291, 393, 536, 439, 613, 7150, 382, 257, 636, 294, 1729, 11, 457, 12853, 307, 588, 2531, 281, 264, 1412, 14501, 19631, 300, 561, 360, 294, 5201, 294, 264, 2020, 300, 510, 11, 264, 9887, 307, 406, 4978, 2361, 307, 7126, 538, 257, 3663, 3479, 12853, 1185, 13], "temperature": 0.0, "avg_logprob": -0.15522823595020868, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.00020790915004909039}, {"id": 828, "seek": 425604, "start": 4272.04, "end": 4279.04, "text": " It has the same objective of regularizing by adding a lot of noisy level data.", "tokens": [467, 575, 264, 912, 10024, 295, 3890, 3319, 538, 5127, 257, 688, 295, 24518, 1496, 1412, 13], "temperature": 0.0, "avg_logprob": -0.15522823595020868, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.00020790915004909039}, {"id": 829, "seek": 427904, "start": 4279.04, "end": 4291.04, "text": " So if you go back to the previous slide, when you say you fantasize the target. So in this case, you have one where you predict the gold target and one way you change the input and then predict the target.", "tokens": [407, 498, 291, 352, 646, 281, 264, 3894, 4137, 11, 562, 291, 584, 291, 31255, 1125, 264, 3779, 13, 407, 294, 341, 1389, 11, 291, 362, 472, 689, 291, 6069, 264, 3821, 3779, 293, 472, 636, 291, 1319, 264, 4846, 293, 550, 6069, 264, 3779, 13], "temperature": 0.0, "avg_logprob": -0.2515488193459707, "compression_ratio": 1.691860465116279, "no_speech_prob": 0.0006564850336872041}, {"id": 830, "seek": 427904, "start": 4291.04, "end": 4297.04, "text": " Yeah, so in for set training, the way that it works is that you take the clean input.", "tokens": [865, 11, 370, 294, 337, 992, 3097, 11, 264, 636, 300, 309, 1985, 307, 300, 291, 747, 264, 2541, 4846, 13], "temperature": 0.0, "avg_logprob": -0.2515488193459707, "compression_ratio": 1.691860465116279, "no_speech_prob": 0.0006564850336872041}, {"id": 831, "seek": 429704, "start": 4297.04, "end": 4309.04, "text": " And you pass it through your machine translation system at the previous iteration and you decode with beam or with other methods and you got a prediction for what the label should be.", "tokens": [400, 291, 1320, 309, 807, 428, 3479, 12853, 1185, 412, 264, 3894, 24784, 293, 291, 979, 1429, 365, 14269, 420, 365, 661, 7150, 293, 291, 658, 257, 17630, 337, 437, 264, 7645, 820, 312, 13], "temperature": 0.0, "avg_logprob": -0.18427733580271402, "compression_ratio": 1.5285714285714285, "no_speech_prob": 0.00025932607240974903}, {"id": 832, "seek": 429704, "start": 4309.04, "end": 4312.04, "text": " And that's now your reference.", "tokens": [400, 300, 311, 586, 428, 6408, 13], "temperature": 0.0, "avg_logprob": -0.18427733580271402, "compression_ratio": 1.5285714285714285, "no_speech_prob": 0.00025932607240974903}, {"id": 833, "seek": 431204, "start": 4312.04, "end": 4327.04, "text": " The way that you train your machine translation system is by noisy finding input. So you add noise to your input and the noise is you drop words, you swap words, and then you try to predict the target that you fantasize.", "tokens": [440, 636, 300, 291, 3847, 428, 3479, 12853, 1185, 307, 538, 24518, 5006, 4846, 13, 407, 291, 909, 5658, 281, 428, 4846, 293, 264, 5658, 307, 291, 3270, 2283, 11, 291, 18135, 2283, 11, 293, 550, 291, 853, 281, 6069, 264, 3779, 300, 291, 31255, 1125, 13], "temperature": 0.0, "avg_logprob": -0.21146734468229525, "compression_ratio": 1.8148148148148149, "no_speech_prob": 0.00040761620039120317}, {"id": 834, "seek": 431204, "start": 4327.04, "end": 4330.04, "text": " And the two targets should be the same.", "tokens": [400, 264, 732, 12911, 820, 312, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.21146734468229525, "compression_ratio": 1.8148148148148149, "no_speech_prob": 0.00040761620039120317}, {"id": 835, "seek": 431204, "start": 4330.04, "end": 4339.04, "text": " Yeah, so the prediction and these targets when you train with cross entropy loss, you try to tie them together as much as possible.", "tokens": [865, 11, 370, 264, 17630, 293, 613, 12911, 562, 291, 3847, 365, 3278, 30867, 4470, 11, 291, 853, 281, 7582, 552, 1214, 382, 709, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.21146734468229525, "compression_ratio": 1.8148148148148149, "no_speech_prob": 0.00040761620039120317}, {"id": 836, "seek": 433904, "start": 4339.04, "end": 4349.04, "text": " Yeah, this is a very, this is one of the first semi supervised learning methods that you find in the machine learning community.", "tokens": [865, 11, 341, 307, 257, 588, 11, 341, 307, 472, 295, 264, 700, 12909, 46533, 2539, 7150, 300, 291, 915, 294, 264, 3479, 2539, 1768, 13], "temperature": 0.0, "avg_logprob": -0.09513817193373195, "compression_ratio": 1.542483660130719, "no_speech_prob": 0.000538782449439168}, {"id": 837, "seek": 433904, "start": 4349.04, "end": 4360.04, "text": " There are a lot of variants of this where they have perhaps a community of experts that produces the label.", "tokens": [821, 366, 257, 688, 295, 21669, 295, 341, 689, 436, 362, 4317, 257, 1768, 295, 8572, 300, 14725, 264, 7645, 13], "temperature": 0.0, "avg_logprob": -0.09513817193373195, "compression_ratio": 1.542483660130719, "no_speech_prob": 0.000538782449439168}, {"id": 838, "seek": 436004, "start": 4360.04, "end": 4378.04, "text": " There are a lot of variants of this and it's something that makes a lot of sense, particularly for asymmetric tasks, like if you do image specific, if you do text classification, if you do summarization, then by translation is not really applicable because", "tokens": [821, 366, 257, 688, 295, 21669, 295, 341, 293, 309, 311, 746, 300, 1669, 257, 688, 295, 2020, 11, 4098, 337, 37277, 17475, 9608, 11, 411, 498, 291, 360, 3256, 2685, 11, 498, 291, 360, 2487, 21538, 11, 498, 291, 360, 14611, 2144, 11, 550, 538, 12853, 307, 406, 534, 21142, 570], "temperature": 0.0, "avg_logprob": -0.1578892639705113, "compression_ratio": 1.5609756097560976, "no_speech_prob": 0.00010407117224531248}, {"id": 839, "seek": 437804, "start": 4378.04, "end": 4398.04, "text": " you know, if you go from a label category from a categorical input to a whole sentence, that's a very difficult task, right. So by translation works really well for symmetry tasks like machine translation, but for things that are for many to one mapping,", "tokens": [291, 458, 11, 498, 291, 352, 490, 257, 7645, 7719, 490, 257, 19250, 804, 4846, 281, 257, 1379, 8174, 11, 300, 311, 257, 588, 2252, 5633, 11, 558, 13, 407, 538, 12853, 1985, 534, 731, 337, 25440, 9608, 411, 3479, 12853, 11, 457, 337, 721, 300, 366, 337, 867, 281, 472, 18350, 11], "temperature": 0.0, "avg_logprob": -0.19796558848598547, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00019925698870792985}, {"id": 840, "seek": 439804, "start": 4398.04, "end": 4408.04, "text": " it is definitely, definitely works better. I said training works well also in machine translation, when there is a lot of domain is matched between the source and the target as person.", "tokens": [309, 307, 2138, 11, 2138, 1985, 1101, 13, 286, 848, 3097, 1985, 731, 611, 294, 3479, 12853, 11, 562, 456, 307, 257, 688, 295, 9274, 307, 21447, 1296, 264, 4009, 293, 264, 3779, 382, 954, 13], "temperature": 0.0, "avg_logprob": -0.23594298543809336, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.00025404899497516453}, {"id": 841, "seek": 439804, "start": 4408.04, "end": 4422.04, "text": " Yeah, so unfortunately, these algorithms, so it's hard to say in general what works best because it really depends on the application really depends on the kind of data that you have.", "tokens": [865, 11, 370, 7015, 11, 613, 14642, 11, 370, 309, 311, 1152, 281, 584, 294, 2674, 437, 1985, 1151, 570, 309, 534, 5946, 322, 264, 3861, 534, 5946, 322, 264, 733, 295, 1412, 300, 291, 362, 13], "temperature": 0.0, "avg_logprob": -0.23594298543809336, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.00025404899497516453}, {"id": 842, "seek": 442204, "start": 4422.04, "end": 4442.04, "text": " Does anyone else have a question they'd like to ask? Well, it seems like we may be not doing another immediate question and I guess we have gone to the end of the time that we're meant to do it, so maybe we should call it bring it to a close, but thank you so much, Mark, or alieo.", "tokens": [4402, 2878, 1646, 362, 257, 1168, 436, 1116, 411, 281, 1029, 30, 1042, 11, 309, 2544, 411, 321, 815, 312, 406, 884, 1071, 11629, 1168, 293, 286, 2041, 321, 362, 2780, 281, 264, 917, 295, 264, 565, 300, 321, 434, 4140, 281, 360, 309, 11, 370, 1310, 321, 820, 818, 309, 1565, 309, 281, 257, 1998, 11, 457, 1309, 291, 370, 709, 11, 3934, 11, 420, 419, 414, 78, 13], "temperature": 0.0, "avg_logprob": -0.26729478062810125, "compression_ratio": 1.5026737967914439, "no_speech_prob": 0.0005570740322582424}, {"id": 843, "seek": 444204, "start": 4442.04, "end": 4468.04, "text": " I hope everyone really enjoyed that and I, you know, speaking as someone who did work in machine translation for a decade, I haven't so much for the last few years, I mean, you know, it actually still seems to me just amazing how successfully you can build things with these building with modeling or data and using ideas like the back translation.", "tokens": [286, 1454, 1518, 534, 4626, 300, 293, 286, 11, 291, 458, 11, 4124, 382, 1580, 567, 630, 589, 294, 3479, 12853, 337, 257, 10378, 11, 286, 2378, 380, 370, 709, 337, 264, 1036, 1326, 924, 11, 286, 914, 11, 291, 458, 11, 309, 767, 920, 2544, 281, 385, 445, 2243, 577, 10727, 291, 393, 1322, 721, 365, 613, 2390, 365, 15983, 420, 1412, 293, 1228, 3487, 411, 264, 646, 12853, 13], "temperature": 0.0, "avg_logprob": -0.1360413360595703, "compression_ratio": 1.6186046511627907, "no_speech_prob": 0.0011637749848887324}, {"id": 844, "seek": 446804, "start": 4468.04, "end": 4479.04, "text": " I mean, it's just actually incredible that that's provided such competitive machine translation systems now and, you know, obviously this is something that isn't just.", "tokens": [286, 914, 11, 309, 311, 445, 767, 4651, 300, 300, 311, 5649, 1270, 10043, 3479, 12853, 3652, 586, 293, 11, 291, 458, 11, 2745, 341, 307, 746, 300, 1943, 380, 445, 13], "temperature": 0.0, "avg_logprob": -0.20555496215820312, "compression_ratio": 1.31496062992126, "no_speech_prob": 0.0006089960807003081}, {"id": 845, "seek": 447904, "start": 4479.04, "end": 4497.04, "text": " It's just a bit of an impact of academic interests as you might have realized if you've thought about it right if you've got a company like Facebook right being able to translate well data on domains that are very far from news data or the Bible and.", "tokens": [467, 311, 445, 257, 857, 295, 364, 2712, 295, 7778, 8847, 382, 291, 1062, 362, 5334, 498, 291, 600, 1194, 466, 309, 558, 498, 291, 600, 658, 257, 2237, 411, 4384, 558, 885, 1075, 281, 13799, 731, 1412, 322, 25514, 300, 366, 588, 1400, 490, 2583, 1412, 420, 264, 6544, 293, 13], "temperature": 0.0, "avg_logprob": -0.4764019080570766, "compression_ratio": 1.4970059880239521, "no_speech_prob": 0.0003879209980368614}, {"id": 846, "seek": 449704, "start": 4497.04, "end": 4514.04, "text": " And the community of speakers is just actually super duper important to people being happy users of and members of communities yeah and I just want to add the kind of these methods are pretty general so we apply them to some organization,", "tokens": [400, 264, 1768, 295, 9518, 307, 445, 767, 1687, 1581, 610, 1021, 281, 561, 885, 2055, 5022, 295, 293, 2679, 295, 4456, 1338, 293, 286, 445, 528, 281, 909, 264, 733, 295, 613, 7150, 366, 1238, 2674, 370, 321, 3079, 552, 281, 512, 4475, 11], "temperature": 0.0, "avg_logprob": -0.35840820779605786, "compression_ratio": 1.5063291139240507, "no_speech_prob": 0.00017337077588308603}, {"id": 847, "seek": 451404, "start": 4514.04, "end": 4532.04, "text": " and they start to transfer so you know it's really beautiful that it's a set of tools that you can use them in many places and it's all about in a way aligned in domains with little.", "tokens": [293, 436, 722, 281, 5003, 370, 291, 458, 309, 311, 534, 2238, 300, 309, 311, 257, 992, 295, 3873, 300, 291, 393, 764, 552, 294, 867, 3190, 293, 309, 311, 439, 466, 294, 257, 636, 17962, 294, 25514, 365, 707, 13], "temperature": 0.0, "avg_logprob": -0.42133896567604756, "compression_ratio": 1.4736842105263157, "no_speech_prob": 8.000733942026272e-05}, {"id": 848, "seek": 451404, "start": 4532.04, "end": 4536.04, "text": " Super vision of correspondences right so.", "tokens": [4548, 5201, 295, 6805, 2667, 558, 370, 13], "temperature": 0.0, "avg_logprob": -0.42133896567604756, "compression_ratio": 1.4736842105263157, "no_speech_prob": 8.000733942026272e-05}, {"id": 849, "seek": 453604, "start": 4536.04, "end": 4546.04, "text": " Okay, thank you very much thank you thank you bye bye bye.", "tokens": [50364, 1033, 11, 1309, 291, 588, 709, 1309, 291, 1309, 291, 6543, 6543, 6543, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3083309846765855, "compression_ratio": 1.380952380952381, "no_speech_prob": 0.00020814269373659045}], "language": "en"}